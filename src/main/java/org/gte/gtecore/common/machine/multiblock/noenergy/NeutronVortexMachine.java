package org.gte.gtecore.common.machine.multiblock.noenergy;

import org.gte.gtecore.api.machine.feature.multiblock.IMultiStructureMachine;
import org.gte.gtecore.api.machine.part.GTEPartAbility;
import org.gte.gtecore.api.recipe.ContentBuilder;
import org.gte.gtecore.common.data.GTEBlocks;
import org.gte.gtecore.common.data.GTEMachines;
import org.gte.gtecore.common.data.GTEMaterials;
import org.gte.gtecore.common.data.GTERecipeModifiers;

import com.gregtechceu.gtceu.api.capability.recipe.EURecipeCapability;
import com.gregtechceu.gtceu.api.data.chemical.ChemicalHelper;
import com.gregtechceu.gtceu.api.data.tag.TagPrefix;
import com.gregtechceu.gtceu.api.gui.GuiTextures;
import com.gregtechceu.gtceu.api.gui.fancy.ConfiguratorPanel;
import com.gregtechceu.gtceu.api.gui.fancy.IFancyConfiguratorButton;
import com.gregtechceu.gtceu.api.machine.IMachineBlockEntity;
import com.gregtechceu.gtceu.api.machine.MachineDefinition;
import com.gregtechceu.gtceu.api.pattern.BlockPattern;
import com.gregtechceu.gtceu.api.pattern.FactoryBlockPattern;
import com.gregtechceu.gtceu.api.pattern.util.RelativeDirection;
import com.gregtechceu.gtceu.api.recipe.GTRecipe;
import com.gregtechceu.gtceu.common.data.GTBlocks;

import net.minecraft.network.chat.Component;

import com.lowdragmc.lowdraglib.syncdata.annotation.Persisted;
import com.lowdragmc.lowdraglib.syncdata.field.ManagedFieldHolder;
import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.util.List;
import java.util.Map;

import static com.gregtechceu.gtceu.api.machine.multiblock.PartAbility.*;
import static com.gregtechceu.gtceu.api.pattern.Predicates.*;

public final class NeutronVortexMachine extends NeutronActivatorMachine implements IMultiStructureMachine {

    private static final Map<Integer, BlockPattern> PATTERNS = new Int2ObjectOpenHashMap<>(3, 0.9F);

    private static final ManagedFieldHolder MANAGED_FIELD_HOLDER = new ManagedFieldHolder(
            NeutronVortexMachine.class, NeutronActivatorMachine.MANAGED_FIELD_HOLDER);

    @Override
    public @NotNull ManagedFieldHolder getFieldHolder() {
        return MANAGED_FIELD_HOLDER;
    }

    @Persisted
    private boolean energy;

    public NeutronVortexMachine(IMachineBlockEntity holder) {
        super(holder);
    }

    @Nullable
    @Override
    protected GTRecipe getRealRecipe(@NotNull GTRecipe recipe) {
        if (energy) {
            recipe = GTERecipeModifiers.hatchParallel(this, recipe);
            int ev = (recipe.data.getInt("ev_max") + recipe.data.getInt("ev_min")) * 5;
            eV = ev * 100000;
            recipe.duration = recipe.duration / 5;
            recipe.tickInputs.put(EURecipeCapability.CAP, List.of(ContentBuilder.builderEU((long) ev * ev)));
            return recipe;
        }
        return super.getRealRecipe(recipe);
    }

    @Override
    public void afterWorking() {
        eV = 0;
        super.afterWorking();
    }

    @Override
    protected void neutronEnergyUpdate() {
        if (energy) return;
        super.neutronEnergyUpdate();
    }

    @Override
    protected boolean working() {
        return true;
    }

    @Override
    protected double getEVtMultiplier() {
        return 1;
    }

    @Override
    public void onStructureFormed() {
        super.onStructureFormed();
        height = 100;
    }

    @Override
    public void attachConfigurators(@NotNull ConfiguratorPanel configuratorPanel) {
        super.attachConfigurators(configuratorPanel);
        configuratorPanel.attachConfigurators(new IFancyConfiguratorButton.Toggle(
                GuiTextures.INVERT_REDSTONE_BUTTON.getSubTexture(0, 0, 1, 0.5),
                GuiTextures.INVERT_REDSTONE_BUTTON.getSubTexture(0, 0.5, 1, 0.5),
                () -> energy, (clickData, pressed) -> {
                    energy = pressed;
                    updateCheck();
                })
                .setTooltipsSupplier(pressed -> List.of(Component.translatable("block.ae2.energy_acceptor").append(" ").append(pressed ? Component.translatable("gtceu.creative.activity.on") : Component.translatable("gtceu.creative.activity.off")))));
    }

    public static BlockPattern getBlockPattern(int tier, MachineDefinition definition) {
        FactoryBlockPattern builder = FactoryBlockPattern.start(RelativeDirection.BACK, RelativeDirection.UP, RelativeDirection.LEFT)
                .where(' ', any());
        return PATTERNS.computeIfAbsent(tier, t -> {
            if (t == 1) {
                return builder.aisle("    JPPPPPJ     AAAAA    ", "    JPPPPPJ     AHHHA    ", "    J     J     AHHHA    ", "    J     J     AHHHA    ", "    J     J     AAAAA    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     AAAAA    ", "    J     J     AHHHA    ", "    J     J     AHHHA    ", "    JJJJJJJ     AHHHA    ", "    JJJJJJJ     AAAAA    ")
                        .aisle("   JAAAAAAAJ   AAAAAAA   ", "   J       J   C HHH C   ", "               A HHH A   ", "         L     C HHH C   ", "        L      AAAAAAA   ", "       L                 ", "      L                  ", "     L                   ", "                         ", "                         ", "         K               ", "        K                ", "       K                 ", "      K                  ", "     K                   ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "         L               ", "        L                ", "       L                 ", "      L                  ", "     L                   ", "                         ", "                         ", "         K               ", "        K                ", "       K                 ", "      K        AAAAAAA   ", "     K         C HHH C   ", "               A HHH A   ", "   J       J   C HHH C   ", "   JAAAAAAAJ   AAAAAAA   ")
                        .aisle("   JAMMMMMAJ   AAAAAAAA  ", "   J NNNNN J   CC    CC  ", "     NNNNNL    AA    AA  ", "     NNNNN     CC    CC  ", "     NNNNN     AAABABAA  ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "    LNNNNN               ", "     NNNNNK              ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "    KNNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNNL              ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "    LNNNNN               ", "     NNNNNK              ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN     AAABABAA  ", "     NNNNN     CC    CC  ", "    KNNNNN     AA    AA  ", "   J NNNNN J   CC    CC  ", "   JAMMMMMAJ   AAAAAAAA  ")
                        .aisle("  JAAMMMMMAAJ   AAAAAAA  ", "  J  NONONL J   C     C  ", "     NONON      A     A  ", "     NONON      C     C  ", "     NONON      AAAAAAA  ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONONK              ", "    LNONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "    KNONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONONL              ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONONK              ", "    LNONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON      AAAAAAA  ", "     NONON      C     C  ", "     NONON      A     A  ", "  J KNONON  J   C     C  ", "  JAAMMMMMAAJ   AAAAAAA  ")
                        .aisle("  JAMMMMMMMAJ   AAAAAAAA ", "  J NNNNNNN J   CC    CC ", "    NNNNNNN     AA    AA ", "    NNNNNNN     CC    CC ", "    NNNNNNN     AABABAAA ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNNK             ", "    NNNNNNN              ", "    NNNNNNN              ", "   LNNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "   KNNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNNL             ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNNK             ", "    NNNNNNN              ", "    NNNNNNN              ", "   LNNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN     AABABAAA ", "    NNNNNNN     CC    CC ", "    NNNNNNN     AA    AA ", "  J NNNNNNN J   CC    CC ", "  JAMMMMMMMAJ   AAAAAAAA ")
                        .aisle(" JAAMMMMMMMAAJ   AAAAAAA ", " J  NONONON  J   C     C ", "    NONONON      A     A ", "    NONONON      C     C ", "    NONONON      AAAAAAA ", "    NONONON              ", "    NONONONK             ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "   LNONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "   KNONONON              ", "    NONONON              ", "    NONONON              ", "    NONONONL             ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONONK             ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "   LNONONON              ", "    NONONON              ", "    NONONON      AAAAAAA ", "    NONONON      C     C ", "    NONONON      A     A ", " J  NONONON  J   C     C ", " JAAMMMMMMMAAJ   AAAAAAA ")
                        .aisle(" JAMMMMMMMMMAJ   AAAAAAAA", " J NNNNNNNNN J   CADDDDDA", "   NNNNNNNNN     AADDDDDA", "   NNNNNNNNN     CADDDDDA", "   NNNNNNNNN     AAAGGGAA", "   NNNNNNNNNK           A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "  LNNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "  KNNNNNNNNN            A", "   NNNNNNNNNL           A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNNK           A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "  LNNNNNNNNN            A", "   NNNNNNNNN     AAAGGGAA", "   NNNNNNNNN     CADDDDDA", "   NNNNNNNNN     AADDDDDA", " J NNNNNNNNN J   CADDDDDA", " JAMMMMMMMMMAJ   AAAAAAAA")
                        .aisle("JAAMMMMMMMMMAAJIIIAAAAAAA", "J  NONONONON  JIIIAEEEEEB", "J  NONONONON  JIIIADDDDDA", "J  NONONONON  J   AEEEEEB", "J  NONONONONK J   AAGGGAA", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J LNONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONONL J   A      ", "J KNONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONONK J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J LNONONONON  J   AAGGGAA", "J  NONONONON  J   AEEEEEB", "J  NONONONON  JIIIADDDDDA", "J  NONONONON  JIIIAEEEEEB", "JAAMMMMMMMMMAAJIIIAAAAAAA")
                        .aisle("PAMMMMMMMMMMMAJIIIAAAAAAA", "P NNNQQQQQNNN JFFFFFFFFFB", "  NNNQQQQQNNN  IIIADDDDDA", "  NNNQQQQQNNNK    ADDDDDB", "  NNNQQQQQNNN     AAGGGAA", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", " LNNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNNL           ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", " KNNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNNK           ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN     AAGGGAA", " LNNNQQQQQNNN     ADDDDDB", "  NNNQQQQQNNN  IIIADDDDDA", "J NNNQQQQQNNN JFFFFFFFFFB", "JAMMMMMMMMMMMAJIIIAAAAAAA")
                        .aisle("PAMMMMMMMMMMMAJIIIAAAAAAA", "P NONQRQRQNON JIIIAEEEEEA", "  NONQRQRQNONK IIIADDDDDA", "  NONQRQRQNON     AEEEEEA", "  NONQRQRQNON     AAGGGAA", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", " LNONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNONL           ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", " KNONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNONK           ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON     AAGGGAA", "  NONQRQRQNON     AEEEEEA", " LNONQRQRQNON  IIIADDDDDA", "J NONQRQRQNON JIIIAEEEEEA", "JAMMMMMMMMMMMAJIIIAAAAAAA")
                        .aisle
                        .aisle("PAMMMMMMMMMMMAJIIIAAAAAAA", "P NONQRQRQNON JIIIAEEEEEA", " KNONQRQRQNON  IIIADDDDDA", "  NONQRQRQNON     AEEEEEA", "  NONQRQRQNON     AAGGGAA", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNONL           ", "  NONQRQRQNON            ", " LNONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNONK           ", "  NONQRQRQNON            ", " KNONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON            ", "  NONQRQRQNON     AAGGGAA", "  NONQRQRQNON     AEEEEEA", "  NONQRQRQNONL IIIADDDDDA", "J NONQRQRQNON JIIIAEEEEEA", "JAMMMMMMMMMMMAJIIIAAAAAAA")
                        .aisle("PAMMMMMMMMMMMAJIIIAAAAAAA", "P NNNQQQQQNNN JFFFFFFFFFB", "  NNNQQQQQNNN  IIIADDDDDA", " KNNNQQQQQNNN     ADDDDDB", "  NNNQQQQQNNN     AAGGGAA", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNNL           ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", " LNNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNNK           ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", " KNNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN            ", "  NNNQQQQQNNN     AAGGGAA", "  NNNQQQQQNNNL    ADDDDDB", "  NNNQQQQQNNN  IIIADDDDDA", "J NNNQQQQQNNN JFFFFFFFFFB", "JAMMMMMMMMMMMAJIIIAAAAAAA")
                        .aisle("JAAMMMMMMMMMAAJIIIAAAAAAA", "J  NONONONON  JIIIAEEEEEB", "J  NONONONON  JIIIADDDDDA", "J  NONONONON  J   AEEEEEB", "J KNONONONON  J   AAGGGAA", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONONL J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J LNONONONON  J   A      ", "J  NONONONONK J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J KNONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONON  J   A      ", "J  NONONONONL J   AAGGGAA", "J  NONONONON  J   AEEEEEB", "J  NONONONON  JIIIADDDDDA", "J  NONONONON  JIIIAEEEEEB", "JAAMMMMMMMMMAAJIIIAAAAAAA")
                        .aisle(" JAMMMMMMMMMAJ   AAAAAAAA", " J NNNNNNNNN J   CADDDDDA", "   NNNNNNNNN     AADDDDDA", "   NNNNNNNNN     CADDDDDA", "   NNNNNNNNN     AAAGGGAA", "  KNNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNNL           A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNNK           A", "  LNNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "  KNNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNN            A", "   NNNNNNNNNL           A", "   NNNNNNNNN     AAAGGGAA", "   NNNNNNNNN     CADDDDDA", "   NNNNNNNNN     AADDDDDA", " J NNNNNNNNN J   CADDDDDA", " JAMMMMMMMMMAJ   AAAAAAAA")
                        .aisle(" JAAMMMMMMMAAJ   AAAAAAA ", " J  NONONON  J   C     C ", "    NONONON      A     A ", "    NONONON      C     C ", "    NONONON      AAAAAAA ", "    NONONON              ", "   KNONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONONL             ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONONK             ", "    NONONON              ", "    NONONON              ", "   LNONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "   KNONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONON              ", "    NONONONL             ", "    NONONON              ", "    NONONON      AAAAAAA ", "    NONONON      C     C ", "    NONONON      A     A ", " J  NONONON  J   C     C ", " JAAMMMMMMMAAJ   AAAAAAA ")
                        .aisle("  JAMMMMMMMAJ   AAAAAAAA ", "  J NNNNNNN J   CC    CC ", "    NNNNNNN     AA    AA ", "    NNNNNNN     CC    CC ", "    NNNNNNN     AABABAAA ", "    NNNNNNN              ", "    NNNNNNN              ", "   KNNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNNL             ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNNK             ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "   LNNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "   KNNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNNL             ", "    NNNNNNN              ", "    NNNNNNN              ", "    NNNNNNN     AABABAAA ", "    NNNNNNN     CC    CC ", "    NNNNNNN     AA    AA ", "  J NNNNNNN J   CC    CC ", "  JAMMMMMMMAJ   AAAAAAAA ")
                        .aisle("  JAAMMMMMAAJ   AAAAAAA  ", "  J LNONON  J   C     C  ", "     NONON      A     A  ", "     NONON      C     C  ", "     NONON      AAAAAAA  ", "     NONON               ", "     NONON               ", "     NONON               ", "    KNONON               ", "     NONONL              ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONONK              ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "    LNONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON               ", "    KNONON               ", "     NONONL              ", "     NONON               ", "     NONON               ", "     NONON               ", "     NONON      AAAAAAA  ", "     NONON      C     C  ", "     NONON      A     A  ", "  J  NONONK J   C     C  ", "  JAAMMMMMAAJ   AAAAAAA  ")
                        .aisle("   JAMMMMMAJ   AAAAAAAA  ", "   J NNNNN J   CC    CC  ", "    LNNNNN     AA    AA  ", "     NNNNN     CC    CC  ", "     NNNNN     AAABABAA  ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNNL              ", "    KNNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNNK              ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "    LNNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNNL              ", "    KNNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN               ", "     NNNNN     AAABABAA  ", "     NNNNN     CC    CC  ", "     NNNNNK    AA    AA  ", "   J NNNNN J   CC    CC  ", "   JAMMMMMAJ   AAAAAAAA  ")
                        .aisle("   JAAAAAAAJ   AAAAAAA   ", "   J       J   C HHH C   ", "               A HHH A   ", "     L         C HHH C   ", "      L        AAAAAAA   ", "       L                 ", "        L                ", "         L               ", "                         ", "                         ", "     K                   ", "      K                  ", "       K                 ", "        K                ", "         K               ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "     L                   ", "      L                  ", "       L                 ", "        L                ", "         L               ", "                         ", "                         ", "     K                   ", "      K                  ", "       K                 ", "        K      AAAAAAA   ", "         K     C HHH C   ", "               A HHH A   ", "   J       J   C HHH C   ", "   JAAAAAAAJ   AAAAAAA   ")
                        .aisle("    JPPPPPJ     AAAAA    ", "    JPPPPPJ     AHHHA    ", "    J     J     AHHHA    ", "    J     J     AHHHA    ", "    J     J     AAAAA    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     A   A    ", "    J     J     AAAAA    ", "    J     J     AHHHA    ", "    J     J     AHHHA    ", "    JJJJJJJ     AHHHA    ", "    JJJJJJJ     AAAAA    ")
                        .where('A', blocks(GTEBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get()))
                        .where('B', blocks(GTEBlocks.DIMENSIONAL_BRIDGE_CASING.get()))
                        .where('C', blocks(GTEBlocks.CONTAINMENT_FIELD_GENERATOR.get()))
                        .where('D', blocks(GTEBlocks.SPS_CASING.get()))
                        .where('E', blocks(GTEBlocks.RESTRAINT_DEVICE.get()))
                        .where('F', blocks(GTEBlocks.ACCELERATED_PIPELINE.get()))
                        .where('G', blocks(GTEBlocks.DEGENERATE_RHENIUM_CONSTRAINED_CASING.get()))
                        .where('H', blocks(GTBlocks.HIGH_POWER_CASING.get()))
                        .where('I', blocks(GTEBlocks.TITANIUM_BOROSILICATE_GLASS.get()))
                        .where('J', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get()))
                        .where('K', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.Quantanium)))
                        .where('L', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.Vibranium)))
                        .where('M', blocks(GTEBlocks.STRONTIUM_CARBONATE_CERAMIC_RAY_ABSORBING_MECHANICAL_CUBE.get()))
                        .where('N', blocks(GTBlocks.FUSION_GLASS.get()))
                        .where('O', blocks(GTEBlocks.SPEEDING_PIPE.get()))
                        .where('P', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get())
                                .or(autoAbilities(definition.getRecipeTypes()))
                                .or(blocks(GTEMachines.NEUTRON_SENSOR.get()).setMaxGlobalLimited(1))
                                .or(abilities(GTEPartAbility.NEUTRON_ACCELERATOR).setMaxGlobalLimited(4))
                                .or(abilities(INPUT_ENERGY).setMaxGlobalLimited(1))
                                .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                                .or(abilities(MAINTENANCE).setExactLimit(1)))
                        .where('Q', blocks(GTEBlocks.ENDERIUM_BOROSILICATE_GLASS.get()))
                        .where('R', blocks(GTEBlocks.AMPROSIUM_ACTIVE_CASING.get()))
                        .where('S', controller(blocks(definition.get())))
                        .build();
            } else {
                return builder.aisle
                        .aisle("   ABBBBBBBA   ", "   A       A   ", "               ", "         D     ", "        D      ", "       D       ", "      D        ", "     D         ", "               ", "               ", "         C     ", "        C      ", "       C       ", "      C        ", "     C         ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "         D     ", "        D      ", "       D       ", "      D        ", "     D         ", "               ", "               ", "         C     ", "        C      ", "       C       ", "      C        ", "     C         ", "               ", "   A       A   ", "   ABBBBBBBA   ")
                        .aisle("   ABEEEEEBA   ", "   A FFFFF A   ", "     FFFFFD    ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "    DFFFFF     ", "     FFFFFC    ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "    CFFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFFD    ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "    DFFFFF     ", "     FFFFFC    ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "    CFFFFF     ", "   A FFFFF A   ", "   ABEEEEEBA   ")
                        .aisle("  ABBEEEEEBBA  ", "  A  FGFGFD A  ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGFC    ", "    DFGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "    CFGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGFD    ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGFC    ", "    DFGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "  A CFGFGF  A  ", "  ABBEEEEEBBA  ")
                        .aisle
                        .aisle(" ABBEEEEEEEBBA ", " A  FGFGFGF  A ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGFC   ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "   DFGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "   CFGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGFD   ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGFC   ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "   DFGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", " A  FGFGFGF  A ", " ABBEEEEEEEBBA ")
                        .aisle
                        .aisle("ABBEEEEEEEEEBBA", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGFC A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A DFGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGFD A", "A CFGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGFC A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A DFGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "ABBEEEEEEEEEBBA")
                        .aisle("HBEEEEEEEEEEEBA", "H FFFIIIIIFFF A", "  FFFIIIIIFFF  ", "  FFFIIIIIFFFC ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", " DFFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFFD ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", " CFFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFFC ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", " DFFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "A FFFIIIIIFFF A", "ABEEEEEEEEEEEBA")
                        .aisle("HBEEEEEEEEEEEBA", "H FGFIJIJIFGF A", "  FGFIJIJIFGFC ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", " DFGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGFD ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", " CFGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGFC ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", " DFGFIJIJIFGF  ", "A FGFIJIJIFGF A", "ABEEEEEEEEEEEBA")
                        .aisle
                        .aisle("HBEEEEEEEEEEEBA", "H FGFIJIJIFGF A", " CFGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGFD ", "  FGFIJIJIFGF  ", " DFGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGFC ", "  FGFIJIJIFGF  ", " CFGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGF  ", "  FGFIJIJIFGFD ", "A FGFIJIJIFGF A", "ABEEEEEEEEEEEBA")
                        .aisle("HBEEEEEEEEEEEBA", "H FFFIIIIIFFF A", "  FFFIIIIIFFF  ", " CFFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFFD ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", " DFFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFFC ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", " CFFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFF  ", "  FFFIIIIIFFFD ", "  FFFIIIIIFFF  ", "A FFFIIIIIFFF A", "ABEEEEEEEEEEEBA")
                        .aisle("ABBEEEEEEEEEBBA", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A CFGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGFD A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A DFGFGFGFGF  A", "A  FGFGFGFGFC A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A CFGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGFD A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "A  FGFGFGFGF  A", "ABBEEEEEEEEEBBA")
                        .aisle
                        .aisle(" ABBEEEEEEEBBA ", " A  FGFGFGF  A ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "   CFGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGFD   ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGFC   ", "    FGFGFGF    ", "    FGFGFGF    ", "   DFGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "   CFGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGFD   ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", "    FGFGFGF    ", " A  FGFGFGF  A ", " ABBEEEEEEEBBA ")
                        .aisle
                        .aisle("  ABBEEEEEBBA  ", "  A DFGFGF  A  ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "    CFGFGF     ", "     FGFGFD    ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGFC    ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "    DFGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "    CFGFGF     ", "     FGFGFD    ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "     FGFGF     ", "  A  FGFGFC A  ", "  ABBEEEEEBBA  ")
                        .aisle("   ABEEEEEBA   ", "   A FFFFF A   ", "    DFFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFFD    ", "    CFFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFFC    ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "    DFFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFFD    ", "    CFFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFF     ", "     FFFFFC    ", "   A FFFFF A   ", "   ABEEEEEBA   ")
                        .aisle("   ABBBBBBBA   ", "   A       A   ", "               ", "     D         ", "      D        ", "       D       ", "        D      ", "         D     ", "               ", "               ", "     C         ", "      C        ", "       C       ", "        C      ", "         C     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "     D         ", "      D        ", "       D       ", "        D      ", "         D     ", "               ", "               ", "     C         ", "      C        ", "       C       ", "        C      ", "         C     ", "               ", "   A       A   ", "   ABBBBBBBA   ")
                        .aisle
                        .where('A', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get()))
                        .where('B', blocks(GTEBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get()))
                        .where('C', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.Quantanium)))
                        .where('D', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.Vibranium)))
                        .where('E', blocks(GTEBlocks.STRONTIUM_CARBONATE_CERAMIC_RAY_ABSORBING_MECHANICAL_CUBE.get()))
                        .where('F', blocks(GTBlocks.FUSION_GLASS.get()))
                        .where('G', blocks(GTEBlocks.SPEEDING_PIPE.get()))
                        .where('H', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get())
                                .or(autoAbilities(definition.getRecipeTypes()))
                                .or(blocks(GTEMachines.NEUTRON_SENSOR.get()).setMaxGlobalLimited(1))
                                .or(abilities(GTEPartAbility.NEUTRON_ACCELERATOR).setMaxGlobalLimited(4))
                                .or(abilities(INPUT_ENERGY).setMaxGlobalLimited(1))
                                .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                                .or(abilities(MAINTENANCE).setExactLimit(1)))
                        .where('I', blocks(GTEBlocks.ENDERIUM_BOROSILICATE_GLASS.get()))
                        .where('J', blocks(GTEBlocks.AMPROSIUM_ACTIVE_CASING.get()))
                        .where('K', controller(blocks(definition.get())))
                        .build();
            }
        });
    }

    @Override
    public BlockPattern getPattern() {
        return getBlockPattern(energy ? 1 : 0, getDefinition());
    }

    @Override
    public List<BlockPattern> getMultiPattern() {
        return List.of(getBlockPattern(0, getDefinition()), getBlockPattern(1, getDefinition()));
    }
}
