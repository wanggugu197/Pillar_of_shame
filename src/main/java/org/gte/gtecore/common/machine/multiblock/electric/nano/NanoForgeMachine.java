package org.gte.gtecore.common.machine.multiblock.electric.nano;

import org.gte.gtecore.api.data.tag.GTETagPrefix;
import org.gte.gtecore.api.machine.feature.multiblock.IMultiStructureMachine;
import org.gte.gtecore.api.machine.feature.multiblock.IParallelMachine;
import org.gte.gtecore.api.machine.multiblock.ElectricMultiblockMachine;
import org.gte.gtecore.api.machine.multiblock.StorageMultiblockMachine;
import org.gte.gtecore.common.data.GTEBlocks;
import org.gte.gtecore.common.data.GTEMaterials;
import org.gte.gtecore.common.data.GTERecipeModifiers;

import com.gregtechceu.gtceu.api.data.chemical.ChemicalHelper;
import com.gregtechceu.gtceu.api.data.chemical.material.Material;
import com.gregtechceu.gtceu.api.data.chemical.material.stack.MaterialStack;
import com.gregtechceu.gtceu.api.data.tag.TagPrefix;
import com.gregtechceu.gtceu.api.machine.IMachineBlockEntity;
import com.gregtechceu.gtceu.api.machine.MachineDefinition;
import com.gregtechceu.gtceu.api.pattern.BlockPattern;
import com.gregtechceu.gtceu.api.pattern.FactoryBlockPattern;
import com.gregtechceu.gtceu.api.recipe.GTRecipe;
import com.gregtechceu.gtceu.common.data.GTBlocks;
import com.gregtechceu.gtceu.common.data.GTMaterials;

import net.minecraft.MethodsReturnNonnullByDefault;

import com.lowdragmc.lowdraglib.syncdata.annotation.Persisted;
import com.lowdragmc.lowdraglib.syncdata.field.ManagedFieldHolder;
import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
import org.jetbrains.annotations.Nullable;

import java.util.List;
import java.util.Map;

import javax.annotation.ParametersAreNonnullByDefault;

import static com.gregtechceu.gtceu.api.machine.multiblock.PartAbility.*;
import static com.gregtechceu.gtceu.api.pattern.Predicates.*;

@ParametersAreNonnullByDefault
@MethodsReturnNonnullByDefault
public final class NanoForgeMachine extends StorageMultiblockMachine implements IParallelMachine, IMultiStructureMachine {

    private static final ManagedFieldHolder MANAGED_FIELD_HOLDER = new ManagedFieldHolder(
            StorageMultiblockMachine.class, ElectricMultiblockMachine.MANAGED_FIELD_HOLDER);

    @Override
    public ManagedFieldHolder getFieldHolder() {
        return MANAGED_FIELD_HOLDER;
    }

    private static final Map<Integer, BlockPattern> PATTERNS = new Int2ObjectOpenHashMap<>(4, 0.9F);

    @Persisted
    private int machineTier;

    public NanoForgeMachine(IMachineBlockEntity holder) {
        super(holder, 64, i -> ChemicalHelper.getPrefix(i.getItem()) == GTETagPrefix.NANITES);
    }

    @Nullable
    @Override
    protected GTRecipe getRealRecipe(GTRecipe recipe) {
        if (recipe.data.getInt("nano_forge_tier") > machineTier) {
            return null;
        }
        recipe = GTERecipeModifiers.accurateParallel(this, recipe, getParallel() * (1 << (machineTier - recipe.data.getInt("nano_forge_tier"))));
        return GTERecipeModifiers.overclocking(this, recipe, machineTier > recipe.data.getInt("nano_forge_tier"), false, 1, 1);
    }

    @Override
    public void onMachineChanged() {
        machineTier = 0;
        MaterialStack stack = ChemicalHelper.getMaterialStack(getStorageStack());
        if (stack.isEmpty()) return;
        Material material = stack.material();
        if (material == GTMaterials.Carbon) {
            machineTier = 1;
        } else if (material == GTMaterials.Neutronium) {
            machineTier = 2;
        } else if (material == GTEMaterials.Draconium) {
            machineTier = 3;
        }
        updateCheck();
    }

    public static BlockPattern getBlockPattern(int tier, MachineDefinition definition) {
        FactoryBlockPattern builder = FactoryBlockPattern.start()
                .where('~', controller(blocks(definition.get())))
                .where(' ', any());
        return PATTERNS.computeIfAbsent(tier, t -> switch (t) {
            case 2 -> builder.aisle
                    .aisle("  CCCCC            ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle(" CAAAAAC           ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "    D              ", "    D              ", "    D              ", "    D              ", "    D              ")
                    .aisle("CAAAAAAAC          ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", " AA   AA           ", " AA   AA           ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "    A              ", "    A              ", "    A              ", "    A              ", "    A              ")
                    .aisle("CAAAAAAAC          ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", " AA   AA           ", " AA   AA           ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "    A              ", "    A              ", "    A              ", "    A              ", "    A              ")
                    .aisle("CAAAAAAAC   AAAAAA ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", " AA   AA           ", " AA   AA           ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "    A              ", "    A              ", "    A              ", "    A              ", "    A              ")
                    .aisle("CAAAAAAAC  AAAAAAAA", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", " AA   AA           ", " AA   AA           ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "    A              ", "    A              ", "    A              ", "    A              ", "    A              ")
                    .aisle(" CAAAAAC   AAAAAAAA", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD        AA   ", "   DAD        BB   ", "   DAD        AA   ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "  AA AA       AA   ", "  AA AA       BB   ", "  AA AA       AA   ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "    D              ", "    D              ", "    D              ", "    D              ", "    D              ")
                    .aisle("  CC~CC    AAAAAAAA", "              AA   ", "              AA   ", "              AA   ", "              AA   ", "             AAAA  ", "             BAAB  ", "             AAAA  ", "   DAD        AA   ", "   DAD        AA   ", "   DAD        AA   ", "   DAD        AA   ", "   DAD       AAAA  ", "   DAD       BAAB  ", "   DAD       AAAA  ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("           AAAAAAAA", "              AA   ", "              AA   ", "              AA   ", "              AA   ", "             AAAA  ", "             BAAB  ", "             AAAA  ", "              AA   ", "              AA   ", "              AA   ", "              AA   ", "    A        AAAA  ", "    A        BAAB  ", "    A        AAAA  ", "    A              ", "    A              ", "    A              ", "    A              ", "    A              ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("           AAAAAAAA", "                   ", "                   ", "                   ", "                   ", "              AA   ", "              BB   ", "              AA   ", "                   ", "                   ", "                   ", "                   ", "              AA   ", "              BB   ", "              AA   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle
                    .aisle
                    .where('A', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get()))
                    .where('C', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get())
                            .or(abilities(IMPORT_ITEMS))
                            .or(abilities(EXPORT_ITEMS))
                            .or(abilities(IMPORT_FLUIDS))
                            .or(abilities(INPUT_LASER)))
                    .where('B', blocks(GTBlocks.CASING_ASSEMBLY_LINE.get()))
                    .where('D', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Ruridit)))
                    .build();
            case 3 -> builder.aisle
                    .aisle("            DDDDD            ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("           DAAAAAD           ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "            CA AC            ", "            CA AC            ", "            CA AC            ", "            CA AC            ", "            AA AA            ", "            AA AA            ", "            AA AA            ", "            AA AA            ", "            AA AA            ", "            AA AA            ", "            AA AA            ", "            AA AA            ", "            CA AC            ", "            CA AC            ", "            CA AC            ", "            CA AC            ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "              C              ", "              C              ", "              C              ", "              C              ", "              C              ")
                    .aisle("          DAAAAAAAD          ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "           AA   AA           ", "           AA   AA           ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "              A              ", "              A              ", "              A              ", "              A              ", "              A              ")
                    .aisle("          DAAAAAAAD          ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "           AA   AA           ", "           AA   AA           ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "              A              ", "              A              ", "              A              ", "              A              ", "              A              ")
                    .aisle(" AAAAAA   DAAAAAAAD   AAAAAA ", "             A A             ", "    CC       A A             ", "  CC         A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "    CC       A A             ", "  CC         A A             ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "    CC      A   A            ", "  CC       AA   AA           ", "           AA   AA           ", "            A   A            ", "            A   A            ", "            A   A            ", "    CC      A   A            ", "  CC        A   A            ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "              A              ", "              A              ", "              A              ", "              A              ", "              A              ")
                    .aisle("AAAAAAAA  DAAAAAAAD  AAAAAAAA", "      C      A A             ", "             A A             ", "             A A             ", " C           A A             ", "             A A             ", "             A A             ", "      C      A A             ", "             A A             ", "             A A             ", " C          A   A            ", "            A   A            ", "            A   A            ", "      C     A   A            ", "            A   A            ", "           AA   AA           ", " C         AA   AA           ", "            A   A            ", "            A   A            ", "      C     A   A            ", "            A   A            ", "            A   A            ", " C           A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "              A              ", "              A              ", "              A              ", "              A              ", "              A              ")
                    .aisle("AAAAAAAA   DAAAAAD   AAAAAAAA", "             CAC             ", "             CAC             ", "             CAC             ", "   AA        CAC             ", "C  BB        CAC        AA   ", "   AA  C     CAC        BB   ", "             CAC        AA   ", "            CA AC            ", "            CA AC            ", "            CA AC            ", "C           CA AC            ", "       C    AA AA       AA   ", "            AA AA       BB   ", "   AA       AA AA       AA   ", "   AA       AA AA            ", "   AA       AA AA            ", "C  AA       AA AA            ", "       C    AA AA            ", "            AA AA            ", "            CA AC            ", "            CA AC            ", "            CA AC            ", "C           CA AC            ", "   AA  C     CAC             ", "   BBCC      CAC             ", "   AA        CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "              C              ", "              C              ", "              C              ", "              C              ", "              C              ")
                    .aisle("AAAAAAAA    DD~DD    AAAAAAAA", "   AA                   AA   ", "   AA                   AA   ", "   AA                   AA   ", "  AAAA                  AA   ", "C BAAB                 AAAA  ", "  AAAA C               BAAB  ", "   AA                  AAAA  ", "   AA        CAC        AA   ", "   AA        CAC        AA   ", "   AA        CAC        AA   ", "C  AA        CAC        AA   ", "   AA  C     CAC       AAAA  ", "   AA        CAC       BAAB  ", "  AAAA       CAC       AAAA  ", "  AAAA       CAC             ", "  AAAA       CAC             ", "C AAAA       CAC             ", "   AA  C     CAC             ", "   AA        CAC             ", "   AA        CAC             ", "   AA        CAC             ", "   AA        CAC             ", "C  AA        CAC             ", "  AAAA C                     ", "  BAAB                       ", "  AAAA                       ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("AAAAAAAA             AAAAAAAA", "   AA                   AA   ", "   AA                   AA   ", "   AA                   AA   ", "  AAAA                  AA   ", "  BAAB C               AAAA  ", "C AAAA                 BAAB  ", "   AA                  AAAA  ", "   AA                   AA   ", "   AA                   AA   ", "   AA                   AA   ", "   AA  C                AA   ", "C  AA         A        AAAA  ", "   AA         A        BAAB  ", "  AAAA        A        AAAA  ", "  AAAA        A              ", "  AAAA        A              ", "  AAAA C      A              ", "C  AA         A              ", "   AA         A              ", "   AA                        ", "   AA                        ", "   AA                        ", "   AA  C                     ", "C AAAA                       ", "  BAAB                       ", "  AAAA                       ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("AAAAAAAA             AAAAAAAA", "                             ", "                             ", "                             ", "   AA                        ", "   BB  C                AA   ", "C  AA                   BB   ", "                        AA   ", "                             ", "                             ", "                             ", "       C                     ", "C                       AA   ", "                        BB   ", "   AA                   AA   ", "   AA                        ", "   AA                        ", "   AA  C                     ", "C                            ", "                             ", "                             ", "                             ", "                             ", "       C                     ", "C  AA                        ", " CCBB                        ", "   AA                        ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("AAAAAAAA             AAAAAAAA", " C                           ", "                             ", "                             ", "      C                      ", "                             ", "                             ", " C                           ", "                             ", "                             ", "      C                      ", "                             ", "                             ", " C                           ", "                             ", "                             ", "      C                      ", "                             ", "                             ", " C                           ", "                             ", "                             ", "      C                      ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle(" AAAAAA               AAAAAA ", "                             ", "  CC                         ", "    CC                       ", "                             ", "                             ", "                             ", "                             ", "  CC                         ", "    CC                       ", "                             ", "                             ", "                             ", "                             ", "  CC                         ", "    CC                       ", "                             ", "                             ", "                             ", "                             ", "  CC                         ", "    CC                       ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .where('A', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get()))
                    .where('D', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get())
                            .or(abilities(IMPORT_ITEMS))
                            .or(abilities(EXPORT_ITEMS))
                            .or(abilities(IMPORT_FLUIDS))
                            .or(abilities(INPUT_LASER)))
                    .where('B', blocks(GTEBlocks.ADVANCED_ASSEMBLY_LINE_UNIT.get()))
                    .where('C', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Ruridit)))
                    .build();
            default -> builder
                    .aisle("         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ")
                    .aisle("  AAAAA  ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ")
                    .aisle(" ABBBBBA ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "    C    ", "    C    ", "    C    ", "    C    ", "    C    ")
                    .aisle("ABBBBBBBA", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", " BB   BB ", " BB   BB ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ")
                    .aisle("ABBBBBBBA", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", " BB   BB ", " BB   BB ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ")
                    .aisle("ABBBBBBBA", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", " BB   BB ", " BB   BB ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ")
                    .aisle("ABBBBBBBA", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", " BB   BB ", " BB   BB ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ")
                    .aisle(" ABBBBBA ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "    C    ", "    C    ", "    C    ", "    C    ", "    C    ")
                    .aisle("  AA~AA  ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ")
                    .where('B', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get()))
                    .where('A', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get())
                            .or(abilities(IMPORT_ITEMS))
                            .or(abilities(EXPORT_ITEMS))
                            .or(abilities(IMPORT_FLUIDS))
                            .or(abilities(INPUT_LASER)))
                    .where('C', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Ruridit))).build();
        });
    }

    @Override
    public BlockPattern getPattern() {
        return getBlockPattern(machineTier, getDefinition());
    }

    @Override
    public int getMaxParallel() {
        return machineTier > 0 ? getStorageStack().getCount() : 0;
    }

    @Override
    public List<BlockPattern> getMultiPattern() {
        return List.of(getBlockPattern(1, getDefinition()), getBlockPattern(2, getDefinition()), getBlockPattern(3, getDefinition()));
    }
}
