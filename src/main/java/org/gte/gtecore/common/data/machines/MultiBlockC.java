package org.gte.gtecore.common.data.machines;

import org.gte.gtecore.GTECore;
import org.gte.gtecore.api.machine.feature.multiblock.ICoilMachine;
import org.gte.gtecore.api.machine.feature.multiblock.ITierCasingMachine;
import org.gte.gtecore.api.machine.multiblock.*;
import org.gte.gtecore.api.machine.part.GTEPartAbility;
import org.gte.gtecore.api.pattern.GTEPredicates;
import org.gte.gtecore.common.data.*;
import org.gte.gtecore.common.machine.multiblock.electric.EnergyInjectorMachine;
import org.gte.gtecore.common.machine.multiblock.electric.bioengineering.BiochemicalReactionRoomMachine;
import org.gte.gtecore.common.machine.multiblock.electric.bioengineering.BiologicalExtractionMachine;
import org.gte.gtecore.common.machine.multiblock.electric.gcym.GCYMMultiblockMachine;
import org.gte.gtecore.common.machine.multiblock.electric.nano.NanitesIntegratedMachine;
import org.gte.gtecore.common.machine.multiblock.electric.nano.NanitesModuleMachine;
import org.gte.gtecore.common.machine.multiblock.electric.voidseries.AdvancedInfiniteDrillMachine;
import org.gte.gtecore.common.machine.multiblock.electric.voidseries.PlanetCoreDrillingMachine;
import org.gte.gtecore.common.machine.multiblock.noenergy.NeutronVortexMachine;
import org.gte.gtecore.common.machine.multiblock.noenergy.PrimitiveDistillationTowerMachine;
import org.gte.gtecore.common.machine.multiblock.noenergy.ThermalPowerPumpMachine;
import org.gte.gtecore.common.machine.multiblock.steam.LargeSteamParallelMultiblockMachine;
import org.gte.gtecore.utils.MachineUtils;

import com.gregtechceu.gtceu.GTCEu;
import com.gregtechceu.gtceu.api.GTValues;
import com.gregtechceu.gtceu.api.data.chemical.ChemicalHelper;
import com.gregtechceu.gtceu.api.data.tag.TagPrefix;
import com.gregtechceu.gtceu.api.fluids.PropertyFluidFilter;
import com.gregtechceu.gtceu.api.machine.MultiblockMachineDefinition;
import com.gregtechceu.gtceu.api.pattern.FactoryBlockPattern;
import com.gregtechceu.gtceu.api.pattern.MultiblockShapeInfo;
import com.gregtechceu.gtceu.api.pattern.util.RelativeDirection;
import com.gregtechceu.gtceu.common.data.*;
import com.gregtechceu.gtceu.common.data.machines.GTMultiMachines;
import com.gregtechceu.gtceu.common.machine.multiblock.electric.MultiblockTankMachine;
import com.gregtechceu.gtceu.utils.FormattingUtil;

import net.minecraft.network.chat.Component;
import net.minecraft.world.level.block.Blocks;
import net.minecraftforge.fluids.FluidStack;

import org.jetbrains.annotations.NotNull;

import java.util.ArrayList;
import java.util.List;

import static com.gregtechceu.gtceu.api.machine.multiblock.PartAbility.*;
import static com.gregtechceu.gtceu.api.pattern.Predicates.*;
import static org.gte.gtecore.api.GTEValues.COMPONENT_ASSEMBLY_CASING_TIER;
import static org.gte.gtecore.api.GTEValues.GLASS_TIER;
import static org.gte.gtecore.common.block.BlockMap.CALMAP;
import static org.gte.gtecore.utils.register.MachineRegisterUtils.multiblock;

public interface MultiBlockC {

    static void init() {}

    MultiblockMachineDefinition LARGE_ARC_GENERATOR = multiblock("large_arc_generator", "大型电弧发生器", GCYMMultiblockMachine::new)
            .allRotation()
            .eutMultiplierTooltips(0.8)
            .durationMultiplierTooltips(0.6)
            .parallelizableTooltips()
            .recipe(GTERecipeTypes.ARC_GENERATOR_RECIPES)
            .recipeModifier(GTERecipeModifiers.GCYM_OVERCLOCKING)
            .block(GCYMBlocks.CASING_NONCONDUCTING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle("AaaaaaA", "AaaaaaA", "ABCCCBA", "A A A A", "       ", "       ", "       ", "       ", "       ", "       ", "       ", "       ", "       ", "       ")
                    .aisle("aBBBBBa", "aD E Da", "BD C DB", "ADDDDDA", " DADAD ", "       ", "  DDD  ", "       ", "  DDD  ", "       ", "  DDD  ", "       ", "  DDD  ", "       ")
                    .aisle("aBBBBBa", "a  E  a", "B  C  B", "ADDDDDA", " DADAD ", "  A A  ", " DA AD ", "  A A  ", " DA AD ", "  A A  ", " DA AD ", "  A A  ", " DA AD ", "  A A  ")
                    .aisle("aBBBBBa", "BEEbEEF", "BCCCCCB", "ADDDDDA", " DADAD ", "       ", " D   D ", "       ", " D   D ", "       ", " D   D ", "       ", " D   D ", "       ")
                    .aisle("aBBBBBa", "a  E  a", "B  C  B", "ADDDDDA", " DADAD ", "  A A  ", " DA AD ", "  A A  ", " DA AD ", "  A A  ", " DA AD ", "  A A  ", " DA AD ", "  A A  ")
                    .aisle("aBBBBBa", "aD E Da", "BD C DB", "ADDDDDA", " DADAD ", "       ", "  DDD  ", "       ", "  DDD  ", "       ", "  DDD  ", "       ", "  DDD  ", "       ")
                    .aisle("AaaaaaA", "AaaaaaA", "ABCCCBA", "A A A A", "       ", "       ", "       ", "       ", "       ", "       ", "       ", "       ", "       ", "       ")
                    .where('A', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.StainlessSteel)))
                    .where('B', blocks(GCYMBlocks.CASING_NONCONDUCTING.get()))
                    .where('C', blocks(GTBlocks.SUPERCONDUCTING_COIL.get()))
                    .where('D', blocks(GTBlocks.CASING_PALLADIUM_SUBSTATION.get()))
                    .where('E', blocks(GCYMBlocks.ELECTROLYTIC_CELL.get()))
                    .where('F', controller(blocks(definition.get())))
                    .where('a', blocks(GCYMBlocks.CASING_NONCONDUCTING.get())
                            .or(GTEPredicates.autoMnaAccelerateAbilities(definition.getRecipeTypes()))
                            .or(autoAbilities(true, false, true)))
                    .where(' ', any())
                    .where('b', GTEPredicates.integralFramework())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/nonconducting_casing"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    MultiblockMachineDefinition LARGE_LAMINATOR = multiblock("large_laminator", "大型过胶机", GCYMMultiblockMachine::new)
            .allRotation()
            .eutMultiplierTooltips(0.8)
            .durationMultiplierTooltips(0.6)
            .parallelizableTooltips()
            .recipe(GTERecipeTypes.LAMINATOR_RECIPES)
            .recipeModifier(GTERecipeModifiers.GCYM_OVERCLOCKING)
            .block(GTBlocks.CASING_PTFE_INERT)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.BACK, RelativeDirection.UP, RelativeDirection.LEFT)
                    .aisle("ABBBB", "ABCBB", "ABBBB")
                    .aisle("ABBBB", "ADCDB", "AEEEB")
                    .aisle("ABBBB", "AFCFB", "AEEEB")
                    .aisle("ABBBB", "GaCFB", "AEEEB")
                    .aisle("ABBBB", "AFCFB", "AEEEB")
                    .aisle("ABBBB", "ADCDB", "AEEEB")
                    .aisle("ABBBB", "ABCBB", "ABBBB")
                    .where('A', blocks(GTBlocks.CASING_PTFE_INERT.get())
                            .or(GTEPredicates.autoMnaAccelerateAbilities(definition.getRecipeTypes()))
                            .or(autoAbilities(true, false, true)))
                    .where('B', blocks(GTBlocks.CASING_PTFE_INERT.get()))
                    .where('C', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Polytetrafluoroethylene)))
                    .where('D', blocks(GTBlocks.CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where('E', blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where('F', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('G', controller(blocks(definition.get())))
                    .where('a', GTEPredicates.integralFramework())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_inert_ptfe"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    MultiblockMachineDefinition LARGE_LASER_WELDER = multiblock("large_laser_welder", "大型激光焊接机", GCYMMultiblockMachine::new)
            .allRotation()
            .eutMultiplierTooltips(0.8)
            .durationMultiplierTooltips(0.6)
            .parallelizableTooltips()
            .recipe(GTERecipeTypes.LASER_WELDER_RECIPES)
            .recipeModifier(GTERecipeModifiers.GCYM_OVERCLOCKING)
            .block(GCYMBlocks.CASING_LASER_SAFE_ENGRAVING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAA", "AAA", "AAA")
                    .aisle("ECE", "C C", "FFF")
                    .aisle("ECE", "CaC", "FFF")
                    .aisle("ECE", "CDC", "FFF")
                    .aisle("ACA", "CDC", "CCC")
                    .aisle("ACA", "CDC", "CCC")
                    .aisle("ACA", "CDC", "CCC")
                    .aisle("AAA", "ABA", "AAA")
                    .where('A', blocks(GCYMBlocks.CASING_LASER_SAFE_ENGRAVING.get())
                            .or(GTEPredicates.autoMnaAccelerateAbilities(definition.getRecipeTypes()))
                            .or(autoAbilities(true, false, true)))
                    .where('B', controller(blocks(definition.get())))
                    .where('C', blocks(GCYMBlocks.CASING_LASER_SAFE_ENGRAVING.get()))
                    .where('D', blocks(GTBlocks.CASING_TUNGSTENSTEEL_PIPE.get()))
                    .where('E', blocks(GTBlocks.CASING_GRATE.get()))
                    .where('F', blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where(' ', any())
                    .where('a', GTEPredicates.integralFramework())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/laser_safe_engraving_casing"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    MultiblockMachineDefinition PRIMITIVE_DISTILLATION_TOWER = multiblock("primitive_distillation_tower", "原始蒸馏塔", PrimitiveDistillationTowerMachine::new)
            .nonYAxisRotation()
            .tooltipsText("Every 20 time units, if heat exceeds 373, it consumes up to 9000 water to regulate heat; more water cools faster, otherwise it heats up.", "每20单位时间，若热量 >373，消耗最多9000水调节热量")
            .tooltipsText("When the machine is operating, heat slightly decreases.", "机器在温度400以上工作。工作时，热量会轻微降低。")
            .tooltipsText("When fuel is depleted, the machine awaits fuel input.", "每20tick消耗一次水，水量大于100时减少热度，小于等于100时增加热度并减少时间。")
            .tooltipsText("Adding coal blocks adds 21,600 time units, coal adds 1,200, and coal dust adds 500 while raising heat.", "添加煤块增加21600时间单位，煤增加1200，煤粉增加500。")
            .tooltipsText("Heat exceeding 850 will cause an explosion; sensors periodically update heat status.", "热量超过850会爆炸，传感器定期会更新热量状态。")
            .tooltipsText("Can only operate MV-Tier recipes and below.", "只能运行MV级及以下配方")
            .recipe(GTRecipeTypes.DISTILLATION_RECIPES)
            .alwaysTryModifyRecipe(true)
            .block(GTBlocks.STEEL_HULL)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("I~O", "BCB", "BCB", "BCB", "BCB", "BCB", "BCB")
                    .aisle("AAA", "B B", "B B", "B B", "B B", "B B", "BBB")
                    .aisle("FHF", "BCB", "BCB", "BCB", "BCB", "BCB", "BCB")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTBlocks.FIREBOX_STEEL.get()))
                    .where('B', blocks(GTBlocks.STEEL_HULL.get()))
                    .where('C', abilities(EXPORT_FLUIDS_1X))
                    .where('F', abilities(IMPORT_FLUIDS))
                    .where('I', abilities(IMPORT_ITEMS))
                    .where('O', abilities(EXPORT_ITEMS))
                    .where('H', blocks(GTBlocks.FIREBOX_STEEL.get())
                            .or(blocks(GTEMachines.HEAT_SENSOR.getBlock()).setPreviewCount(1)))
                    .where(' ', air())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/steam/steel/side"), GTECore.id("block/multiblock/primitive_distillation_tower"))
            .register();

    MultiblockMachineDefinition STEAM_CRACKER = multiblock("steam_cracker", "蒸汽裂化机", h -> new LargeSteamParallelMultiblockMachine(h, 1))
            .nonYAxisRotation()
            .recipe(GTERecipeTypes.STEAM_CRACKING_RECIPES)
            .recipeModifier(LargeSteamParallelMultiblockMachine.recipeModifier(1))
            .block(GTBlocks.CASING_BRONZE_BRICKS)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("ABBABBA", "ACC~CCA", "ACCACCA", "ABBABBA")
                    .aisle("ABBABBA", "A     A", "A     A", "ABBABBA")
                    .aisle("ABBABBA", "A     A", "A     A", "ABBABBA")
                    .aisle("ABBABBA", "ACCACCA", "ACCACCA", "ABBABBA")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTBlocks.CASING_BRONZE_BRICKS.get())
                            .or(abilities(STEAM).setExactLimit(1))
                            .or(blocks(GTMachines.ITEM_IMPORT_BUS[0].getBlock()).setExactLimit(1))
                            .or(abilities(IMPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1))
                            .or(abilities(EXPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1)))
                    .where('B', blocks(GTBlocks.BRONZE_HULL.get()))
                    .where('C', blocks(GTBlocks.FIREBOX_BRONZE.get()))
                    .where(' ', air())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_bronze_plated_bricks"), GTECore.id("block/multiblock/steam_cracker"))
            .register();

    MultiblockMachineDefinition LARGE_STEAM_CRUSHER = multiblock("large_steam_crusher", "大型蒸汽破碎机", (holder) -> new LargeSteamParallelMultiblockMachine(holder, 32))
            .allRotation()
            .recipe(GTERecipeTypes.CRUSHER_RECIPES)
            .steamOverclock()
            .block(GTBlocks.CASING_BRONZE_BRICKS)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle("AAAAAAAAAAA", "bbbbbbbbbbb", "BBBBCBCBCBB", "D  BBBBBBBB", "D   BBBCBBB", "D    BBBBCC", "D     BBBC ", "DDDDDDDBBC ")
                    .aisle("AAAAAAAAAAA", "D         b", "BBBBEDEDEDB", "   B  D D B", "   BBB E EB", "    BB D DC", "     BBB   ", "D     BBCC ")
                    .aisle("AAAAAAAAAAA", "D         b", "BBBBEDEDEDB", " CCC  D D B", " CCCBB E EB", " CCCBB D DC", "     BBB   ", "D     BBC  ")
                    .aisle("AAAAAAAAAAA", "D         ~", "BBBBEDEDEDB", " C C  D D B", " C CBB E EB", " CCCBB D DC", "     BBB   ", "D     BBC  ")
                    .aisle("AAAAAAAAAAA", "D         B", "BBBBEDEDEDB", " CCC  D D B", " CCCBB E EB", " CCCBB D DC", "     BBB   ", "D     BBC  ")
                    .aisle("AAAAAAAAAAA", "D         B", "BBBBEDEDEDB", "   B  D D B", "   BBB E EB", "    BB D DC", "     BBB   ", "D     BBCC ")
                    .aisle("AAAAAAAAAAA", "bbbbbbbbbbb", "BBBBCBCBCBB", "D  BBBBBBBB", "D   BBBCBBB", "D    BBBBCC", "D     BBBC ", "DDDDDDDBBC ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTBlocks.BRONZE_BRICKS_HULL.get()))
                    .where('B', blocks(GTBlocks.CASING_BRONZE_BRICKS.get()))
                    .where('C', blocks(GTBlocks.BRONZE_HULL.get()))
                    .where('D', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Bronze)))
                    .where('E', blocks(GTBlocks.CASING_BRONZE_GEARBOX.get()))
                    .where('b', blocks(GTBlocks.CASING_BRONZE_BRICKS.get())
                            .or(abilities(STEAM).setExactLimit(1))
                            .or(abilities(STEAM_IMPORT_ITEMS).setMaxGlobalLimited(1).setPreviewCount(1))
                            .or(abilities(STEAM_EXPORT_ITEMS).setMaxGlobalLimited(2).setPreviewCount(1))
                            .or(abilities(IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(EXPORT_ITEMS).setMaxGlobalLimited(3)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_bronze_plated_bricks"), GTCEu.id("block/multiblock/steam_grinder"))
            .register();

    MultiblockMachineDefinition STEAM_CRUSHER = multiblock("steam_crusher", "蒸汽破碎机", (holder) -> new LargeSteamParallelMultiblockMachine(holder, 8))
            .allRotation()
            .recipe(GTERecipeTypes.CRUSHER_RECIPES)
            .steamOverclock()
            .block(GTBlocks.CASING_BRONZE_BRICKS)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("A   A", "bbbbb", "BCCCB", "BBBBB", " BBB ")
                    .aisle("A   A", "bBABb", "BCCCB", "BD#DB", "BB#BB")
                    .aisle("A   A", "bBABb", "BCCCB", "BD#DB", "BB#BB")
                    .aisle("A   A", "bBABb", "BCCCB", "BD#DB", "BB#BB")
                    .aisle("A   A", "bb~bb", "BCCCB", "BBBBB", " BBB ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Bronze)))
                    .where('B', blocks(GTBlocks.CASING_BRONZE_BRICKS.get()))
                    .where('C', blocks(GTBlocks.CASING_BRONZE_GEARBOX.get()))
                    .where('D', blocks(GTBlocks.CASING_BRONZE_PIPE.get()))
                    .where('S', controller(blocks(definition.get())))
                    .where('b', blocks(GTBlocks.CASING_BRONZE_BRICKS.get())
                            .or(abilities(STEAM).setExactLimit(1))
                            .or(abilities(STEAM_IMPORT_ITEMS).setMaxGlobalLimited(1).setPreviewCount(1))
                            .or(abilities(STEAM_EXPORT_ITEMS).setMaxGlobalLimited(2).setPreviewCount(1)))
                    .where('#', air())
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_bronze_plated_bricks"), GTCEu.id("block/multiblock/steam_grinder"))
            .register();

    MultiblockMachineDefinition LARGE_CRUSHER = multiblock("large_crusher", "大型破碎机", GCYMMultiblockMachine::new)
            .allRotation()
            .eutMultiplierTooltips(0.8)
            .durationMultiplierTooltips(0.6)
            .parallelizableTooltips()
            .recipe(GTERecipeTypes.CRUSHER_RECIPES)
            .recipeModifier(GTERecipeModifiers.GCYM_OVERCLOCKING)
            .block(GCYMBlocks.CASING_SECURE_MACERATION)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle("AAAAAAAAA", "XXXXXXXXX", "AAAAAAAAA", "AAAAAAAAA", "     AAA ")
                    .aisle("AAAAAAAAA", "  BCB CCX", "A BCBCBCA", "ADDAABCBA", "    A   A")
                    .aisle("AAAAAAAAA", "      Ca~", "A    CBCA", "ADDAABCBA", "    A   A")
                    .aisle("AAAAAAAAA", "  BCB CCX", "A BCBCBCA", "ADDAABCBA", "    A   A")
                    .aisle("AAAAAAAAA", "XXXXXXXXX", "AAAAAAAAA", "AAAAAAAAA", "     AAA ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GCYMBlocks.CASING_SECURE_MACERATION.get()))
                    .where('B', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Ultimet)))
                    .where('C', blocks(GTBlocks.CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where('D', blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where('X', blocks(GCYMBlocks.CASING_SECURE_MACERATION.get())
                            .or(GTEPredicates.autoMnaAccelerateAbilities(definition.getRecipeTypes()))
                            .or(autoAbilities(true, false, true)))
                    .where(' ', any())
                    .where('a', GTEPredicates.integralFramework())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/secure_maceration_casing"), GTCEu.id("block/multiblock/gcym/large_maceration_tower"))
            .register();

    MultiblockMachineDefinition MOLECULAR_TRANSFORMER = multiblock("molecular_transformer", "分子重组仪", ElectricMultiblockMachine::new)
            .allRotation()
            .parallelizableTooltips()
            .customTooltipsBuilder(false, true, false)
            .recipe(GTERecipeTypes.MOLECULAR_TRANSFORMER_RECIPES)
            .parallelizableOverclock()
            .block(GTBlocks.CASING_PTFE_INERT)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAAAA", "  aaaaa  ", "  ACACA  ", "  ACACA  ", "  AAAAA  ", "  DDDDD  ", "  DDDDD  ", "    D    ", "  DDDDD  ", "         ", "         ")
                    .aisle("AAAAAAAAA", " A     A ", " A     A ", " A     A ", " A     A ", " D     D ", " DEEEEED ", "  EEEEE  ", " DEEEEED ", "  AAAAA  ", "         ")
                    .aisle("AAAAAAAAA", "a       a", "A       A", "A       A", "A       A", "D       D", "DEE   EED", " EE   EE ", "DEE   EED", " AAFFFAA ", "   GGG   ")
                    .aisle("AAAAAAAAA", "a  G G  a", "C  G G  C", "C  G G  C", "A  G G  A", "D  G G  D", "DE G G ED", " E G G E ", "DE G G ED", " AFFFFFA ", "  GGFGG  ")
                    .aisle("AAAAAAAAA", "a   H   a", "A   H   A", "A   H   A", "A   H   A", "D   H   D", "DE  H  ED", "DE  H  ED", "DE  H  ED", " AFFFFFA ", "  GFFFG  ")
                    .aisle("AAAAAAAAA", "a  G G  a", "C  G G  C", "C  G G  C", "A  G G  A", "D  G G  D", "DE G G ED", " E G G E ", "DE G G ED", " AFFFFFA ", "  GGFGG  ")
                    .aisle("AAAAAAAAA", "a       a", "A       A", "A       A", "A       A", "D       D", "DEE   EED", " EE   EE ", "DEE   EED", " AAFFFAA ", "   GGG   ")
                    .aisle("AAAAAAAAA", " A     A ", " A     A ", " A     A ", " A     A ", " D     D ", " DEEEEED ", "  EEEEE  ", " DEEEEED ", "  AAAAA  ", "         ")
                    .aisle("AAAAAAAAA", "  aa~aa  ", "  ACACA  ", "  ACACA  ", "  AAAAA  ", "  DDDDD  ", "  DDDDD  ", "    D    ", "  DDDDD  ", "         ", "         ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTBlocks.CASING_PTFE_INERT.get()))
                    .where('C', blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where('D', blocks(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST.get()))
                    .where('E', blocks(GCYMBlocks.MOLYBDENUM_DISILICIDE_COIL_BLOCK.get()))
                    .where('F', blocks(GTBlocks.STEEL_HULL.get()))
                    .where('G', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.StainlessSteel)))
                    .where('H', blocks(GTBlocks.CASING_TITANIUM_PIPE.get()))
                    .where('a', blocks(GTBlocks.CASING_PTFE_INERT.get())
                            .or(GTEPredicates.autoLaserAbilities(definition.getRecipeTypes()))
                            .or(autoAbilities(true, false, true)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_inert_ptfe"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition EXTREME_ELECTRIC_FURNACE = multiblock("extreme_electric_furnace", "极限电炉", CoilCrossRecipeMultiblockMachine::createCoilParallel)
            .nonYAxisRotation()
            .recipe(GTRecipeTypes.ALLOY_SMELTER_RECIPES)
            .recipe(GTRecipeTypes.FURNACE_RECIPES)
            .coilParallelTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("                AAAAAAAAA                ", "                                         ", "                                         ", "                                         ", "                                         ", "                EEEEEEEEE                ", "                                         ", "                                         ", "                EEEEEEEEE                ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("              DAFFFFFFFFFAD              ", "              D FFFFFFFFF D              ", "              D FFFFFFFFF D              ", "              D FGGFFFGGF D              ", "              D FGGFFFGGF D              ", "              DEFFFFFFFFFED              ", "              D FGGFFFGGF D              ", "              D FGGFFFGGF D              ", "              DEFFFFFFFFFED              ", "              D FGGFFFGGF D              ", "              D FGGFFFGGF D              ", "              D FFFFFFFFF D              ", "              D FFFFFFFFF D              ", "              D FFFFFFFFF D              ", "              DDDDDDDDDDDDD              ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("H   H  H       AFFFFFFFFFA       H  H   H", "H   H  H        F  I I  F        H  H   H", "H   H  H        F  I I  F        H  H   H", "H   H  H        F  I I  F        H  H   H", "H   H  H        F  I I  F        H  H   H", "H   H  H       EF  I I  FE       H  H   H", "H   H  H        FIII IIIF        H  H   H", "HHHHHHHH        FIII IIIF        HHHHHHHH", "               EF  I I  FE               ", "                J  I I  J                ", "                J  I I  J                ", "                J  I I  J                ", "                F  I I  F                ", "                FFFFFFFFF                ", "              D  KKKKKKK  D              ", "                                         ", "                                         ", "                                         ", "                                         ", "                   HHH                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("FFFFFFFFFFFFF AFFFFFFFFFFFA FFFFFFFFFFFFF", "FFLLFLLFFFFFF  F   M M   F  FFFFFFLLFLLFF", "FFLLFLLFFFFFF  F         F  FFFFFFLLFLLFF", "FFFFFFFFFFFFF  F         F  FFFFFFFFFFFFF", "FFFFFFFFFFFFF  F         F  FFFFFFFFFFFFF", "FFFFFFFFFFFFF EF         FE FFFFFFFFFFFFF", "FFFFFFFFFFFFF  F         F  FFFFFFFFFFFFF", "  HFFFFFFFFFF  F         F  FFFFFFFFFFH  ", "    EE    EE  EFF       FFE  EE    EE    ", "               FF   N   FF               ", "               FF   N   FF               ", "               FF   N   FF               ", "               FF   N   FF               ", "               FFKKKNKKKFF               ", "              D  KKKNKKK  D              ", "                    N                    ", "                    N                    ", "                    N                    ", "                    N                    ", "                  HHNHH                  ", "                    N                    ", "                    N                    ", "                    N                    ", "                    N                    ", "                   MNM                   ", "                   MNM                   ")
                    .aisle("FFFFFFFFFFFFF AFFFFFFFFFFFA FFFFFFFFFFFFF", "FO          F  F         F  F          OF", "FO          F  F         F  F          OF", "FO  P       F  F         F  F       P  OF", "FO          F  F         F  F          OF", "FO          F EF         FE F          OF", "FFF QI      F  F         F  F      IQ FFF", "  HFQFFFFFFFFQQQ         QQQFFFFFFFFQFH  ", "    QQQQQQQQQQEF         FEQQQQQQQQQQ    ", "    EE    EE   J   NNN   J   EE    EE    ", "               J   NNN   J               ", "               J   NNN   J               ", "               F   NNN   F               ", "               FFKKNNNKKFF               ", "              D  KKNNNKK  D              ", "                   NNN                   ", "                   NNN                   ", "                   NNN                   ", "                   NNN                   ", "                HHHNNNHHH                ", "                   NNN                   ", "                   NNN                   ", "                   NNN                   ", "                   NNN                   ", "                 MMNNNMM                 ", "                 MMNNNMM                 ")
                    .aisle("FFFFFFFFFFFF AFFFFFFFFFFFFFA FFFFFFFFFFFF", " P         F  F M MM MM M F  F         P ", " P         F  F           F  F         P ", " PPPP      F  F           F  F      PPPP ", "FO         F  F           F  F         OF", "GO         F EF           FE F         OG", "FFF II     F  F           F  F     II FFF", "  HFFFFFFFFF  F           F  FFFFFFFFFH  ", "    EE    EE EFF         FFE EE    EE    ", "    EE    EE  FF N  N  N FF  EE    EE    ", "              FF N  N  N FF              ", "              FF N  N  N FF              ", "              FF N  N  N FF              ", "              FFKNKKNKKNKFF              ", "              DKKNKKNKKNKKD              ", "                 N  N  N                 ", "                 N  N  N                 ", "                 N  N  N                 ", "                 N RNR N                 ", "               HHNHRNRHNHH               ", "                 N RNR N                 ", "                 N  N  N                 ", "                 N  N  N                 ", "                 N  N  N                 ", "                MNMMNMMNM                ", "                MNMMNMMNM                ")
                    .aisle("FFFFFFFFFFFF AFFFFFFFFFFFFFA FFFFFFFFFFFF", "FO         F  F           F  F         OF", "FO         F  F           F  F         OF", "FO  P      F  F           F  F      P  OF", "FO         F  F           F  F         OF", "GO         F EF           FE F         OG", "FSF QI     F  F           F  F     IQ FSF", "  HFQFFFFFFFQQQ           QQQFFFFFFFQFH  ", "    QQQQQQQQQEF           FEQQQQQQQQQ    ", "    EE    EE  J NNN   NNN J  EE    EE    ", "    EE    EE  J NNN   NNN J  EE    EE    ", "    EE    EE  J NNN   NNN J  EE    EE    ", "    EE    EE  F NNN   NNN F  EE    EE    ", "    EE    EE  FFNNNKKKNNNFF  EE    EE    ", "    EE    EE  DKNNNKKKNNNKD  EE    EE    ", "    EE    EE    NNN   NNN    EE    EE    ", "    EE    EE    NNN   NNN    EE    EE    ", "    EE    EE    NNN   NNN    EE    EE    ", "    EE    EE    NNNHHHNNN    EE    EE    ", "    EE    EE   HNNNRRRNNNH   EE    EE    ", "    EE    EE    NNNHHHNNN    EE    EE    ", "                NNN   NNN                ", "                NNN   NNN                ", "                NNN   NNN                ", "                NNNHHHNNN                ", "                NNNM MNNN                ")
                    .aisle("FFFFFFFFFFF  FFFFFFFFFFFFFFF  FFFFFFFFFFF", " P        F  F  M M   M M  F  F        P ", " P        F  F             F  F        P ", " PPPP     F  F             F  F     PPPP ", "FO        F  F             F  F        OF", "GO        F EF             FE F        OG", "FSF QI    F  F             F  F    IQ FSF", "  HFQFFFFFF QQQ           QQQ FFFFFFQFH  ", "    QQQQQQQQQFF           FFQQQQQQQQQ    ", "    EE    EE FF  N     N  FF EE    EE    ", "             FF  N     N  FF             ", "             FF  N     N  FF             ", "             FF  N     N  FF             ", "             FFFKNKKKKKNKFFF             ", "              DKKNKKKKKNKKD              ", "                 N     N                 ", "                 N     N                 ", "                 N     N                 ", "    KE    EE   K NRH HRN K   EE    EK    ", "    KKKKKKKKKKKK NRR RRN KKKKKKKKKKKK    ", "    KE    EE   K NRH HRN K   EE    EK    ", "                 N     N                 ", "                 N     N                 ", "                 N     N                 ", "                MNHHHHHNM                ", "                MN M M NM                ")
                    .aisle("FFFFFFFFFFF  FFFFFFFFFFFFFFF  FFFFFFFFFFF", "FO        F  T             T  F        OF", "FO        F  T             T  F        OF", "FO  P     F  T             T  F     P  OF", "FO        F  T             T  F        OF", "GO        F ET             TE F        OG", "FSF II    F  T             T  F    II FSF", "  HFFFFFFFF  T             T  FFFFFFFFH  ", "    E     E  T             T  E    EE    ", "    EE    EE T             T EE    EE    ", "             T             T             ", "             T             T             ", "             T             T             ", "             FFFKKKKKKKKKFFF             ", "              DKKKKKKKKKKKD              ", "                                         ", "                                         ", "                                         ", "    KHHHHHHHHHHKHHHH HHHHKHHHHHHHHHHK    ", "    RRRRRRRRRRRRRRRR RRRRRRRRRRRRRRRR    ", "    KHHHHHHHHHHKHHHH HHHHKHHHHHHHHHHK    ", "                                         ", "                                         ", "                                         ", "                MMHHHHHMM                ", "                MMMMMMMMM                ")
                    .aisle("FFFFFFFFFFF  FFFFFFFFFFFFFFF  FFFFFFFFFFF", " P        F  F  M M   M M  F  F        P ", " P        F  F             F  F        P ", " PPPP     F  F             F  F     PPPP ", "FO        F  F             F  F        OF", "GO        F EF             FE F        OG", "FSF QI    F  F             F  F    IQ FSF", "  HFQFFFFFF QQQ           QQQ FFFFFFQFH  ", "    QQQQQQQQQFF           FFQQQQQQQQQ    ", "    EE    EE FF  N     N  FF EE    EE    ", "             FF  N     N  FF             ", "             FF  N     N  FF             ", "             FF  N     N  FF             ", "             FFFKNKKKKKNKFFF             ", "              DKKNKKKKKNKKD              ", "                 N     N                 ", "                 N     N                 ", "                 N     N                 ", "    KE    EE   K NRH HRN K   EE    EK    ", "    KKKKKKKKKKKK NRR RRN KKKKKKKKKKKK    ", "    KE    EE   K NRH HRN K   EE    EK    ", "                 N     N                 ", "                 N     N                 ", "                 N     N                 ", "                MNHHHHHNM                ", "                MN M M NM                ")
                    .aisle("FFFFFFFFFFFF AFFFFFFFFFFFFFA FFFFFFFFFFFF", "FO         F  F           F  F         OF", "FO         F  F           F  F         OF", "FO  P      F  F           F  F      P  OF", "FO         F  F           F  F         OF", "GO         F EF           FE F         OG", "FSF QI     F  F           F  F     IQ FSF", "  HFQFFFFFFFQQQ           QQQFFFFFFFQFH  ", "    QQQQQQQQQEF           FEQQQQQQQQQ    ", "    EE    EE  J NNN   NNN J  EE    EE    ", "    EE    EE  J NNN   NNN J  EE    EE    ", "    EE    EE  J NNN   NNN J  EE    EE    ", "    EE    EE  F NNN   NNN F  EE    EE    ", "    EE    EE  FFNNNKKKNNNFF  EE    EE    ", "    EE    EE  DKNNNKKKNNNKD  EE    EE    ", "    EE    EE    NNN   NNN    EE    EE    ", "    EE    EE    NNN   NNN    EE    EE    ", "    EE    EE    NNN   NNN    EE    EE    ", "    EE    EE    NNNHHHNNN    EE    EE    ", "    EE    EE   HNNNRRRNNNH   EE    EE    ", "    EE    EE    NNNHHHNNN    EE    EE    ", "                NNN   NNN                ", "                NNN   NNN                ", "                NNN   NNN                ", "                NNNHHHNNN                ", "                NNNM MNNN                ")
                    .aisle("FFFFFFFFFFFF AFFFFFFFFFFFFFA FFFFFFFFFFFF", " P         F  F M MM MM M F  F         P ", " P         F  F           F  F         P ", " PPPP      F  F           F  F      PPPP ", "FO         F  F           F  F         OF", "GO         F EF           FE F         OG", "FFF II     F  F           F  F     II FFF", "  HFFFFFFFFF  F           F  FFFFFFFFFH  ", "    EE    EE EFF         FFE EE    EE    ", "    EE    EE  FF N  N  N FF  EE    EE    ", "              FF N  N  N FF              ", "              FF N  N  N FF              ", "              FF N  N  N FF              ", "              FFKNKKNKKNKFF              ", "              DKKNKKNKKNKKD              ", "                 N  N  N                 ", "                 N  N  N                 ", "                 N  N  N                 ", "                 N RNR N                 ", "                HNHRNRHNHH               ", "                 N RNR N                 ", "                 N  N  N                 ", "                 N  N  N                 ", "                 N  N  N                 ", "                MNMMNMMNM                ", "                MNMMNMMNM                ")
                    .aisle("FFFFFFFFFFFFF AFFFFFFFFFFFA FFFFFFFFFFFFF", "FO        B F  F         F  F B        OF", "FO          F  F         F  F          OF", "FO  P       F  F         F  F       P  OF", "FO          F  F         F  F          OF", "FO          F EF         FE F          OF", "FFF QI      F  F         F  F      IQ FFF", "  HFQFFFFFFFFQQQ         QQQFFFFFFFFQFH  ", "    QQQQQQQQQQEF         FEQQQQQQQQQQ    ", "    EE    EE   J   NNN   J   EE    EE    ", "               J   NNN   J               ", "               J   NNN   J               ", "               F   NNN   F               ", "               FFKKNNNKKFF               ", "              D  KKNNNKK  D              ", "                   NNN                   ", "                   NNN                   ", "                   NNN                   ", "                   NNN                   ", "                 HHNNNHHH                ", "                   NNN                   ", "                   NNN                   ", "                   NNN                   ", "                   NNN                   ", "                 MMNNNMM                 ", "                 MMNNNMM                 ")
                    .aisle("FFFFFFFFFFFFF AFFFFFFFFFFFA FFFFFFFFFFFFF", "FFLLFLLFFFBFF  F   M M   F  FFBFFFLLFLLFF", "FFLLFLLFFFFFF  F         F  FFFFFFLLFLLFF", "FFFFFFFFFFFFF  F         F  FFFFFFFFFFFFF", "FFFFFFFFFFFFF  F         F  FFFFFFFFFFFFF", "FFFFFFFFFFFFF EF         FE FFFFFFFFFFFFF", "FFFFFFFFFFFFF  F         F  FFFFFFFFFFFFF", "  HFFFFFFFFFF  F         F  FFFFFFFFFFH  ", "    EE    EE  EFF       FFE  EE    EE    ", "               FF   N   FF               ", "               FF   N   FF               ", "               FF   N   FF               ", "               FF   N   FF               ", "               FFKKKNKKKFF               ", "              D  KKKNKKK  D              ", "                    N                    ", "                    N                    ", "                    N                    ", "                    N                    ", "                   HNHH                  ", "                    N                    ", "                    N                    ", "                    N                    ", "                    N                    ", "                   MNM                   ", "                   MNM                   ")
                    .aisle("H   H  H DDD   AFFFFFFFFFA   DDD H  H   H", "H   H  H DBD    F  I I  F    DBD H  H   H", "H   H  H DDD    F  I I  F    DDD H  H   H", "H   H  H        F  I I  F        H  H   H", "H   H  H        F  I I  F        H  H   H", "H   H  H       EF  I I  FE       H  H   H", "H   H  H        F  I I  F        H  H   H", "HHHHHHHH        F  I I  F        HHHHHHHH", "               EF  I I  FE               ", "                J  I I  J                ", "                J  I I  J                ", "                J  I I  J                ", "                FIII IIIF                ", "                FFFFFFFFF                ", "              D  KKKKKKK  D              ", "                                         ", "                                         ", "                                         ", "                                         ", "                   HHH                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("               AFFFFFFFFFA               ", "          B     FFFFFFFFF     B          ", "                FFFFFFFFF                ", "                FGGFFFGGF                ", "                FGGFFFGGF                ", "               EFFFFFFFFFE               ", "                FGGFFFGGF                ", "                FGGFFFGGF                ", "               EFFFFFFFFFE               ", "                FGGFFFGGF                ", "                FGGFFFGGF                ", "                FFFBBBFFF                ", "                FFFBBBFFF                ", "                FFFFFFFFF                ", "              DDDDDDDDDDDDD              ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("         DDD  D aaAAAAAaa D  DDD         ", "         DBD  D   aAAAa   D  DBD         ", "         DDD  D   aAAAa   D  DDD         ", "           D  D           D  D           ", "           D  D           D  D           ", "           D  D EEEEEEEEE D  D           ", "           D  D           D  D           ", "           D  D           D  D           ", "           D  D EEEEEEEEE D  D           ", "           D  D           D  D           ", "           D  D           D  D           ", "           DDDD    BBB    DDDD           ", "           D  D    BBB    D  D           ", "           D  D           D  D           ", "              D           D              ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("                  aaaaa                  ", "          B       aa~aa       B          ", "          B       aaaaa       B          ", "          B                   B          ", "          B                   B          ", "          B                   B          ", "          B                   B          ", "          B                   B          ", "          B                   B          ", "          B                   B          ", "          B                   B          ", "          BD  D     B     D  DB          ", "          BBBBBBBBBBBBBBBBBBBBB          ", "           D  D           D  D           ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get()))
                    .where('a', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE)))
                    .where('B', blocks(GTBlocks.CASING_STEEL_TURBINE.get()))
                    .where('D', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Naquadah)))
                    .where('E', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get()))
                    .where('F', blocks(GCYMBlocks.CASING_HIGH_TEMPERATURE_SMELTING.get()))
                    .where('G', blocks(GCYMBlocks.HEAT_VENT.get()))
                    .where('H', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.TungstenSteel)))
                    .where('I', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('J', blocks(GTEBlocks.HSSS_BOROSILICATE_GLASS.get()))
                    .where('K', blocks(GTBlocks.STEEL_HULL.get()))
                    .where('L', blocks(GTBlocks.CASING_EXTREME_ENGINE_INTAKE.get()))
                    .where('M', blocks(GTEBlocks.SUPERCRITICAL_TURBINE_CASING.get()))
                    .where('N', heatingCoils())
                    .where('O', blocks(GTBlocks.MACHINE_CASING_UV.get()))
                    .where('P', blocks(GCYMBlocks.ELECTROLYTIC_CELL.get()))
                    .where('Q', blocks(GTBlocks.CASING_STAINLESS_TURBINE.get()))
                    .where('R', blocks(GTBlocks.CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where('S', abilities(MUFFLER))
                    .where('T', blocks(GTBlocks.CASING_GRATE.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/naquadah_reinforced_plant_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition HIGH_TEMPERATURE_REACTION_HUB = multiblock("high_temperature_reaction_hub", "高温反应枢纽", CoilCrossRecipeMultiblockMachine.createHatchParallel(false))
            .nonYAxisRotation()
            .recipe(GTERecipeTypes.LIQUEFACTION_FURNACE_RECIPES)
            .recipe(GTERecipeTypes.REACTION_FURNACE_RECIPES)
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GCYMBlocks.CASING_HIGH_TEMPERATURE_SMELTING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle("   AJJAJJA       AJJAJJA   ", "    AAAAA         AAAAA    ", "      A             A      ", "      A             A      ", "      A             A      ", "      A             A      ", "      A             A      ", "      A             A      ", "      A             A      ", "      A             A      ", "      A             A      ", "      A             A      ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("  AJAAAAAJA     AJAAAAAJA  ", "    BBBBB         BBBBB    ", "    BBBBB         BBBBB    ", "    BBBBB         BBBBB    ", "    BBBBB         BBBBB    ", "    OOOOO         OOOOO    ", "    OOOOO         OOOOO    ", "    BBBBB         BBBBB    ", "      B             B      ", "      B             B      ", "    BBBBB         BBBBB    ", "    BBBBB         BBBBB    ", "      A             A      ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle(" AJAAAAAAAJA   AJAAAAAAAJA ", "   BBBBBBB       BBBBBBB   ", "   B MMM B       B MMM B   ", "   B MMM B       B MMM B   ", "   B MMM B       B MMM B   ", "   O MMM O       O MMM O   ", "   O MMM O       O MMM O   ", "   BBMMMBB       BBMMMBB   ", "     MMM           MMM     ", "     MMM           MMM     ", "   BBMMMBB       BBMMMBB   ", "   BBMMMBB       BBMMMBB   ", "    AAAAA         AAAAA    ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("AJAAAAAAAAAJA AJAAAAAAAAAJA", "  BBBBBBBBB     BBBBBBBBB  ", "  B       B     B       B  ", "  B       B     B       B  ", "  B       B     B       B  ", "  O       O     O       O  ", "  O       O     O       O  ", "  BB     BB     BB     BB  ", "    MM MM         MM MM    ", "    MM MM         MM MM    ", "  BB     BB     BB     BB  ", "  BB     BB     BB     BB  ", "   AAAAAAA       AAAAAAA   ", "     JJJ           JJJ     ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("JAAAAAAAAAAAJ JAAAAAAAAAAAJ", "ABBBBBBBBBBBA ABBBBBBBBBBBA", " B    L    B   B    L    B ", " B         B   B         B ", " B         B   B         B ", " O         O   O         O ", " O         O   O         O ", " BB       BB   BB       BB ", "   MM   MM       MM   MM   ", "   MM   MM       MM   MM   ", " BB       BB   BB       BB ", " BB   L   BB   BB   L   BB ", "  AATTTTTAA     AATTTTTAA  ", "    JJJJJ         JJJJJ    ", "     J J           J J     ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("JAAAAAAAAAAAJ JAAAAAAAAAAAJ", "ABBBBBBBBBBBA ABBBBBBBBBBBA", " BM   L   MB   BM   L   MB ", " BM       MB   BM       MB ", " BM       MB   BM       MB ", " OM       MO   OM       MO ", " OM       MO   OM       MO ", " BM       MB   BM       MB ", "  MM     MM     MM     MM  ", "  MM     MM     MM     MM  ", " BM       MB   BM       MB ", " BM   L   MB   BM   L   MB ", "  AAT   TAA     AAT   TAA  ", "   JJUUUJJ       JJUUUJJ   ", "    JJJJJ         JJJJJ    ", "     HHH           HHH     ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("AAAAAAAAAAAAA AAAAAAAAAAAAA", "ABBBBBBBBBBBA ABBBBBBBBBBBA", "ABM LLLLL MBA ABM LLLLL MBA", "ABM   L   MBA ABM   L   MBA", "ABM   L   MBA ABM   L   MBA", "AOM   L   MOA AOM   L   MOA", "AOM   L   MOA AOM   L   MOA", "ABM   L   MBA ABM   L   MBA", "ABM   L   MBA ABM   L   MBA", "ABM   L   MBA ABM   L   MBA", "ABM   L   MBA ABM   L   MBA", "ABM LLLLL MBA ABM LLLLL MBA", " AAAT L TAAA   AAAT L TAAA ", "   JJULUJJ       JJULUJJ   ", "     JIJ           JIJ     ", "     HHH           HHH     ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("JAAAAAAAAAAAJ JAAAAAAAAAAAJ", "ABBBBBBBBBBBA ABBBBBBBBBBBA", " BM   L   MB   BM   L   MB ", " BM       MB   BM       MB ", " BM       MB   BM       MB ", " OM       MO   OM       MO ", " OM       MO   OM       MO ", " BM       MB   BM       MB ", "  MM     MM     MM     MM  ", "  MM     MM     MM     MM  ", " BM       MB   BM       MB ", " BM   L   MB   BM   L   MB ", "  AAT   TAA     AAT   TAA  ", "   JJUUUJJ       JJUUUJJ   ", "    JJIJJ         JJIJJ    ", "     HHH           HHH     ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("JAAAAAAAAAAAJ JAAAAAAAAAAAJ", "ABBBBBBBBBBBA ABBBBBBBBBBBA", " B    L    B   B    L    B ", " B         B   B         B ", " B         B   B         B ", " O         O   O         O ", " O         O   O         O ", " BB       BB   BB       BB ", "   MM   MM       MM   MM   ", "   MM   MM       MM   MM   ", " BB       BB   BB       BB ", " BB   L   BB   BB   L   BB ", "  AATTTTTAA     AATTTTTAA  ", "    JJJJJ         JJJJJ    ", "     JIJ           JIJ     ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("AJAAAAAAAAAJA AJAAAAAAAAAJA", "  BBBBBBBBB     BBBBBBBBB  ", "  B       B     B       B  ", "  B       B     B       B  ", "  B       B     B       B  ", "  O       O     O       O  ", "  O       O     O       O  ", "  BB     BB     BB     BB  ", "    MM MM         MM MM    ", "    MM MM         MM MM    ", "  BB     BB     BB     BB  ", "  BB     BB     BB     BB  ", "   AAAAAAA       AAAAAAA   ", "     JJJ           JJJ     ", "      I             I      ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle(" AJAAAAAAAJA   AJAAAAAAAJA ", "   BBBBBBBH     HBBBBBBB   ", "   B MMMSSH  SSSSSSMMM B   ", "   B MMM BH     HB MMM B   ", "   B MMM B       B MMM B   ", "   O MMM O       O MMM O   ", "   O MMM O       O MMM O   ", "   BBMMMBB       BBMMMBB   ", "     MMM           MMM     ", "     MMM           MMM     ", "   BBMMMBB       BBMMMBB   ", "   BBMMMBB       BBMMMBB   ", "    AAAAA         AAAAA    ", "      IIIIIIIIIIIIIIIIIII  ", "      I             I      ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("  AJAAAAAJA     AJAAAAAJA  ", "    BBBBBHH     HHBBBBB    ", "    BBBBBSH  S  HHBBBBB    ", "    BBBBBHH     HHBBBBB    ", "    BBBBB         BBBBB    ", "    OOOOO         OOOOO    ", "    OOOOO         OOOOO    ", "    BBBBB         BBBBB    ", "      B             B      ", "      B             B      ", "    BBBBB         BBBBB    ", "    BBBBB         BBBBB    ", "      A             A      ", "                        I  ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("   AJJAJJA       AJJAJJA   ", "    AAAAA         AAAAA    ", "      A  S   S      A      ", "      A  S   S      A      ", "      A  S   S      A      ", "      A  S   S      A      ", "      A             A      ", "      A             A      ", "      A             A      ", "      A             A      ", "      A             A      ", "      A             A      ", "                           ", "                        I  ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle
                    .aisle("     AAAAAAAAAAAAA    AAAAA", "     ABBBBBBBBBBBA     CCC ", "     ABDDDBBBDDDBA     CCC ", "     ABBBBBBBBBBBA     CCC ", "     AAAAAAAAAAAAA     CCC ", "      A HSH HSH A      CCC ", "        HHH HHH        CCC ", "                       CCC ", "                       CCC ", "                        A  ", "                           ", "                           ", "                           ", "                        I  ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("    ABBBBBBBBBBBBBA   A   A", "    FB     G     BF   CCCCC", "    FB           BF   CC CC", "    FB           BF   CC CC", "    AAAAAAAAAAAAAAA   CC CC", "      BBBSBBBSBBB     CC CC", "      A         A     CC CC", "                      CC CC", "                      CC CC", "                       AAA ", "                       HHH ", "                       HHH ", "                       HHH ", "                        I  ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("   ABBBBBBBBBBBBBBBA  A   A", "   FB      G      BF  CCCCC", "   FB             BF  C   C", "   FB             BF  C   C", "   AAA           AAA  C   C", "      BBBSBBBSBBB     C   C", "      BBBBBBBBBBB     C   C", "      A         A     C   C", "                      C   C", "         HHHHH        AAIAA", "                       HIH ", "                       HIH ", "                       HIH ", "                        I  ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "         HHHHH             ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("  ABBBBBBBBBBBBBBBBBA A   A", "  FB       G       BF CCCCC", "  FB               BF CC CC", "  FB               BF CC CC", "  AAAA           AAAA CC CC", "    JJ   G   G   JJ   CC CC", "    JJBBBBBBBBBBBJJ   CC CC", "    JJBBBBBBBBBBBJJ   CC CC", "      B   DDD   B     CC CC", "         HEEEH         AAA ", "          EKE          HHH ", "          EKE          HHH ", "          EKE          HHH ", "          EKE           I  ", "          EKE              ", "          EKE              ", "          EKE              ", "          EKE              ", "          EKE              ", "          EKE              ", "         HEKEH             ", "          EKE              ", "          EKE              ", "                           ", "                           ", "                           ")
                    .aisle(" ABBBBBBBBBBBBBBBBBBBAAAAAA", " FB        G        BF CCC ", " FB                 BF CCC ", " FB                 BF CCC ", " AAA               AAA CCC ", "   J     G   G     J   CCC ", "   JJ             JJ   CCC ", "   JJBBBBBBBBBBBBBJJ   CCC ", "     BBBBBBBBBBBBB     CCC ", "         HELEH          A  ", "          ELE              ", "          ELE              ", "          ELE              ", "          ELE           I  ", "          ELE              ", "          ELE              ", "          ELE              ", "          ELE              ", "          ELE              ", "          ELE              ", "         HELEH             ", "          ELE              ", "          EKE              ", "                           ", "                           ", "                           ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA    ", "AB         G         BA    ", "AB                   BA    ", "AB                   BA    ", "AAAA               AAAA    ", "   J     G   G     J       ", "   J               J       ", "   JB             BJ       ", "    BBBJJJJJJJJJBBB        ", "       BBBBBBBBB           ", "       BBBBBBBBB           ", "       BBBBBBBBB           ", "          BBB              ", "       BBBBBBBBB        I  ", "       BBBBBBBBB           ", "          BBB              ", "       BBBBBBBBB           ", "       BBBBBBBBB           ", "          BBB              ", "       BBBBBBBBB           ", "       BBBBBBBBB           ", "         HELEH             ", "         HEKEH             ", "         HHHHH             ", "                           ", "                           ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA BBB", "B          G          B BBB", "B                     B BBB", "B                     B    ", "AA                   AA    ", "ABB      G   G      BBA    ", " ABB               BBA     ", "  ABB             BBA      ", "   BBB           BBB       ", "      BB       BB          ", "      BB       BB          ", "      BB       BB          ", "        MMMMMMM            ", "      BB       BB       I  ", "      BB       BB          ", "        MMMMMMM            ", "      BB       BB          ", "      BB       BB          ", "        MMMMMMM            ", "      BB       BB          ", "      BBBBBBBBBBB          ", "          ELE              ", "          EKE              ", "                           ", "                           ", "                           ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA BBB", "B      M   G   M      B BBB", "D      MMMMMMMMM      D BBB", "B      M       M      B    ", "AA     MMMMMMMMM     AA    ", " BB    M G   G M    BB     ", "  BB   MMMMMMMMM   BB      ", "   BB  M       M  BB       ", "    BJ M       M JB        ", "     BBM       MBB         ", "     BBM       MBB         ", "     BBM       MBB         ", "       MM     MM           ", "     BBM       MBB      I  ", "     BBM       MBB         ", "       MM     MM           ", "     BBM       MBB         ", "     BBM       MBB         ", "       MM MMM MM           ", "     BB         BB         ", "     BBNNBBBBBNNBB         ", "          ELE              ", "          EKE              ", "                           ", "                           ", "                           ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA HHH", "B          G          B H H", "D      M       M      D HHH", "B                     B    ", "AA     M       M     AA    ", " BB      G   G      BB     ", "  BB   M       M   BB      ", "   BB             BB       ", "    BJ           JB        ", "     B           B         ", "     B           B         ", "     B           B         ", "      MM       MM          ", "     B           B      I  ", "     B           B         ", "      MM       MM          ", "     B           B         ", "     B           B         ", "      MM  MMM  MM          ", "     B           B         ", "     BBNNBBBBBNNBB         ", "         AELEA             ", "         AEKEA             ", "         AAAAA             ", "         AAAAA             ", "                           ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA BBb", "B          G          B BBb", "D      M       M      D BBb", "B                     B    ", "AA     M       M     AA    ", "OBBGGGGGGGGGGGGGGGGGBBO    ", "OPBB   M G   G M   BBPO    ", "OPPBB    G   G    BBPPO    ", "OOOOBJ   G   G   JBOOOO    ", "  HHHB   G   G   BHHH      ", "     B   G   G   B         ", "     B   G   G   B         ", "      M  G   G  M          ", "     B   G   G   B      I  ", "     B   G   G   B         ", "      M  G   G  M          ", "     B   G   G   B         ", "     B   G   G   B         ", "      M  GMMMG  M          ", "     B   G   G   B         ", "  HHHBBBBBBBBBBBBBHHH      ", "     H  AA L AA  H         ", "     H  AA   AA  H         ", "     H  AAAAAAA  H         ", "        AAFAFAA            ", "         A A A             ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA BBb", "B          G          B BBb", "B      M       M      B BBb", "B                     B    ", "AA     M       M     AA    ", "OBB      G   G      BBO    ", "Q BB   M       M   BB Q    ", "Q  BB             BB  Q    ", "OQQDBJ           JBDQQO    ", "  HEEB           BEEH      ", "   EEB           BEE       ", "   EEB           BEE       ", "   EEBM         MBEE       ", "   EEB           BEE    I  ", "   EEB           BEE       ", "   EEBM         MBEE       ", "   EEB           BEE       ", "   EEB           BEE       ", "   EEBM   MMM   MBEE       ", "   EEB   L   L   BEE       ", "  HEEBBBBBBBBBBBBBEEH      ", "   EEEEEE  L  EEEEEE       ", "   EEEEEE     EEEEEE       ", "     H  AAAAAAA  H         ", "        AAFAFAA            ", "         A A A             ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA BBb", "BGGGGGGGGGGGGGGGGGGGGGB BB~", "B      M   G   M      B BBb", "B          G          B    ", "AA     M   G   M     AA    ", "OBB      G G G      BBO    ", "Q BB   M   G   M   BB Q    ", "Q  BB      G      BB  Q    ", "OQQDBJ     G     JBDQQO    ", "  HELB     G     BLEH      ", "   KLB     G     BLK       ", "   KLB     G     BLK       ", "   KLBM    G    MBLK       ", "   KLB     G     BLK    I  ", "   KLB     G     BLK       ", "   KLBM    G    MBLK       ", "   KLB     G     BLK       ", "   KLB     G     BLK       ", "   KLBMMMMMGMMMMMBLK       ", "   KLB   LLLLL   BLK       ", "  HKLBBBBBBLBBBBBBLKH      ", "   KLLLLLLLLLLLLLLLK       ", "   KKKKKK     KKKKKK       ", "     H  AAAAAAA  H         ", "        AAFAFAA            ", "         A A A             ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA BBb", "B          G          B BBb", "B      M       M      B BBb", "B                     B    ", "AA     M       M     AA    ", "OBB      G   G      BBO    ", "Q BB   M       M   BB Q    ", "Q  BB             BB  Q    ", "OQQDBJ           JBDQQO    ", "  HEEB           BEEH      ", "   EEB           BEE       ", "   EEB           BEE       ", "   EEBM         MBEE       ", "   EEB           BEE    I  ", "   EEB           BEE       ", "   EEBM         MBEE       ", "   EEB           BEE       ", "   EEB           BEE       ", "   EEBM   MMM   MBEE       ", "   EEB   L   L   BEE       ", "  HEEBBBBBBBBBBBBBEEH      ", "   EEEEEE  L  EEEEEE       ", "   EEEEEE     EEEEEE       ", "     H  AAAAAAA  H         ", "        AAFAFAA            ", "         A A A             ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA BBb", "B          G          B BBb", "D      M       M      D BBb", "B                     B    ", "AA     M       M     AA    ", "OBBGGGGGGGGGGGGGGGGGBBO    ", "OPBB   M G   G M   BBPO    ", "OPPBB    G   G    BBPPO    ", "OOOOBJ   G   G   JBOOOO    ", "  HHHB   G   G   BHHH      ", "     B   G   G   B         ", "     B   G   G   B         ", "      M  G   G  M          ", "     B   G   G   B      I  ", "     B   G   G   B         ", "      M  G   G  M          ", "     B   G   G   B         ", "     B   G   G   B         ", "      M  GMMMG  M          ", "     B   G   G   B         ", "  HHHBBBBBBBBBBBBBHHH      ", "     H  AA L AA  H         ", "     H  AA   AA  H         ", "     H  AAAAAAA  H         ", "        AAFAFAA            ", "         A A A             ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA HHH", "B          G          B HBH", "D      M       M      D HHH", "B                     B    ", "AA     M       M     AA    ", " BB      G   G      BB     ", "  BB   M       M   BB      ", "   BB             BB       ", "    BJ           JB        ", "     B           B         ", "     B           B         ", "     B           B         ", "      MM       MM          ", "     B           B      I  ", "     B           B         ", "      MM       MM          ", "     B           B         ", "     B           B         ", "      MM  MMM  MM          ", "     B           B         ", "     BBNNBBBBBNNBB         ", "         AELEA             ", "         AEKEA             ", "         AAAAA             ", "         AAAAA             ", "                           ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA BBB", "B      M   G   M      B BBB", "D      MMMMMMMMM      D BBB", "B      M       M      B    ", "AA     MMMMMMMMM     AA    ", " BB    M G   G M    BB     ", "  BB   MMMMMMMMM   BB      ", "   BB  M       M  BB       ", "    BJ M       M JB        ", "     BBM       MBB         ", "     BBM       MBB         ", "     BBM       MBB         ", "       MM     MM           ", "     BBM       MBB      I  ", "     BBM       MBB         ", "       MM     MM           ", "     BBM       MBB         ", "     BBM       MBB         ", "       MM MMM MM           ", "     BB         BB         ", "     BBNNBBBBBNNBB         ", "          ELE              ", "          EKE              ", "                           ", "                           ", "                           ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA BBB", "B          G          B BBB", "B                     B BBB", "B                     B    ", "AA                   AA    ", "ABB      G   G      BBA    ", " ABB               BBA     ", "  ABB             BBA      ", "   BBB           BBB       ", "      BB       BB          ", "      BB       BB          ", "      BB       BB          ", "        MMMMMMM            ", "      BB       BB       I  ", "      BB       BB          ", "        MMMMMMM            ", "      BB       BB          ", "      BB       BB          ", "        MMMMMMM            ", "      BB       BB          ", "      BBBBBBBBBBB          ", "          ELE              ", "          EKE              ", "                           ", "                           ", "                           ")
                    .aisle("ABBBBBBBBBBBBBBBBBBBBBA    ", "AB         G         BA    ", "AB                   BA    ", "AB                   BA    ", "AAAA               AAAA    ", "   J     G   G     J       ", "   J               J       ", "   JB             BJ       ", "    BBBJJJJJJJJJBBB        ", "       BBBBBBBBB           ", "       BBBBBBBBB           ", "       BBBBBBBBB           ", "          BBB              ", "       BBBBBBBBB        I  ", "       BBBBBBBBB           ", "          BBB              ", "       BBBBBBBBB           ", "       BBBBBBBBB           ", "          BBB              ", "       BBBBBBBBB           ", "       BBBBBBBBB           ", "         HELEH             ", "         HEKEH             ", "         HHHHH             ", "                           ", "                           ")
                    .aisle(" ABBBBBBBBBBBBBBBBBBBAAAAAA", " FB        G        BF CCC ", " FB                 BF CCC ", " FB                 BF CCC ", " AAA               AAA CCC ", "   J     G   G     J   CCC ", "   JJ             JJ   CCC ", "   JJBBBBBBBBBBBBBJJ   CCC ", "     BBBBBBBBBBBBB     CCC ", "         HELEH          A  ", "          ELE              ", "          ELE              ", "          ELE              ", "          ELE           I  ", "          ELE              ", "          ELE              ", "          ELE              ", "          ELE              ", "          ELE              ", "          ELE              ", "         HELEH             ", "          ELE              ", "          EKE              ", "                           ", "                           ", "                           ")
                    .aisle("  ABBBBBBBBBBBBBBBBBA A   A", "  FB       G       BF CCCCC", "  FB               BF CC CC", "  FB               BF CC CC", "  AAAA           AAAA CC CC", "    JJ   G   G   JJ   CC CC", "    JJBBBBBBBBBBBJJ   CC CC", "    JJBBBBBBBBBBBJJ   CC CC", "      B  EEEEE  B     CC CC", "         HEEEH         AAA ", "          EKE          HHH ", "          EKE          HHH ", "          EKE          HHH ", "          EKE           I  ", "          EKE              ", "          EKE              ", "          EKE              ", "          EKE              ", "          EKE              ", "          EKE              ", "         HEKEH             ", "          EKE              ", "          EKE              ", "                           ", "                           ", "                           ")
                    .aisle("   ABBBBBBBBBBBBBBBA  A   A", "   FB      G      BF  CCCCC", "   FB             BF  C   C", "   FB             BF  C   C", "   AAA           AAA  C   C", "      BBBBBBBBBBB     C   C", "      BBBBBBBBBBB     C   C", "      A  FFFFF  A     C   C", "         EFFFE        C   C", "         HHHHH        AAIAA", "                       HIH ", "                       HIH ", "                       HIH ", "                        I  ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "         HHHHH             ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("    ABBBBBBBBBBBBBA   A   A", "    FB     G     BF   CCCCC", "    FB           BF   CC CC", "    FB           BF   CC CC", "    AAAAAAAAAAAAAAA   CC CC", "      BBBBBBBBBBB     CC CC", "      A  FFFFF  A     CC CC", "         FFFFF        CC CC", "         EFFFE        CC CC", "                       AAA ", "                       HHH ", "                       HHH ", "                       HHH ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("     AAAAAAAAAAAAA    AAAAA", "     ABBBBBBBBBBBA     CCC ", "     ABDDDBBBDDDBA     CCC ", "     ABBBBBBBBBBBA     CCC ", "     AAAAAAAAAAAAA     CCC ", "      A  EEEEE  A      CCC ", "         EFFFE         CCC ", "         EFFFE         CCC ", "         EEEEE         CCC ", "                        A  ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTBlocks.STEEL_HULL.get()))
                    .where('B', blocks(GCYMBlocks.CASING_HIGH_TEMPERATURE_SMELTING.get()))
                    .where('b', blocks(GCYMBlocks.CASING_HIGH_TEMPERATURE_SMELTING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE)))
                    .where('C', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where('D', blocks(GCYMBlocks.HEAT_VENT.get()))
                    .where('E', blocks(GTEBlocks.OXIDATION_RESISTANT_HASTELLOY_N_MECHANICAL_CASING.get()))
                    .where('F', blocks(GTBlocks.CASING_GRATE.get()))
                    .where('G', blocks(GTBlocks.CASING_TUNGSTENSTEEL_PIPE.get()))
                    .where('H', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Naquadah)))
                    .where('I', blocks(GTBlocks.CASING_STEEL_TURBINE.get()))
                    .where('J', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get()))
                    .where('K', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.HastelloyN)))
                    .where('L', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('M', heatingCoils())
                    .where('N', abilities(MUFFLER))
                    .where('O', blocks(GTBlocks.CASING_INVAR_HEATPROOF.get()))
                    .where('P', blocks(GCYMBlocks.ELECTROLYTIC_CELL.get()))
                    .where('Q', blocks(GTBlocks.CASING_EXTREME_ENGINE_INTAKE.get()))
                    .where('S', blocks(GTBlocks.CASING_STAINLESS_TURBINE.get()))
                    .where('T', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.TungstenSteel)))
                    .where('U', blocks(GTBlocks.HERMETIC_CASING_ZPM.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/high_temperature_smelting_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition MEGA_MIXER = multiblock("mega_mixer", "巨型搅拌机", CrossRecipeMultiblockMachine::createHatchParallel)
            .nonYAxisRotation()
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .recipe(GTRecipeTypes.MIXER_RECIPES)
            .block(GTEBlocks.IRIDIUM_CASING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.BACK, RelativeDirection.UP, RelativeDirection.LEFT)
                    .aisle(" AAAAAAAAAAAAAAAAA", "  AAAAAAA AAAAAAA ", "    AAA     AAA   ", "     A       A    ", "     A       A    ", "     A       A    ", "     B       B    ", "     B       B    ", "                  ")
                    .aisle(" ACCCCCCCCCCCCCCCA", "     D   D   D    ", "     DBBBDBBBD    ", "     D   D   D    ", "     D   D   D    ", "     D   D   D    ", "     D   D   D    ", "     D   D   D    ", "         D        ")
                    .aisle(" ACCCCCCCCCCCCCCCA", " A               A", "     EEEEEEEEE    ", "      FFFFFFF     ", "      FFFFFFF     ", "      FFFFFFF     ", "      FFFFFFF     ", "     DFFFFFFFD    ", "         D        ")
                    .aisle("cACCCCCCCCCCCCCCCA", "cA   EEEEEEEEE   A", "     EFFFFFFFE    ", "    FF       FF   ", "    FF       FF   ", "    FF B B B FF   ", "    FF       FF   ", "    FF       FF   ", "      FFFFFFF     ")
                    .aisle("cACCCCCCCCCCCCCCCA", "cAGBBBBBBBBBBBBBGA", "cAGB EFFFFFFFE BGA", " AGBFF       FFBGA", " AGF           FGA", " AGF B B B B   FGA", " AAF           FAA", "    FF       FF   ", "      FFFFFFF     ")
                    .aisle("cACCCCCCCCCCCCCCCA", "~DC  EEEEEEEEE  CD", "cDC  EFFFFFFFE  CD", " DC FF B B B FF CD", " DCF B B B B B FCD", " DCIIGGGGGGGGGIICD", " DDF B B B B B FDD", " AAAFF B B B FFAAA", "      FFFFFFF     ")
                    .aisle("cACCCCCCCCCCCCCCCA", "cAGBBBBBBBBBBBBBGA", "cAGB EFFFFFFFE BGA", " AGBFF       FFBGA", " AGF           FGA", " AGF B B B B B FGA", " AAF           FAA", "    FF       FF   ", "      FFFFFFF     ")
                    .aisle("cACCCCCCCCCCCCCCCA", "cA   EEEEEEEEE   A", "     EFFFFFFFE    ", "    FF       FF   ", "    FF       FF   ", "    FF B B B FF   ", "    FF       FF   ", "    FF       FF   ", "      FFFFFFF     ")
                    .aisle(" ACCCCCCCCCCCCCCCA", " A               A", "     EEEEEEEEE    ", "      FFFFFFF     ", "      FFFFFFF     ", "      FFFFFFF     ", "      FFFFFFF     ", "     DFFFFFFFD    ", "         D        ")
                    .aisle(" ACCCCCCCCCCCCCCCA", "     D   D   D    ", "     DBBBDBBBD    ", "     D   D   D    ", "     D   D   D    ", "     D   D   D    ", "     D   D   D    ", "     D   D   D    ", "         D        ")
                    .aisle(" AAAAAAAAAAAAAAAAA", "  AAAAAAA AAAAAAA ", "    AAA     AAA   ", "     A       A    ", "     A       A    ", "     A       A    ", "     B       B    ", "     B       B    ", "                  ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.HYPER_MECHANICAL_CASING.get()))
                    .where('B', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Neutronium)))
                    .where('C', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('c', blocks(GTEBlocks.IRIDIUM_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('D', blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where('E', blocks(GTEBlocks.MOLECULAR_CASING.get()))
                    .where('F', blocks(GCYMBlocks.CASING_REACTION_SAFE.get()))
                    .where('G', blocks(GTEBlocks.AMPROSIUM_GEARBOX.get()))
                    .where('I', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/iridium_casing"), GTCEu.id("block/multiblock/gcym/large_mixer"))
            .register();

    MultiblockMachineDefinition COMPONENT_ASSEMBLER = multiblock("component_assembler", "部件组装机", TierCasingMultiblockMachine.createMachine(COMPONENT_ASSEMBLY_CASING_TIER))
            .allRotation()
            .tooltipsText("Can only run recipes up to IV tier", "只能运行IV及以下配方")
            .recipe(GTERecipeTypes.COMPONENT_ASSEMBLY_RECIPES)
            .overclock()
            .block(GTBlocks.CASING_STEEL_SOLID)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AaaaaaA", "ACDDDCA", "ACDDDCA", "ACDDDCA", "AAAAAAA")
                    .aisle("aAEEEAa", "FG   GF", "FG   GF", "FG   GF", "AACACAA")
                    .aisle("aAEEEAa", "FHI IHF", "FJI IJF", "FG   GF", "AACACAA")
                    .aisle("aAEEEAa", "FG   GF", "FG   GF", "FG   GF", "AACACAA")
                    .aisle("AaaBaaA", "ACDDDCA", "ACDDDCA", "ACDDDCA", "AAAAAAA")
                    .where('A', blocks(GTBlocks.CASING_STEEL_SOLID.get()))
                    .where('a', blocks(GTBlocks.CASING_STEEL_SOLID.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('B', controller(blocks(definition.get())))
                    .where('C', blocks(GTBlocks.CASING_GRATE.get()))
                    .where('D', blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where('E', blocks(GTBlocks.STEEL_HULL.get()))
                    .where('F', GTEPredicates.tierBlock(CALMAP, COMPONENT_ASSEMBLY_CASING_TIER))
                    .where('G', blocks(GTEBlocks.MULTI_FUNCTIONAL_CASING.get()))
                    .where('H', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Steel)))
                    .where('I', blocks(Blocks.IRON_BARS))
                    .where('J', blocks(GTBlocks.CASING_STEEL_GEARBOX.get()))
                    .where(' ', any())
                    .build())
            .beforeWorking((m, r) -> ((ITierCasingMachine) m).getCasingTier(COMPONENT_ASSEMBLY_CASING_TIER) < GTValues.LuV)
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_solid_steel"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    MultiblockMachineDefinition THREE_DIMENSIONAL_PRINTER = multiblock("three_dimensional_printer", "3D打印机", ElectricMultiblockMachine::new)
            .allRotation()
            .parallelizableTooltips()
            .recipe(GTERecipeTypes.THREE_DIMENSIONAL_PRINTER_RECIPES)
            .parallelizableOverclock()
            .block(GTBlocks.CASING_TITANIUM_STABLE)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle("AAAAAAa", "ABBBAC ", "ABBBAC ", "AAAAAC ", "ADDDAC ", "ADDDAC ", "AAAAAC ", "     C ")
                    .aisle("AAAAAAa", "BBBBBAa", "A EEBAA", "D FFAAA", "D    AA", "D    AA", "AEEEAAA", " CCCCC ")
                    .aisle("AAAAAAa", "BBBBBAG", "A EEBHA", "D  FAHA", "D F  HA", "D F  HA", "AEHHHHA", "       ")
                    .aisle("AAAAAAa", "BBBBBAa", "A EEBAA", "D FFAAA", "D    AA", "D    AA", "AEEEAAA", " CCCCC ")
                    .aisle("AAAAAAa", "ABBBAC ", "ABBBAC ", "AAAAAC ", "ADDDAC ", "ADDDAC ", "AAAAAC ", "     C ")
                    .where('A', blocks(GTBlocks.CASING_TITANIUM_STABLE.get()))
                    .where('a', blocks(GTBlocks.CASING_TITANIUM_STABLE.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(autoAbilities(true, false, true)))
                    .where('B', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where('C', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.StainlessSteel)))
                    .where('D', blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where('E', blocks(GTEBlocks.MULTI_FUNCTIONAL_CASING.get()))
                    .where('F', blocks(Blocks.IRON_BARS))
                    .where('G', controller(blocks(definition.get())))
                    .where('H', blocks(GTBlocks.CASING_TITANIUM_PIPE.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_stable_titanium"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    MultiblockMachineDefinition GRAVITY_BENDING_DEVICE = multiblock("gravity_bending_device", "引力弯折装置", CrossRecipeMultiblockMachine::createHatchParallel)
            .allRotation()
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .recipe(GTRecipeTypes.BENDER_RECIPES)
            .block(GTEBlocks.DIMENSION_INJECTION_CASING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("                             ", "           A A A A           ", "AAA        A A A A        AAA", "AAABBBBBBBBAAAAAAABBBBBBBBAAA", "AAA        ACCCCCA        AAA", "AAA        AIIIIIA        AAA", "AAA        AIILIIA        AAA", "AAA        AIIIIIA        AAA", "AAA        ACCCCCA        AAA", "AAABBBBBBBBAAAAAAABBBBBBBBAAA", "AAA        A A A A        AAA", "           A A A A           ", "                             ")
                    .aisle("           A A A A           ", "AAA                       AAA", "AAABBBBBBBB       BBBBBBBBAAA", "A          DDDDDDD          A", "A          DDDDDDD          A", "A          DDDDDDD          A", "A          DDDDDDD          A", "A          DDDDDDD          A", "A          DDDDDDD          A", "A          DDDDDDD          A", "AAABBBBBBBB       BBBBBBBBAAA", "AAA                       AAA", "           A A A A           ")
                    .aisle("AAA        A A A A        AAA", "AAABBBBBBBB       BBBBBBBBAAA", "EFFFFFFFFFFDDDDDDDFFFFFFFFFFE", "EF        F       F        FE", "EF        F       F        FE", "EGGHHHHHHHGGGGGGGGGHHHHHHHGGE", "EGGHHHHHHHGGGGGGGGGHHHHHHHGGE", "EGGHHHHHHHGGGGGGGGGHHHHHHHGGE", "E         F                FE", "E         F                FE", "EFFFFFFFFFFDDDDDDDFFFFFFFFFFE", "AAABBBBBBBB       BBBBBBBBAAA", "AAA        A A A A        AAA")
                    .aisle("AAABBBBBBBBAAAAAAABBBBBBBBAAA", "A          DDDDDDD          A", "EF        F       F        FE", "A                           A", "AGGHHHHHHHGGGGGGGGGHHHHHHHGGA", "AGG       GGGGGGGGG       GGA", "AG        E       E        GA", "AGG       GGGGGGGGG       GGA", "AGGHHHHHHHGGGGGGGGGHHHHHHHGGA", "A                           A", "E         F                FE", "A          DDDDDDD          A", "AAABBBBBBBBAAAAAAABBBBBBBBAAA")
                    .aisle("AAA        AAAAAAA        AAA", "A          DDDDDDD          A", "EF        F       F        FE", "AGGHHHHHHHGGGGGGGGGHHHHHHHGGA", "AGG       GGGGGGGGG       GGA", "AG        E       E        GA", "AG        E       E        GA", "AG        E       E        GA", "AGG       GGGGGGGGG       GGA", "AGGHHHHHHHGGGGGGGGGHHHHHHHGGA", "E         F                FE", "A          DDDDDDD          A", "AAA        AAAAAAA        AAA")
                    .aisle("AAA        AAAAAAA        AAA", "A          DDDDDDD          A", "EGGHHHHHHHGGGGGGGGGHHHHHHHGGE", "AGG       GGGGGGGGG       GGA", "AG        E       E        GA", "IGJJAAJJAAKKKKKKKKKAAJJAAJJGI", "IG                         GI", "IGJJAAJJAAKKKKKKKKKAAJJAAJJGI", "AG        E       E        GA", "AGG       GGGGGGGGG       GGA", "EGGHHHHHHHGGGGGGGGGHHHHHHHGGE", "A          DDDDDDD          A", "AAA        AAAAAAA        AAA")
                    .aisle("AAA        AAAAAAA        AAA", "A          DDDDDDD          A", "EGGHHHHHHHGGGGGGGGGHHHHHHHGGE", "AG        E       E        GA", "AG        E       E        GA", "IG                         GI", "IG                         GI", "IG                         GI", "AG        E       E        GA", "AG        E       E        GA", "EGGHHHHHHHGGGGGGGGGHHHHHHHGGE", "A          DDDDDDD          A", "AAA        AAAAAAA        AAA")
                    .aisle("AAA        AAAAAAA        AAA", "A          DDDDDDD          A", "EGGHHHHHHHGGGGGGGGGHHHHHHHGGE", "AGG       GGGGGGGGG       GGA", "AG        E       E        GA", "IGJJAAJJAAKKKKKKKKKAAJJAAJJGI", "IG                         GI", "IGJJAAJJAAKKKKKKKKKAAJJAAJJGI", "AG        E       E        GA", "AGG       GGGGGGGGG       GGA", "EGGHHHHHHHGGGGGGGGGHHHHHHHGGE", "A          DDDDDDD          A", "AAA        AAAAAAA        AAA")
                    .aisle("AAA        AAAAAAA        AAA", "A          DDDDDDD          A", "EF        F       F        FE", "AGGHHHHHHHGGGGGGGGGHHHHHHHGGA", "AGG       GGGGGGGGG       GGA", "AG        E       E        GA", "AG        E       E        GA", "AG        E       E        GA", "AGG       GGGGGGGGG       GGA", "AGGHHHHHHHGGGGGGGGGHHHHHHHGGA", "EF                F         E", "A          DDDDDDD          A", "AAA        AAAAAAA        AAA")
                    .aisle("AAABBBBBBBBAAAAAAABBBBBBBBAAA", "A          DDDDDDD          A", "EF        F       F        FE", "A                           A", "AGGHHHHHHHGGGGGGGGGHHHHHHHGGA", "AGG       GGGGGGGGG       GGA", "AG        E       E        GA", "AGG       GGGGGGGGG       GGA", "AGGHHHHHHHGGGGGGGGGHHHHHHHGGA", "A                           A", "EF                F         E", "A          DDDDDDD          A", "AAABBBBBBBBAAAAAAABBBBBBBBAAA")
                    .aisle("AAA        A A A A        AAA", "AAABBBBBBBB       BBBBBBBBAAA", "EFFFFFFFFFFDDDDDDDFFFFFFFFFFE", "EF        F       F        FE", "EF        F       F        FE", "EGGHHHHHHHGGGGGGGGGHHHHHHHGGE", "EGGHHHHHHHGGGGGGGGGHHHHHHHGGE", "EGGHHHHHHHGGGGGGGGGHHHHHHHGGE", "EF                F         E", "EF                F         E", "EFFFFFFFFFFDDDDDDDFFFFFFFFFFE", "AAABBBBBBBB       BBBBBBBBAAA", "AAA        A A A A        AAA")
                    .aisle("           A A A A           ", "AAA                       AAA", "AAABBBBBBBB       BBBBBBBBAAA", "A          DDDDDDD          A", "A          DDDDDDD          A", "A          DDDDDDD          A", "A          DDDDDDD          A", "A          DDDDDDD          A", "A          DDDDDDD          A", "A          DDDDDDD          A", "AAABBBBBBBB       BBBBBBBBAAA", "AAA                       AAA", "           A A A A           ")
                    .aisle("                             ", "           A A A A           ", "AAA        A A A A        AAA", "AAABBBBBBBBAAAAAAABBBBBBBBAAA", "AAA        ACCCCCA        AAA", "AAA        AAAAAAA        AAA", "AAA        AAAAAAA        AAA", "AAA        AAAAAAA        AAA", "AAA        ACCCCCA        AAA", "AAABBBBBBBBAAAAAAABBBBBBBBAAA", "AAA        A A A A        AAA", "           A A A A           ", "                             ")
                    .where('A', blocks(GTEBlocks.MOLECULAR_CASING.get()))
                    .where('B', GTEPredicates.absBlocks())
                    .where('C', blocks(GTEBlocks.DIMENSION_INJECTION_CASING.get()))
                    .where('D', blocks(GTEBlocks.TITANIUM_NITRIDE_CERAMIC_IMPACT_RESISTANT_MECHANICAL_BLOCK.get()))
                    .where('E', blocks(GTEBlocks.HIGH_PRESSURE_RESISTANT_CASING.get()))
                    .where('F', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.HastelloyC276)))
                    .where('G', blocks(GTEBlocks.PRESSURE_CONTAINMENT_CASING.get()))
                    .where('H', blocks(GTBlocks.FUSION_GLASS.get()))
                    .where('I', blocks(GTEBlocks.DIMENSION_INJECTION_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('J', blocks(GTEBlocks.CONTAINMENT_FIELD_GENERATOR.get()))
                    .where('K', blocks(ChemicalHelper.getBlock(TagPrefix.block, GTMaterials.Neutronium)))
                    .where('L', controller(blocks(definition.get())))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/dimension_injection_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition HAND_OF_ARACHNE = multiblock("hand_of_arachne", "阿拉克涅之手", CrossRecipeMultiblockMachine::createHatchParallel)
            .allRotation()
            .tooltipsText("Ancient Rome was the god of weaving", "古罗马掌管编织的神")
            .recipe(GTERecipeTypes.LOOM_RECIPES)
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GTEBlocks.PRESSURE_CONTAINMENT_CASING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("                                         ", "  A A     A A               A A     A A  ", "  A A     A A       B       A A     A A  ", "  AAA     AAA    BCCCCCB    AAA     AAA  ", "  A A     A A    BDCKCDB    A A     A A  ", "  AAA     AAA    BCCCCCB    AAA     AAA  ", "  A A     A A       B       A A     A A  ", "  A A     A A               A A     A A  ", "                                         ")
                    .aisle("  A A     A A               A A     A A  ", "                    B                    ", "                  D B D                  ", "  EEE     EEE    DDDDDDD    EEE     EEE  ", "  EFE     EFE    DDDDDDD    EFE     EFE  ", "  EEE     EEE    DDDDDDD    EEE     EEE  ", "                  D B D                  ", "                    B                    ", "  A A     A A               A A     A A  ")
                    .aisle("  A A     A A       B       A A     A A  ", "                  D B D                  ", "  EEE     EEE    DDDDDDD    EEE     EEE  ", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGHFHHHHHHHFHHHHHHHHHHHHHHHHHFHHHHHHHFHGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "  EEE     EEE    DDDDDDD    EEE     EEE  ", "                  D B D                  ", "  A A     A A       B       A A     A A  ")
                    .aisle("  AAA     AAA    BBBBBBB    AAA     AAA  ", "  EEE     EEE    DDDDDDD    EEE     EEE  ", " GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG ", "G FFFFFFFFFFFF   FF   FF   FFFFFFFFFFFF G", "I  F       F A             A F       F  I", "G FFFFFFFFFFFF   FF   FF   FFFFFFFFFFFF G", " GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG ", "  EEE     EEE    DDDDDDD    EEE     EEE  ", "  AAA     AAA    BCCCCCB    AAA     AAA  ")
                    .aisle("  A A     A A    BDBBBDB    A A     A A  ", "  EFE     EFE    DDDDDDD    EFE     EFE  ", " GHFHHHHHHHFHHHHHHHHHHHHHHHHHFHHHHHHHFHG ", "G  F       F A             A F       F  G", "I JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ I", "G  F       F A             A F       F  G", " GHFHHHHHHHFHHHHHHHHHHHHHHHHHFHHHHHHHFHG ", "  EFE     EFE    DDDDDDD    EFE     EFE  ", "  A A     A A    BDCCCDB    A A     A A  ")
                    .aisle("  AAA     AAA    BBBBBBB    AAA     AAA  ", "  EEE     EEE    DDDDDDD    EEE     EEE  ", " GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG ", "G FFFFFFFFFFFF   FF   FF   FFFFFFFFFFFF G", "I  F       F A             A F       F  I", "G FFFFFFFFFFFF   FF   FF   FFFFFFFFFFFF G", " GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG ", "  EEE     EEE    DDDDDDD    EEE     EEE  ", "  AAA     AAA    BCCCCCB    AAA     AAA  ")
                    .aisle("  A A     A A       B       A A     A A  ", "                  D B D                  ", "  EEE     EEE    DDDDDDD    EEE     EEE  ", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGHFHHHHHHHFHHHHHHHHHHHHHHHHHFHHHHHHHFHGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "  EEE     EEE    DDDDDDD    EEE     EEE  ", "                  D B D                  ", "  A A     A A       B       A A     A A  ")
                    .aisle("  A A     A A               A A     A A  ", "                    B                    ", "                  D B D                  ", "  EEE     EEE    DDDDDDD    EEE     EEE  ", "  EFE     EFE    DDDDDDD    EFE     EFE  ", "  EEE     EEE    DDDDDDD    EEE     EEE  ", "                  D B D                  ", "                    B                    ", "  A A     A A               A A     A A  ")
                    .aisle("                                         ", "  A A     A A               A A     A A  ", "  A A     A A       B       A A     A A  ", "  AAA     AAA    BCCCCCB    AAA     AAA  ", "  A A     A A    BDCCCDB    A A     A A  ", "  AAA     AAA    BCCCCCB    AAA     AAA  ", "  A A     A A       B       A A     A A  ", "  A A     A A               A A     A A  ", "                                         ")
                    .where('A', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Tungsten)))
                    .where('B', blocks(GTEBlocks.PRESSURE_CONTAINMENT_CASING.get()))
                    .where('C', blocks(GTEBlocks.PRESSURE_CONTAINMENT_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('D', blocks(GTEBlocks.OXIDATION_RESISTANT_HASTELLOY_N_MECHANICAL_CASING.get()))
                    .where('E', blocks(GTBlocks.CASING_INVAR_HEATPROOF.get()))
                    .where('F', blocks(GTEBlocks.ADVANCED_ASSEMBLY_LINE_UNIT.get()))
                    .where('G', blocks(GTEBlocks.PIKYONIUM_MACHINE_CASING.get()))
                    .where('H', blocks(GTBlocks.CASING_LAMINATED_GLASS.get()))
                    .where('I', blocks(GTBlocks.CASING_GRATE.get()))
                    .where('J', blocks(GTEBlocks.AMPROSIUM_GEARBOX.get()))
                    .where('K', controller(blocks(definition.get())))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/pressure_containment_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition CRACKER_HUB = multiblock("cracker_hub", "裂解反应枢纽", CoilCrossRecipeMultiblockMachine::createCoilParallel)
            .allRotation()
            .recipe(GTRecipeTypes.CRACKING_RECIPES)
            .coilParallelTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GTEBlocks.NAQUADAH_ALLOY_CASING)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("     QQQQQ     ", "     QQRQQ     ", "     QQQQQ     ", "     QQQQQ     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("AAAAAAAAAAAAAAA", "C    DDDDD    C", "C    DDDDD    C", "C    DDDDD    C", "C      C      C", "C      C      C", "CCCCCCCCCCCCCCC", "C      C      C", "C      C      C", "C      C      C", "C      C      C", "C      C      C", "CCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDD", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("AAAAAAAAAAAAAAA", " DDDDDDDDDDDDD ", " NNNNNNDNNNNNN ", "  NOONDDDNOON  ", "  NOON   NOON  ", "  NOON   NOON  ", "CNNNNNN NNNNNNC", "  NOON   NOON  ", "  NOON   NOON  ", "  NOON   NOON  ", " NNNNNN NNNNNN ", "  N  N   N  N  ", "C      C      C", "DFFFFFFDFFFFFFD", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("AAAAAAAAAAAAAAA", " DNNNND DNNNND ", " NPPPPN NPPPPN ", " NP   N NP   N ", " NP   N NP   N ", " NP   N NP   N ", "CNPPPPN NPPPPNC", " NP  PN NP  PN ", " NP  PN NP  PN ", " NP  PN NP  PN ", " NPPPPN NPPPPN ", " NNNNNN NNNNNN ", "C      C      C", "DFFFFFFDFFFFFFD", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("AAAAAAAAAAAAAAA", " DNNNND DNNNND ", " NP  PN NP  PN ", " O    O O    O ", " O    O O    O ", " O    O O    O ", "CNP  PN NP  PNC", " O    O O    O ", " O    O O    O ", " O    O O    O ", " NP  PN NP  PN ", "  NNNN   NNNN  ", "C      C      C", "DFFFFFFDFFFFFFD", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("AAAAAAAAAAAAAAA", " DNNNND DNNNND ", " NP LPN NPL PN ", " O  L O O L  O ", " O  L O O L  O ", " O  L O O L  O ", "CNP LPN NPL PNC", " O  L O O L  O ", " O  L O O L  O ", " O  L O O L  O ", " NP LPN NPL PN ", "  NNLN   NLNN  ", "C   L  C  L   C", "DFFFLLLDLLLFFFD", "    BBB BBB    ", "    DDD DDD    ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("AAAAAAAAAAAAAAA", " DNNNND DNNNND ", " NPPPPN NPPPPN ", " NP  PN NP  PN ", " NP  PN NP  PN ", " NP  PN NP  PN ", "CNPPPPN NPPPPNC", " NP  PN NP  PN ", " NP  PN NP  PN ", " NP  PN NP  PN ", " NPPPPN NPPPPN ", " NNNNNN NNNNNN ", "C      C      C", "DFFFDDLDLDDFFFD", "    BBB BBB    ", "    DDD DDD    ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("AAAAAAAAAAAAAAA", " DDDDDK KDDDDD ", " NNNNNN NNNNNN ", "  NOON   NOON  ", "  NOON   NOON  ", "  NOON   NOON  ", "CNNNNNN NNNNNNC", "  NOON   NOON  ", "  NOON   NOON  ", "  NOON   NOON  ", " NNNNNN NNNNNN ", "  N  N   N  N  ", "C      C      C", "DFFFDDLDLDDFFFD", "    BBB BBB    ", "    DDD DDD    ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("AAAAAAAAAAAAAAA", "C     KCK     C", "C     KCK     C", "C     KCK     C", "C     KCK     C", "C     KCK     C", "C     KCK     C", "C     KCK     C", "C     KCK     C", "C     KCK     C", "C      C      C", "C      C      C", "CCCCCCCCCCCCCCC", "DDDDDDLDLDDDDDD", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("AAAAAAAAAAAAAAA", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "      K K      ", "               ", "               ", "               ", "      L L      ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("AAAAAAAAAAAAAAA", "BC    CB  CC  B", "BC    CB C  C B", "B C  C B C  C B", "B C  C BC    CB", "B  CC  BC    CB", "BBBBBBBBBBBBBBB", "B    CCB    CCB", "B   C  B   C  B", "B  C  KBK C   B", "BCC    BCC    B", "BBBBBBBBBBBBBBB", "B    CCB    CCB", "B   C LBL  C  B", "B  C   B  C   B", "BCC    BCC    B", "BBBBBBBBBBBBBBB", "B    CCB    CCB", "B   C  B   C  B", "B  C   B  C   B", "BCC    BCC    B", "BBBBBBBBBBBBBBB", "DDDDDDDDDDDDDDD")
                    .aisle("AAAAAAAAAAAAAAA", "              C", "              C", "               ", "C              ", "C              ", "BEEEEEEDEEEEEEB", "C              ", "               ", "      K K      ", "              C", "BEEEEEEDEEEEEEB", "C              ", "      L L      ", "      L L      ", "      L L     C", "BEEEEELDLEEEEEB", "C     L L      ", "      L L      ", "      L L      ", "      L L     C", "B      B      B", "DFFFFFFFFFFFFFD")
                    .aisle("AAAAAAAAAAAAAAA", "  DDDD   DDDD  ", "C MMMM   MMMM  ", "C  MM     MM  C", "   MM     MM  C", "   MM     MM   ", "BEEMMEEDEEMMEEB", "C  MM     MM   ", "   MM     MM   ", "   MM K K MM   ", "   MM     MM  C", "BEEMMEEDEEMMEEB", "C  MM     MM   ", "   MM     MM   ", "   MM     MM   ", "   MM     MM  C", "BEEMMEEDEEMMEEB", "C  MM     MM   ", "   MM     MM   ", "   HH     HH   ", "   HH L L HH  C", "B  HH  B  HH  B", "DFDDDDFFFDDDDFD")
                    .aisle("AAAAAAAAAAAAAAA", "C DIID   DIID  ", "  MIIM   MIIM  ", "  MIIM   MIIM  ", "  MIIM   MIIM  ", "  MIIM   MIIM C", "BEMIIMEDEMIIMEB", "  MIIM   MIIM  ", "C MIIM   MIIM  ", "  MIKKK KK IM C", "  MIIM   MIIM  ", "BEMIIMEDEMIIMEB", "  MIIM   MIIM  ", "C MIIM   MIIM  ", "  MIIM   MIIM C", "  MIIM   MIIM  ", "BEMIIMEDEMIIMEB", "  MIIM   MIIM  ", "C MMMM   MMMM  ", "  H  H   H  H C", "  HLLLL LLLLH  ", "B H  H B H  H B", "DFDJJDFFFDJJDFD")
                    .aisle("AAAAAAAAAAAAAAA", "C DIID   DIID  ", "  MIIM   MIIM  ", "  MIIM   MIIM  ", "  MIIM   MIIM  ", "  MIIM   MIIM C", "BEMIIMEDEMIIMEB", "  MIIM   MIIM  ", "  MIIM   MIIM C", "C MIIMK KMIIM  ", "  MIIM   MIIM  ", "BEMIIMEDEMIIMEB", "  MIIM   MIIM  ", "  MIIM   MIIM C", "C MIIM   MIIM  ", "  MIIM   MIIM  ", "BEMIIMEDEMIIMEB", "  MIIM   MIIM  ", "  MMMM   MMMM C", "C H  H   H  H  ", "  H  HL LH  H  ", "B H  H B H  H B", "DFDJJDFFFDJJDFD")
                    .aisle("AAAAAAAAAAAAAAA", "  DIDD   DDID  ", "C MMMM   MMMM  ", "C  MM     MM  C", "   MM     MM  C", "   MM     MM   ", "BEEMMEEDEEMMEEB", "   MM     MM  C", "   MM     MM   ", "   MM K K MM   ", "C  MM     MM   ", "BEEMMEEDEEMMEEB", "   MM     MM  C", "   MM     MM   ", "   MM     MM   ", "C  MM     MM   ", "BEEMMEEDEEMMEEB", "   MM     MM  C", "   MM     MM   ", "   HH     HH   ", "C  HH L L HH   ", "B  HH  B  HH  B", "DFDDDDFFFDDDDFD")
                    .aisle("AAAAAAAAAAAAAAA", "   I       I  C", "              C", "               ", "C              ", "C              ", "BEEEEEEDEEEEEEB", "              C", "               ", "      K K      ", "C              ", "BEEEEEEDEEEEEEB", "              C", "               ", "               ", "C              ", "BEEEEEEDEEEEEEB", "              C", "               ", "               ", "C     L L      ", "B      B      B", "DFFFFFFFFFFFFFD")
                    .aisle("AAAAAAAAAAAAAAA", "B  I   D   I  B", "B      D      B", "B      D      B", "B      D      B", "B      D      B", "BDDDDDDDDDDDDDB", "B      D      B", "B      D      B", "B     KDK     B", "B      D      B", "BDDDDDDDDDDDDDB", "B      D      B", "B      D      B", "B      D      B", "B      D      B", "BDDDDDDDDDDDDDB", "B      D      B", "B      D      B", "B      D      B", "B     LDL     B", "BBBBBBBBBBBBBBB", "DFFFFFFFFFFFFFD")
                    .aisle("AAAAAAAAAAAAAAA", "C  I       I   ", "C              ", "               ", "              C", "              C", "BEEEEEEDEEEEEEB", "C              ", "               ", "      K K      ", "              C", "BEEEEEEDEEEEEEB", "C              ", "               ", "               ", "              C", "BEEEEEEDEEEEEEB", "C              ", "               ", "               ", "      L L     C", "B      B      B", "DFFFFFFFFFFFFFD")
                    .aisle("AAAAAAAAAAAAAAA", "  DIDD   DDID  ", "  GGGG   GGGG C", "C  GG     GG  C", "C  GG     GG   ", "   GG     GG   ", "BEEGGEEDEEGGEEB", "C  GG     GG   ", "   GG     GG   ", "   GG K K GG   ", "   GG     GG  C", "BEEGGEEDEEGGEEB", "C  GG     GG   ", "   GG     GG   ", "   GG     GG   ", "   GG     GG  C", "BEEGGEEDEEGGEEB", "C  GG     GG   ", "   GG     GG   ", "   HH     HH   ", "   HH L L HH  C", "B  HH  B  HH  B", "DFDDDDFFFDDDDFD")
                    .aisle("AAAAAAAAAAAAAAA", "  DIID   DIID C", "  GIIG   GIIG  ", "  GIIG   GIIG  ", "  GIIG   GIIG  ", "C GIIG   GIIG  ", "BEGIIGEDEGIIGEB", "  GIIG   GIIG  ", "C GIIG   GIIG  ", "  GIKKK KKKIG C", "  GIIG   GIIG  ", "BEGIIGEDEGIIGEB", "  GIIG   GIIG  ", "C GIIG   GIIG  ", "  GIIG   GIIG C", "  GIIG   GIIG  ", "BEGIIGEDEGIIGEB", "  GIIG   GIIG  ", "C GGGG   GGGG  ", "  H  H   H  H C", "  HLLLL LLLLH  ", "B H  H B H  H B", "DFDJJDFFFDJJDFD")
                    .aisle("AAAAAAAAAAAAAAA", "  DIIDII DIID C", "  GIIG   GIIG  ", "  GIIG   GIIG  ", "  GIIG   GIIG  ", "C GIIG   GIIG  ", "BEGIIGEDEGIIGEB", "  GIIG   GIIG  ", "  GIIG   GIIG C", "C GIIG   GIIG  ", "  GIIG   GIIG  ", "BEGIIGEDEGIIGEB", "  GIIG   GIIG  ", "  GIIG   GIIG C", "C GIIG   GIIG  ", "  GIIG   GIIG  ", "BEGIIGEDEGIIGEB", "  GIIG   GIIG  ", "  GGGG   GGGG C", "C H  H   H  H  ", "  H  H   H  H  ", "B H  H B H  H B", "DFDJJDFFFDJJDFD")
                    .aisle("AAAAAAAAAAAAAAA", "  DDDD   DDDD  ", "  GGGG   GGGG C", "C  GG     GG  C", "C  GG     GG   ", "   GG     GG   ", "BEEGGEEDEEGGEEB", "   GG     GG  C", "   GG     GG   ", "   GG     GG   ", "C  GG     GG   ", "BEEGGEEDEEGGEEB", "   GG     GG  C", "   GG     GG   ", "   GG     GG   ", "C  GG     GG   ", "BEEGGEEDEEGGEEB", "   GG     GG  C", "   GG     GG   ", "   HH     HH   ", "C  HH     HH   ", "B  HH  B  HH  B", "DFDDDDFFFDDDDFD")
                    .aisle("AAAAAAAAAAAAAAA", "C              ", "C              ", "               ", "              C", "              C", "BEEEEEEDEEEEEEB", "              C", "               ", "               ", "C              ", "BEEEEEEDEEEEEEB", "              C", "               ", "               ", "C              ", "BEEEEEEDEEEEEEB", "              C", "               ", "               ", "C              ", "B      B      B", "DFFFFFFFFFFFFFD")
                    .aisle("AAAAAAAAAAAAAAA", "B  CC  BC    CB", "B C  C BC    CB", "B C  C B C  C B", "BC    CB C  C B", "BC    CB  CC  B", "BBBBBBBBBBBBBBB", "BCC    BCC    B", "B  C   B  C   B", "B   C  B   C  B", "B    CCB    CCB", "BBBBBBBBBBBBBBB", "BCC    BCC    B", "B  C   B  C   B", "B   C  B   C  B", "B    CCB    CCB", "BBBBBBBBBBBBBBB", "BCC    BCC    B", "B  C   B  C   B", "B   C  B   C  B", "B    CCB    CCB", "BBBBBBBBBBBBBBB", "DDDDDDDDDDDDDDD")
                    .where('A', blocks(GTEBlocks.STRENGTHEN_THE_BASE_BLOCK.get()))
                    .where('B', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Ultimet)))
                    .where('C', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.HastelloyC276)))
                    .where('D', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get()))
                    .where('E', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.StainlessSteel)))
                    .where('F', GTEPredicates.absBlocks())
                    .where('G', blocks(GTEBlocks.PRESSURE_CONTAINMENT_CASING.get()))
                    .where('H', blocks(GTBlocks.CASING_GRATE.get()))
                    .where('I', blocks(GTBlocks.CASING_TUNGSTENSTEEL_PIPE.get()))
                    .where('J', abilities(MUFFLER))
                    .where('K', blocks(GTBlocks.CASING_TUNGSTENSTEEL_TURBINE.get()))
                    .where('L', blocks(GTBlocks.CASING_STAINLESS_TURBINE.get()))
                    .where('M', blocks(GTEBlocks.CALCIUM_OXIDE_CERAMIC_ANTI_METAL_CORROSION_MECHANICAL_BLOCK.get()))
                    .where('N', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where('O', blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where('P', heatingCoils())
                    .where('Q', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('R', controller(blocks(definition.get())))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/hyper_mechanical_casing"), GTCEu.id("block/multiblock/cracking_unit"))
            .register();

    MultiblockMachineDefinition CHEMICAL_VAPOR_DEPOSITION = multiblock("chemical_vapor_deposition", "化学气相沉积系统", CoilCustomParallelMultiblockMachine.createParallelCoil(m -> 1 << (2 * (m.getTier() - 1)), true, false, false))
            .nonYAxisRotation()
            .tooltipsKey("gtocore.machine.automatic_chisel.tooltip.1")
            .tooltipsText("The higher the coil temperature, the faster the operation speed", "线圈温度越高，运行速度越快")
            .recipe(GTERecipeTypes.CHEMICAL_VAPOR_DEPOSITION_RECIPES)
            .recipeModifiers((machine, recipe) -> GTERecipeModifiers.recipeReduction(machine, recipe, 1, Math.log(900) / Math.log(((ICoilMachine) machine).gte$getTemperature())), GTERecipeModifiers.OVERCLOCKING)
            .block(GTBlocks.CASING_PTFE_INERT)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("     BBHBB", "     BGGGB", "     BGGGB", "     BGGGB", "     EEEEE")
                    .aisle("AAAAAEEEEB", "ACACAE   G", "ACACAE   G", "ACACAE   G", "     EDDDE")
                    .aisle("AAAAAEEEEB", "A   AE   G", "AC CAE   G", "A   AE   G", "AAAAAEDDDE")
                    .aisle("AAAAAEEEEB", "AFFFFF   G", "ACCCAE   G", "AFFFFFFFFG", "AAAAAEDDDE")
                    .aisle("AAAAABBBBB", "ACACABDDDB", "ACACABEEEB", "ACACABDDDB", "     EEEEE")
                    .where('A', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where('B', blocks(GTBlocks.CASING_PTFE_INERT.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('C', heatingCoils())
                    .where('D', blocks(GTBlocks.FILTER_CASING.get()))
                    .where('E', blocks(GTBlocks.CASING_PTFE_INERT.get()))
                    .where('F', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('G', blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where('H', controller(blocks(definition.get())))
                    .where(' ', any())
                    .build())
            .additionalDisplay((controller, components) -> components.add(Component.translatable("gtecore.machine.duration_multiplier.tooltip", Component.literal(FormattingUtil.formatNumbers(Math.log(900) / Math.log(((ICoilMachine) controller).gte$getTemperature()))))))
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_inert_ptfe"), GTCEu.id("block/multiblock/gcym/large_chemical_bath"))
            .register();

    MultiblockMachineDefinition PHYSICAL_VAPOR_DEPOSITION = multiblock("physical_vapor_deposition", "物理气相沉积系统", TierCasingParallelMultiblockMachine.createParallel(m -> 1 << (2 * (m.getTier() - 1)), true, GLASS_TIER))
            .nonYAxisRotation()
            .tooltipsKey("gtocore.machine.automatic_chisel.tooltip.1")
            .tooltipsText("The higher the glass tier, the faster the operation speed", "玻璃等级越高，运行速度越快")
            .recipe(GTERecipeTypes.PHYSICAL_VAPOR_DEPOSITION_RECIPES)
            .recipeModifiers((machine, recipe) -> GTERecipeModifiers.recipeReduction(machine, recipe, 1, Math.sqrt(1.0D / ((ITierCasingMachine) machine).getCasingTier(GLASS_TIER))), GTERecipeModifiers.OVERCLOCKING)
            .block(GTBlocks.PLASTCRETE)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAA     ", "AAAA     ", "JJJA     ", "AAJA     ", "AAAA     ")
                    .aisle("AAAACCCCC", "AAAECFFFC", "J  ACFFFC", "AA ACFFFC", "AAAAGGGGG")
                    .aisle("AAAAGHHHC", "J  EG   I", "J   G   I", "J   G   I", "JJJAGIIIG")
                    .aisle("AAAAGHHHC", "AAAEEEE G", "J  EG E G", "AA EEEE G", "AAAAGIIIG")
                    .aisle("AAAAGHHHC", "J  EG   I", "J   G   I", "J   G   I", "JJJAGIIIG")
                    .aisle("AAAACCDCC", "AAAECFFFC", "J  ACFFFC", "AA ACFFFC", "AAAAGGGGG")
                    .aisle("AAAA     ", "AAAA     ", "JJJA     ", "AAJA     ", "AAAA     ")
                    .where('A', blocks(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST.get()))
                    .where('C', blocks(GTBlocks.PLASTCRETE.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('D', controller(blocks(definition.get())))
                    .where('E', blocks(GTBlocks.CASING_TUNGSTENSTEEL_PIPE.get()))
                    .where('F', blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where('J', GTEPredicates.glass())
                    .where('G', blocks(GTBlocks.PLASTCRETE.get()))
                    .where('H', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where('I', blocks(GTBlocks.FILTER_CASING.get()))
                    .where(' ', any())
                    .build())
            .additionalDisplay((controller, components) -> components.add(Component.translatable("gtocore.machine.duration_multiplier.tooltip", Component.literal(FormattingUtil.formatNumbers(Math.sqrt(1.0D / ((ITierCasingMachine) controller).getCasingTier(GLASS_TIER)))))))
            .workableCasingRenderer(GTCEu.id("block/casings/cleanroom/plascrete"), GTCEu.id("block/multiblock/gcym/large_chemical_bath"))
            .register();

    MultiblockMachineDefinition PLASMA_CENTRIFUGE = multiblock("plasma_centrifuge", "等离子离心机", ElectricMultiblockMachine::new)
            .nonYAxisRotation()
            .recipe(GTERecipeTypes.PLASMA_CENTRIFUGE_RECIPES)
            .customTooltipsBuilder(false, true, false)
            .block(GTEBlocks.MOLECULAR_CASING)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle
                    .aisle("             AAAAA             ", "             AABAA             ", "             AABAA             ", "              ABA              ", "              ABA              ", "              ACA              ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("             AAAAA             ", "             AADAA             ", "             AADAA             ", "             AADAA             ", "             AADAA             ", "             EABAE             ", "              ABA              ", "             EABAE             ", "              ABA              ", "             EAAAE             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("           FFFGGGFFF           ", "           FFF   FFF           ", "                               ", "                               ", "                               ", "             E   E             ", "                               ", "             E   E             ", "                               ", "             E   E             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("        FFFFHHGGGHHFFFF        ", "        FFFF       FFFF        ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("      FFFHHHHHGGGHHHHHFFF      ", "      FFF             FFF      ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("     FFHHHHHHHGGGHHHHHHHFF     ", "     FFID             DIFF     ", "       ID             DI       ", "       ID      E      DI       ", "        E   JJJJJJJ   E        ", "               E               ", "                               ", "                               ", "               E               ", "            JJJJJJJ            ", "               E               ", "                               ", "                               ", "               E               ", "            JJJJJJJ            ", "               E               ", "                               ", "                               ", "               E               ", "            JJJJJJJ            ", "               E               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("     FHHHHHHHHGGGHHHHHHHHF     ", "     FID               DIF     ", "      ID               DI      ", "      ID    JJJJJJJ    DI      ", "       E   J       J   E       ", "            JJJJJJJ            ", "                               ", "                               ", "            JJJJJJJ            ", "           J       J           ", "            JJJJJJJ            ", "                               ", "                               ", "            JJJJJJJ            ", "           J       J           ", "            JJJJJJJ            ", "                               ", "                               ", "            JJJJJJJ            ", "           J       J           ", "            JJJJJJJ            ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("    FFHHHHHHHHGGGHHHHHHHHFF    ", "    FFD       GGG       DFF    ", "      D                 D      ", "      D    JJ  K  JJ    D      ", "      E   J  JJLJJ  J   E      ", "           JJ     JJ           ", "                               ", "                               ", "           JJ  K  JJ           ", "          J  JJLJJ  J          ", "           JJ     JJ           ", "                               ", "                               ", "           JJ  K  JJ           ", "          J  JJLJJ  J          ", "           JJ     JJ           ", "                               ", "                               ", "           JJ  K  JJ           ", "          J  JJLJJ  J          ", "           JJ     JJ           ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("    FHHHHHHHHHGGGHHHHHHHHHF    ", "    F         GGG         F    ", "                               ", "               K               ", "           JJ GLG JJ           ", "                               ", "                               ", "                               ", "               K               ", "           JJ GLG JJ           ", "                               ", "                               ", "                               ", "               K               ", "           JJ GLG JJ           ", "                               ", "                               ", "                               ", "               K               ", "           JJ GLG JJ           ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("    FHHHHHHHHHGGGHHHHHHHHHF    ", "    F     GGGGGGGGGGG     F    ", "                               ", "               K               ", "        J     ILI     J        ", "                               ", "                               ", "                               ", "               K               ", "        J     ILI     J        ", "                               ", "                               ", "                               ", "               K               ", "        J     ILI     J        ", "                               ", "                               ", "                               ", "               K               ", "        J     ILI     J        ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("   FFHHHHHHHHHGGGHHHHHHHHHFF   ", "   FF     GMG     GMG     FF   ", "           M       M           ", "        J  M   K   M  J        ", "       J J M  GLG  M J J       ", "        J  M       M  J        ", "           M       M           ", "           M       M           ", "        J  M   K   M  J        ", "       J J M  GLG  M J J       ", "        J  M       M  J        ", "           M       M           ", "           M       M           ", "        J  M   K   M  J        ", "       J J M  GLG  M J J       ", "        J  M       M  J        ", "           M       M           ", "           M       M           ", "        J  M   K   M  J        ", "       J J M  GLG  M J J       ", "        J  M       M  J        ", "           M       M           ", "           LLLLLLLLL           ", "           IGGGGGGGI           ", "               G               ")
                    .aisle("   FHHHHHHHHHHGGGHHHHHHHHHHF   ", "   F      GGG     GGG      F   ", "                               ", "       JJ      K      JJ       ", "      J  J    ILI    J  J      ", "       JJ             JJ       ", "                               ", "                               ", "       JJ      K      JJ       ", "      J  J    ILI    J  J      ", "       JJ             JJ       ", "                               ", "                               ", "       JJ      K      JJ       ", "      J  J    ILI    J  J      ", "       JJ             JJ       ", "                               ", "                               ", "       JJ      K      JJ       ", "      J  J    ILI    J  J      ", "       JJ             JJ       ", "              GGG              ", "              CNC              ", "              GGG              ", "               G               ")
                    .aisle("AAAFHHHHHHHHHHGGGHHHHHHHHHHFaaa", " AAF      G  D   D  G      Faa ", " AA                         AA ", "  A    J       K       J    A  ", "  A   J J     GLG     J J   A  ", "  EE   J               J   EE  ", "                               ", "  EE                       EE  ", "       J       K       J       ", "  EE  J J     GLG     J J  EE  ", "       J               J       ", "                               ", "                               ", "       J       K       J       ", "      J J     GLG     J J      ", "       J               J       ", "                               ", "                               ", "       J       K       J       ", "      J J     GLG     J J      ", "       J               J       ", "             GGGGG             ", "             BBNBB             ", "             GGGGG             ", "              GGG              ")
                    .aisle("AAAGGGGGGGGGGGCBCGGGGGGGGGGGAAa", "AAA     GGG   OLO   GGG     AAa", "AAA           OLO           AAa", " AA    J      OLO      J    AA ", " AA   J JGIGIGOLOGIGIGJ J   AA ", " AA    J      OLO      J    AA ", "  A           OLO           A  ", "  A           OLO           A  ", "  A    J      OLO      J    A  ", "  A   J JGIGIGOLOGIGIGJ J   A  ", "       J      OLO      J       ", "              OLO              ", "              OLO              ", "       J      OLO      J       ", "      J JGIGIGOLOGIGIGJ J      ", "       J      OLO      J       ", "              OLO              ", "              OLO              ", "       J      OLO      J       ", "      J JGIGIGOLOGIGIGJ J      ", "       J      OLO      J       ", "            GGOLOGG            ", "            CBONOBC            ", "            GGGGGGG            ", "             GGGGG             ")
                    .aisle("AAAGGGGGGGGGGGBCBGGGGGGGGGGGAAa", "ABD     GGG   LNL   GGG     DB~", "ABD           LNL           DBa", " BD   EJKKKKKKLNLKKKKKKJE   DB ", " BD   J LLLLLLLNLLLLLLL J   DB ", " CB   EJ      LNL      JE   BC ", "  B           LNL           B  ", "  B           LNL           B  ", "  B   EJKKKKKKLNLKKKKKKJE   B  ", "  A   J LLLLLLLNLLLLLLL J   A  ", "      EJ      LNL      JE      ", "              LNL              ", "              LNL              ", "      EJKKKKKKLNLKKKKKKJE      ", "      J LLLLLLLNLLLLLLL J      ", "      EJ      LNL      JE      ", "              LNL              ", "              LNL              ", "      EJKKKKKKLNLKKKKKKJE      ", "      J LLLLLLLNLLLLLLL J      ", "      EJ      LNL      JE      ", "            GGLNLGG            ", "            CBLNLBC            ", "            GGGGGGG            ", "             GGGGG             ")
                    .aisle("AAAGGGGGGGGGGGCBCGGGGGGGGGGGAAa", "AAA     GGG   OLO   GGG     AAa", "AAA           OLO           AAa", " AA    J      OLO      J    AA ", " AA   J JGIGIGOLOGIGIGJ J   AA ", " AA    J      OLO      J    AA ", "  A           OLO           A  ", "  A           OLO           A  ", "  A    J      OLO      J    A  ", "  A   J JGIGIGOLOGIGIGJ J   A  ", "       J      OLO      J       ", "              OLO              ", "              OLO              ", "       J      OLO      J       ", "      J JGIGIGOLOGIGIGJ J      ", "       J      OLO      J       ", "              OLO              ", "              OLO              ", "       J      OLO      J       ", "      J JGIGIGOLOGIGIGJ J      ", "       J      OLO      J       ", "            GGOLOGG            ", "            CBONOBC            ", "            GGGGGGG            ", "             GGGGG             ")
                    .aisle("AAAFHHHHHHHHHHGGGHHHHHHHHHHFaaa", " AAF      G  D   D  G      Faa ", " AA                         AA ", "  A    J       K       J    A  ", "  A   J J     GLG     J J   A  ", "  EE   J               J   EE  ", "                               ", "  EE                       EE  ", "       J       K       J       ", "  EE  J J     GLG     J J  EE  ", "       J               J       ", "                               ", "                               ", "       J       K       J       ", "      J J     GLG     J J      ", "       J               J       ", "                               ", "                               ", "       J       K       J       ", "      J J     GLG     J J      ", "       J               J       ", "             GGGGG             ", "             B NBB             ", "             GGGGG             ", "              GGG              ")
                    .aisle("   FHHHHHHHHHHGGGHHHHHHHHHHF   ", "   F      GGG     GGG      F   ", "                               ", "       JJ      K      JJ       ", "      J  J    ILI    J  J      ", "       JJ             JJ       ", "                               ", "                               ", "       JJ      K      JJ       ", "      J  J    ILI    J  J      ", "       JJ             JJ       ", "                               ", "                               ", "       JJ      K      JJ       ", "      J  J    ILI    J  J      ", "       JJ             JJ       ", "                               ", "                               ", "       JJ      K      JJ       ", "      J  J    ILI    J  J      ", "       JJ             JJ       ", "              GGG              ", "              CNC              ", "              GGG              ", "               G               ")
                    .aisle("   FFHHHHHHHHHGGGHHHHHHHHHFF   ", "   FF     GMG     GMG     FF   ", "           M       M           ", "        J  M   K   M  J        ", "       J J M  GLG  M J J       ", "        J  M       M  J        ", "           M       M           ", "           M       M           ", "        J  M   K   M  J        ", "       J J M  GLG  M J J       ", "        J  M       M  J        ", "           M       M           ", "           M       M           ", "        J  M   K   M  J        ", "       J J M  GLG  M J J       ", "        J  M       M  J        ", "           M       M           ", "           M       M           ", "        J  M   K   M  J        ", "       J J M  GLG  M J J       ", "        J  M       M  J        ", "           M       M           ", "           LLLLLLLLL           ", "           IGGGGGGGI           ", "               G               ")
                    .aisle("    FHHHHHHHHHGGGHHHHHHHHHF    ", "    F     GGGGGGGGGGG     F    ", "                               ", "               K               ", "        J     ILI     J        ", "                               ", "                               ", "                               ", "               K               ", "        J     ILI     J        ", "                               ", "                               ", "                               ", "               K               ", "        J     ILI     J        ", "                               ", "                               ", "                               ", "               K               ", "        J     ILI     J        ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("    FHHHHHHHHHGGGHHHHHHHHHF    ", "    F         GGG         F    ", "                               ", "               K               ", "           JJ GLG JJ           ", "                               ", "                               ", "                               ", "               K               ", "           JJ GLG JJ           ", "                               ", "                               ", "                               ", "               K               ", "           JJ GLG JJ           ", "                               ", "                               ", "                               ", "               K               ", "           JJ GLG JJ           ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("    FFHHHHHHHHGGGHHHHHHHHFF    ", "    FFD       GGG       DFF    ", "      D                 D      ", "      D    JJ  K  JJ    D      ", "      E   J  JJLJJ  J   E      ", "           JJ     JJ           ", "                               ", "                               ", "           JJ  K  JJ           ", "          J  JJLJJ  J          ", "           JJ     JJ           ", "                               ", "                               ", "           JJ  K  JJ           ", "          J  JJLJJ  J          ", "           JJ     JJ           ", "                               ", "                               ", "           JJ  K  JJ           ", "          J  JJLJJ  J          ", "           JJ     JJ           ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("     FHHHHHHHHGGGHHHHHHHHF     ", "     FID               DIF     ", "      ID               DI      ", "      ID    JJJJJJJ    DI      ", "       E   J       J   E       ", "            JJJJJJJ            ", "                               ", "                               ", "            JJJJJJJ            ", "           J       J           ", "            JJJJJJJ            ", "                               ", "                               ", "            JJJJJJJ            ", "           J       J           ", "            JJJJJJJ            ", "                               ", "                               ", "            JJJJJJJ            ", "           J       J           ", "            JJJJJJJ            ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("     FFHHHHHHHGGGHHHHHHHFF     ", "     FFID             DIFF     ", "       ID             DI       ", "       ID      E      DI       ", "        E   JJJJJJJ   E        ", "               E               ", "                               ", "                               ", "               E               ", "            JJJJJJJ            ", "               E               ", "                               ", "                               ", "               E               ", "            JJJJJJJ            ", "               E               ", "                               ", "                               ", "               E               ", "            JJJJJJJ            ", "               E               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("      FFFHHHHHGGGHHHHHFFF      ", "      FFF             FFF      ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("        FFFFHHGGGHHFFFF        ", "        FFFF       FFFF        ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("           FFFGGGFFF           ", "           FFF   FFF           ", "                               ", "                               ", "                               ", "             E   E             ", "                               ", "             E   E             ", "                               ", "             E   E             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("             AAAAA             ", "             AADAA             ", "             AADAA             ", "             AADAA             ", "             AADAA             ", "             EABAE             ", "              ABA              ", "             EABAE             ", "              ABA              ", "             EAAAE             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("             AAAAA             ", "             AABAA             ", "             AABAA             ", "              ABA              ", "              ABA              ", "              ACA              ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.MOLECULAR_CASING.get()))
                    .where('a', blocks(GTEBlocks.MOLECULAR_CASING.get())
                            .or(GTEPredicates.autoLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('B', blocks(GTEBlocks.AMPROSIUM_ACTIVE_CASING.get()))
                    .where('C', blocks(GTEBlocks.AMPROSIUM_CASING.get()))
                    .where('D', blocks(GTEBlocks.HYPER_CORE.get()))
                    .where('E', blocks(GTEBlocks.CONTAINMENT_FIELD_GENERATOR.get()))
                    .where('F', blocks(GTEBlocks.GRAVITY_STABILIZATION_CASING.get()))
                    .where('G', blocks(GTEBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get()))
                    .where('H', blocks(GTEBlocks.SPS_CASING.get()))
                    .where('I', blocks(GTEBlocks.DIMENSIONAL_BRIDGE_CASING.get()))
                    .where('J', blocks(GTEBlocks.SHIELDED_ACCELERATOR.get()))
                    .where('K', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.Adamantium)))
                    .where('L', blocks(GTEBlocks.QUANTUM_GLASS.get()))
                    .where('M', blocks(GTEBlocks.SPEEDING_PIPE.get()))
                    .where('N', blocks(GTEBlocks.QUARK_PIPE.get()))
                    .where('O', blocks(GTEBlocks.DEGENERATE_RHENIUM_CONSTRAINED_CASING.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/molecular_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition PLASMA_EXTRACTION = multiblock("plasma_extraction", "等离子体萃取罐", ElectricMultiblockMachine::new)
            .nonYAxisRotation()
            .recipe(GTERecipeTypes.PLASMA_EXTRACTION_RECIPES)
            .customTooltipsBuilder(false, true, false)
            .block(GTEBlocks.DIMENSION_INJECTION_CASING)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle("        AAAAAAAAAAAAA        ", "         AAAA   AAAA         ", "         AAAA   AAAA         ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("       AAAAAAAAAAAAAAA       ", "        AAAAA   AAAAA        ", "         AAAA   AAAA         ", "         AAAA   AAAA         ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("      AAAAAAAAAAAAAAAAA      ", "        AAAAA   AAAAA        ", "         AAAA   AAAA         ", "         AAAA   AAAA         ", "         A  ABBBA  A         ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("     AAAAAAAAAAAAAAAAAAA     ", "                             ", "                             ", "                             ", "       BBBBBB   BBBBBB       ", "                             ", "                             ", "           CCCCCCC           ", "                             ", "                             ", "                             ", "           CCCCCCC           ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("    AAAAAAAAAAAAAAAAAAAAA    ", "      AA             AA      ", "                             ", "                             ", "      B    B     B    B      ", "                             ", "           DDDDDDD           ", "         CCEEEEEEEC          ", "           DDDDDDD           ", "           BBBBBBB           ", "           DDDDDDD           ", "         CCEEEEEEEC          ", "           DDDDDDD           ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAAAA   ", "     AFFA   GGGGG   AFFA     ", "      FF    HHHHH    FF      ", "      FF    IIIII    FF      ", "     B     BIIIIIB     B     ", "            IIIII            ", "         DDDIIIIIDDF         ", "        CEEEIIIIIEEC         ", "         DDDIIIIIDDF         ", "         BBBIIIIIBB          ", "         DDDIIIIIDDF         ", "        CEEEIIIIIEEC         ", "         DDDIIIIIDDF         ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            HHHHH            ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAA  ", "     AFFA GGGGGGGGG AFFA     ", "      FF  HHJJJJJHH  FF      ", "      FF  III   III  FF      ", "    B     III   III     B    ", "          III   III          ", "        DDIII   III          ", "       CEEIII   III          ", "        DDIII   III          ", "        BBIII   III          ", "        DDIII   III          ", "       CEEIII   III          ", "        DDIII   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          HHHHHHHHH          ", "                             ", "                             ", "                             ", "                             ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAA ", "  AA  AA GGGGGGGGGGG AA  AA  ", "         HJJJJJJJJJH         ", "         II       II         ", "    B    II       II    B    ", "         II       II         ", "       DDII       II         ", "      CEEII       II         ", "       DDII       II         ", "       BBII       II         ", "       DDII       II         ", "      CEEII       II         ", "       DDII       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         HHHHHHHHHHH         ", "           EEEEEEE           ", "                             ", "                             ", "                             ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAA    GGGGGGGGGGGGG    AAAA", " AAA    HJJJJJJJJJJJH    AAA ", "  AA    II         II    AA  ", "   AB   II         II   BA   ", "        II         II        ", "      DDII         II        ", "     CEEII         II        ", "      DDII         II        ", "      BBII         II        ", "      DDII         II        ", "     CEEII         II        ", "      DDII         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        HHHHHHHHHHHHH        ", "          EEHHHHHEE          ", "                             ", "                             ", "                             ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAA   GGGGGGGGGGGGGGG   AAAA", " AAA   HJJJJKJKJKJJJJH   AAA ", "  AA   II   K K K   II   AA  ", "   AB  II   K K K   II  B    ", "   AA  II   K K K   II       ", "   AA DII   K K K   II       ", "   AACEII   K K K   II       ", "   AA DII   K K K   II       ", "   AA BII   K K K   II       ", "   AA DII   K K K   II       ", "   AACEII   K K K   II       ", "   AA DII   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   KKKKK   II       ", "   AA  HHHHH  K  HHHHH       ", "   AA    EEHHHKHHHEE         ", "                             ", "                             ", "                             ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAA   GGGGGGGGGGGGGGG   AAAA", " AAA   HJJJJJJJJJJJJJH   AAA ", "  AA   I             I   AA  ", "   ABBBI             IBBB    ", "   AA  I             I       ", "   AA DI             I       ", "   AACEI             I       ", "   AA DI             I       ", "   AA BI             I       ", "   AA DI             I       ", "   AACEI             I       ", "   AA DI             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  HHHH       HHHH       ", "   AA    EHHH   HHHEE        ", "   AA       HHHHH            ", "                             ", "                             ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAA LGGGGGGGGGGGGGGGGG  AAAA", " AAA LHJJJKJFJMJFJKJJJH  AAA ", "  AA LII  K F M F K  II  AA  ", "  EABLII  K F M F K  II BA   ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALHHHH         HHHH      ", "  AAAL   HHH     HHHE        ", "   AAL     HHHHHHH           ", "    BBBBBBBBB                ", "                             ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "    LLGGGGGGGGGGGGGGGGG      ", "    LLHJJJJJJJJJJJJJJJH  Ba  ", "    LLI               I  Ba  ", "   BLLI               I  a   ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI   K   M   K   I      ", "  E LLHHHH         HHHH      ", "  LLLL   HH       HHE        ", "   LLLLLLLLHHHHHHH           ", "   LLEEEEEEEELLL             ", "    LLLLLLLLLLL              ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "    LLGGGGGGGGGGGGGGGGG      ", "    LLHJJJKJMJMJMJKJJJH  Ba  ", "    LLI   K M M M K   I  B~  ", "   BLLI   K M M M K   I  a   ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K M M M K   I      ", "    LLI   K MMMMM K   I      ", "  E LLHHHHK   M   KHHHH      ", "  LLLL   HK   M   KHE        ", "   LLLLLLLLHHHMHHH           ", "   LLLLLLLLLLLLLL            ", "              LL             ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "    LLGGGGGGGGGGGGGGGGG      ", "    LLHJJJJJJJJJJJJJJJH  Ba  ", "    LLI               I  Ba  ", "   BLLI               I  a   ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI               I      ", "    LLI   K   M   K   I      ", "  E LLHHHH         HHHH      ", "  LLLL   HH       HHE        ", "   LLLLLLLLHHHHHHH           ", "   LLEEEEEEEELLL             ", "    LLLLLLLLLLL              ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAA LGGGGGGGGGGGGGGGGG  AAAA", " AAA LHJJJKJFJMJFJKJJJH  AAA ", "  AA LII  K F M F K  II  AA  ", "  EABLII  K F M F K  II BA   ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALII  K F M F K  II      ", "  EAALHHHH         HHHH      ", "  AAAL   HHH     HHHE        ", "   AAL     HHHHHHH           ", "    BBBBBBBBB                ", "                             ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAA   GGGGGGGGGGGGGGG   AAAA", " AAA   HJJJJJJJJJJJJJH   AAA ", "  AA   I             I   AA  ", "   ABBBI             IBBB    ", "   AA  I             I       ", "   AADDI             I       ", "   AAEEI             I       ", "   AADDI             I       ", "   AABBI             I       ", "   AADDI             I       ", "   AAEEI             I       ", "   AADDI             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  I             I       ", "   AA  HHHH       HHHH       ", "   AA    EHHH   HHHEE        ", "   AA       HHHHH            ", "                             ", "                             ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAA   GGGGGGGGGGGGGGG   AAAA", " AAA   HJJJJKJKJKJJJJH   AAA ", "  AA   II   K K K   II   AA  ", "   AB  II   K K K   II  B    ", "   AA  II   K K K   II       ", "   AA DII   K K K   II       ", "   AACEII   K K K   II       ", "   AA DII   K K K   II       ", "   AA BII   K K K   II       ", "   AA DII   K K K   II       ", "   AACEII   K K K   II       ", "   AA DII   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   K K K   II       ", "   AA  II   KKKKK   II       ", "   AA  HHHHH  K  HHHHH       ", "   AA    EEHHHKHHHEE         ", "                             ", "                             ", "                             ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAA    GGGGGGGGGGGGG    AAAA", " AAA    HJJJJJJJJJJJH    AAA ", "  AA    II         II    AA  ", "   AB   II         II   BA   ", "        II         II        ", "      DDII         II        ", "     CEEII         II        ", "      DDII         II        ", "      BBII         II        ", "      DDII         II        ", "     CEEII         II        ", "      DDII         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        II         II        ", "        HHHHHHHHHHHHH        ", "          EEHHHHHEE          ", "                             ", "                             ", "                             ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAA ", "  AA  AA GGGGGGGGGGG AA  AA  ", "         HJJJJJJJJJH         ", "         II       II         ", "    B    II       II    B    ", "         II       II         ", "       DDII       II         ", "      CEEII       II         ", "       DDII       II         ", "       BBII       II         ", "       DDII       II         ", "      CEEII       II         ", "       DDII       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         II       II         ", "         HHHHHHHHHHH         ", "           EEEEEEE           ", "                             ", "                             ", "                             ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAA  ", "     AFFA GGGGGGGGG AFFA     ", "      FF  HHJJJJJHH  FF      ", "      FF  III   III  FF      ", "    B     III   III     B    ", "          III   III          ", "        DDIII   III          ", "       CEEIII   III          ", "        DDIII   III          ", "        BBIII   III          ", "        DDIII   III          ", "       CEEIII   III          ", "        DDIII   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          III   III          ", "          HHHHHHHHH          ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAAAA   ", "     AFFA   GGGGG   AFFA     ", "      FF    HHHHH    FF      ", "      FF    IIIII    FF      ", "     B     BIIIIIB     B     ", "            IIIII            ", "         DDDIIIIIDDF         ", "        CEEEIIIIIEEC         ", "         DDDIIIIIDDF         ", "         BBBIIIIIBB          ", "         DDDIIIIIDDF         ", "        CEEEIIIIIEEC         ", "         DDDIIIIIDDF         ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            IIIII            ", "            HHHHH            ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("    AAAAAAAAAAAAAAAAAAAAA    ", "      AA             AA      ", "                             ", "                             ", "      B    B     B    B      ", "                             ", "           DDDDDDD           ", "         CCEEEEEEEC          ", "           DDDDDDD           ", "           BBBBBBB           ", "           DDDDDDD           ", "         CCEEEEEEEC          ", "           DDDDDDD           ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("     AAAAAAAAAAAAAAAAAAA     ", "                             ", "                             ", "                             ", "       BBBBBB   BBBBBB       ", "                             ", "                             ", "           CCCCCCC           ", "                             ", "                             ", "                             ", "           CCCCCCC           ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("      AAAAAAAAAAAAAAAAA      ", "        AAAAA   AAAAA        ", "         AAAA   AAAA         ", "         AAAA   AAAA         ", "         A  ABBBA  A         ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("       AAAAAAAAAAAAAAA       ", "        AAAAA   AAAAA        ", "         AAAA   AAAA         ", "         AAAA   AAAA         ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("        AAAAAAAAAAAAA        ", "         AAAA   AAAA         ", "         AAAA   AAAA         ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("         AAAAAAAAAAA         ", "         AAAA   AAAA         ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.HYPER_MECHANICAL_CASING.get()))
                    .where('B', blocks(GTEBlocks.DIMENSION_INJECTION_CASING.get()))
                    .where('C', blocks(GTEBlocks.ADVANCED_FUSION_COIL.get()))
                    .where('D', blocks(GTEBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get()))
                    .where('E', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.HastelloyN)))
                    .where('F', blocks(GTEBlocks.HYPER_CORE.get()))
                    .where('G', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get()))
                    .where('H', blocks(GTEBlocks.SHIELDED_ACCELERATOR.get()))
                    .where('I', blocks(GTEBlocks.QUANTUM_GLASS.get()))
                    .where('J', blocks(GTEBlocks.LAW_FILTER_CASING.get()))
                    .where('K', blocks(GTEBlocks.QUARK_PIPE.get()))
                    .where('L', blocks(GTEBlocks.MOLECULAR_CASING.get()))
                    .where('M', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('a', blocks(GTEBlocks.DIMENSION_INJECTION_CASING.get())
                            .or(GTEPredicates.autoLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/dimension_injection_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition BIOCHEMICAL_REACTION = multiblock("biochemical_reaction", "生化反应室", BiochemicalReactionRoomMachine::new)
            .nonYAxisRotation()
            .recipe(GTERecipeTypes.BIOCHEMICAL_REACTION_RECIPES)
            .parallelizableTooltips()
            .perfectOverclock()
            .block(GTEBlocks.IRIDIUM_CASING)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle("       A   A       ", "       A   A       ", "       A   A       ", "       A   A       ", "       A   A       ", "       A   A       ", "       A   A       ", "       ABBBA       ", "       ABBBA       ", "       ABBBA       ", "       A   A       ", "       A   A       ", "       A   A       ", "       ACCCA       ", "       CDDDC       ", "       CDEDC       ", "       CDDDC       ", "        CCC        ", "                   ")
                    .aisle("                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "        BBB        ", "       B   B       ", "       B F B       ", "       B   B       ", "        BBB        ", "                   ", "        CCC        ", "       CC CC       ", "      CC   CC      ", "      C  F  C      ", "      CC   CC      ", "       CC CC       ", "        CCC        ")
                    .aisle("        GGG        ", "        GGG        ", "         G         ", "         G         ", "         G         ", "         G         ", "        BBB        ", "       B F B       ", "       BFFFB       ", "       B F B       ", "        BFB        ", "         F         ", "        CFC        ", "       CCFCC       ", "      CC F CC      ", "      C  F  C      ", "      CC   CC      ", "       CC CC       ", "        CCC        ")
                    .aisle("        CCC        ", "        A A        ", "        G G        ", "                   ", "                   ", "                   ", "        BBB        ", "       B   B       ", "       B F B       ", "       B   B       ", "        BBB        ", "                   ", "        CCC        ", "       CC CC       ", "      CC   CC      ", "      H  F  H      ", "      CC   CC      ", "       CC CC       ", "        CCC        ")
                    .aisle("        CCC        ", "                   ", "        A A        ", "        G G        ", "                   ", "                   ", "                   ", "        BBB        ", "        BFB        ", "        BBB        ", "                   ", "                   ", "        CCC        ", "       CC CC       ", "      CC   CC      ", "      H  F  H      ", "      CC   CC      ", "       CC CC       ", "        CCC        ")
                    .aisle("        CCC        ", "                   ", "                   ", "        A A        ", "        G G        ", "                   ", "                   ", "         I         ", "        IFI        ", "         I         ", "                   ", "                   ", "        CCC        ", "       CC CC       ", "      CC   CC      ", "      H  F  H      ", "      CC   CC      ", "       CC CC       ", "        CCC        ")
                    .aisle("       CCCCC       ", "                   ", "                   ", "                   ", "        A A        ", "        G G        ", "                   ", "         E         ", "        EFE        ", "         E         ", "                   ", "                   ", "        CCC        ", "       CC CC       ", " CCCCCCC   CCCCCCC ", " CCHHHCC F CCHHHCC ", " CCCCCCC   CCCCCCC ", "       CC CC       ", "        CCC        ")
                    .aisle("A     CCCCCCC     A", "A       III       A", "A       III       A", "A       III       A", "A       III       A", "A       III       A", "A       III       A", "ABBB    EEE    BBBA", "ABBB    EFI    BBBA", "ABBB    EEE    BBBA", "A       III       A", "A       III       A", "A       CCC       A", "ACCCCCCCCCCCCCCCCCA", "CCCCCCCCCCCCCCCCCCC", "C     CCCFCCC     C", "CCCCCCCCCCCCCCCCCCC", " CCCCCCCCCCCCCCCCC ", "        CCC        ")
                    .aisle("  aCCCCCCCCCCCCCaa ", "  aA   IDDDI   Aaa ", "   aA  I   I  Aa   ", "    GA I   I AG    ", "     GAI   IAG     ", "      GI   IG      ", " BBB   I   I   BBB ", "B   B  E   E  B   B", "B F BIEE F EEIB F B", "B   B  E   E  B   B", " BBB   I   I   BBB ", "       IAAAI       ", " CCCCCCC   CCCCCCC ", "CCCCCCCC   CCCCCCCC", "D      C   C      D", "D      C F C      D", "D      C   C      D", "CCCCCCCC   CCCCCCCC", " CCCCCCCJJJCCCCCCC ")
                    .aisle("  aCCCCCCCCCCCCCGa ", "  a    IDDDI    G~ ", "  a    I F I    a  ", "  G    I F I    G  ", "  G    I F I    G  ", "  G    I F I    G  ", " BBB   I F I   BBB ", "B F BIEE F EEIB F B", "BFFFFFFFFFFFFFFFFFB", "B F BIEE F EEIB F B", " BFB   I F I   BFB ", "  F    IAFAI    F  ", " CFCCCCC F CCCCCFC ", "C F    C F C    F C", "D F    C F C    F D", "EFFFFFFFFFFFFFFFFFE", "D      C   C      D", "C      C   C      C", " CCCCCCCJJJCCCCCCC ")
                    .aisle("  aCCCCCCCCCCCCCaa ", "  aA   IDDDI   Aaa ", "   aA  I   I  Aa   ", "    GA I   I AG    ", "     GAI   IAG     ", "      GI   IG      ", " BBB   I   I   BBB ", "B   B  E   E  B   B", "B F BIEE F EEIB F B", "B   B  E   E  B   B", " BBB   I   I   BBB ", "       IAAAI       ", " CCCCCCC   CCCCCCC ", "CCCCCCCC   CCCCCCCC", "D      C   C      D", "D      C F C      D", "D      C   C      D", "CCCCCCCC   CCCCCCCC", " CCCCCCCJJJCCCCCCC ")
                    .aisle("A     CCCCCCC     A", "A       III       A", "A       III       A", "A       III       A", "A       III       A", "A       III       A", "A       III       A", "ABBB    EEE    BBBA", "ABBB    EFE    BBBA", "ABBB    EEE    BBBA", "A       III       A", "A       III       A", "A       CCC       A", "ACCCCCCCCCCCCCCCCCA", "CCCCCCCCCCCCCCCCCCC", "C     CCCFCCC     C", "CCCCCCCCCCCCCCCCCCC", " CCCCCCCCCCCCCCCCC ", "        CCC        ")
                    .aisle("       CCCCC       ", "                   ", "                   ", "                   ", "        A A        ", "        G G        ", "                   ", "         E         ", "        EFE        ", "         E         ", "                   ", "                   ", "        CCC        ", "       CC CC       ", " CCCCCCC   CCCCCCC ", " CCHHHCC F CCHHHCC ", " CCCCCCC   CCCCCCC ", "       CC CC       ", "        CCC        ")
                    .aisle("        CCC        ", "                   ", "                   ", "        A A        ", "        G G        ", "                   ", "                   ", "         I         ", "        IFI        ", "         I         ", "                   ", "                   ", "        CCC        ", "       CC CC       ", "      CC   CC      ", "      H  F  H      ", "      CC   CC      ", "       CC CC       ", "        CCC        ")
                    .aisle("        CCC        ", "                   ", "        A A        ", "        G G        ", "                   ", "                   ", "                   ", "        BBB        ", "        BFB        ", "        BBB        ", "                   ", "                   ", "        CCC        ", "       CC CC       ", "      CC   CC      ", "      H  F  H      ", "      CC   CC      ", "       CC CC       ", "        CCC        ")
                    .aisle("        CCC        ", "        A A        ", "        G G        ", "                   ", "                   ", "                   ", "        BBB        ", "       B   B       ", "       B F B       ", "       B   B       ", "        BBB        ", "                   ", "        CCC        ", "       CC CC       ", "      CC   CC      ", "      H  F  H      ", "      CC   CC      ", "       CC CC       ", "        CCC        ")
                    .aisle("        GGG        ", "        GGG        ", "         G         ", "         G         ", "         G         ", "         G         ", "        BBB        ", "       B F B       ", "       BFFFB       ", "       B F B       ", "        BFB        ", "         F         ", "        CFC        ", "       CCFCC       ", "      CC F CC      ", "      C  F  C      ", "      CC   CC      ", "       CC CC       ", "        CCC        ")
                    .aisle("                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "        BBB        ", "       B   B       ", "       B F B       ", "       B   B       ", "        BBB        ", "                   ", "        CCC        ", "       CC CC       ", "      CC   CC      ", "      C  F  C      ", "      CC   CC      ", "       CC CC       ", "        CCC        ")
                    .aisle("       A   A       ", "       A   A       ", "       A   A       ", "       A   A       ", "       A   A       ", "       A   A       ", "       A   A       ", "       ABBBA       ", "       ABBBA       ", "       ABBBA       ", "       A   A       ", "       A   A       ", "       A   A       ", "       ACCCA       ", "       CDDDC       ", "       CDEDC       ", "       CDDDC       ", "        CCC        ", "                   ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.HastelloyN)))
                    .where('B', blocks(GTEBlocks.CHEMICAL_GRADE_GLASS.get()))
                    .where('C', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where('D', blocks(GTBlocks.FILTER_CASING.get()))
                    .where('E', blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where('F', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('G', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('H', blocks(GTBlocks.CLEANROOM_GLASS.get()))
                    .where('I', blocks(GTBlocks.PLASTCRETE.get()))
                    .where('J', blocks(GTBlocks.FILTER_CASING_STERILE.get()))
                    .where('a', blocks(GTEBlocks.IRIDIUM_CASING.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(blocks(GTEMachines.RADIATION_HATCH.getBlock()).setMaxGlobalLimited(8))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/iridium_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition BIOCHEMICAL_EXTRACTION = multiblock("biochemical_extraction", "生物提取机", BiologicalExtractionMachine::new)
            .nonYAxisRotation()
            .tooltipsText("The machine requires specific fluids as input during operation; otherwise, the recipe is interrupted", "机器运行时需要输入特定流体，否则中断配方")
            .tooltipsText("It needs to input 1B nutrient distillation once per second, and upon success, emits a redstone signal once", "每秒需要输入1B营养精华一次，成功后发出一次红石信号")
            .tooltipsText("After continuous operation for 5 seconds, it needs to input 1B cloud seed concentrated once", "连续运行5秒后需要输入1B浓缩云之精华一次")
            .tooltipsText("After continuous operation for 15 seconds, it needs to input 1B fire water once", "连续运行15秒后需要输入1B火焰水一次")
            .tooltipsText("After continuous operation for 20 seconds, it needs to input 1B vapor of levity once", "连续运行20秒后需要输入1B轻盈之气一次")
            .tooltipsText("If the required fluids for continuous operation do not meet the requirements, the recipe is interrupted; nutrient distillation can be input simultaneously with other fluids", "如果连续运行要求输入的流体不符合要求，则中断配方，营养精华可与其他流体同时输入")
            .tooltipsText("After 20 seconds, only the requirement for inputting nutrient distillation once per second needs to be completed, recipe output begins", "20秒后只需完成每秒的营养精华输入要求，配方开始输出")
            .recipe(GTERecipeTypes.BIOCHEMICAL_EXTRACTION_RECIPES)
            .parallelizableTooltips()
            .customTooltipsBuilder(false, false, true)
            .block(GTBlocks.CASING_STAINLESS_CLEAN)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle("   AAAAA    ", "   BBBBB    ", "   CCCCC    ", "   CCCCC    ", "   CCCCC    ", "  BDDDDDB   ", "   CCCCC    ", "   CCCCC    ", "   CCCCC    ", "  BDDDDDB   ", "   CCCCC    ", "   CCCCC    ", "   CCCCC    ", "   BBBBB    ", "    BBB     ")
                    .aisle("  AAAAAAA   ", "  BBEEEBB   ", "  B     B   ", "  B     B   ", "  B     B   ", " BB     BB  ", "  B     B   ", "  B     B   ", "  B     B   ", " BB     BB  ", "  B     B   ", "  B     B   ", "  B     B   ", "  BFFFFFB   ", "  BBBBBBB   ")
                    .aisle(" AAAAAAAAA  ", " BBBBBBBBB  ", " B       B  ", " B G   G B  ", " B       B  ", "BB       BB ", " B       B  ", " B G   G B  ", " B       B  ", "BB       BB ", " B       B  ", " B G   G B  ", " B       B  ", " BFFFFFFFB  ", " BBBBBBBBB  ")
                    .aisle("aAAAAAAAAAA ", "BBBHEEEHBBB ", "C  H   H  C ", "C GHG GHG C ", "C  H   H  C ", "D  H   H  D ", "C  H   H  C ", "C GHG GHG C ", "C  H   H  C ", "D  H   H  D ", "C  H   H  C ", "C GHG GHG C ", "C  H   H  C ", "BFFFFFFFFFB ", " BBBBBBBBB  ")
                    .aisle("aAAAAAAAAAAa", "BEBEBBBEBEBa", "C         Ca", "C  G   G  C ", "C         C ", "D         D ", "C         C ", "C  G   G  C ", "C         C ", "D         D ", "C         C ", "C  G   G  C ", "C         C ", "BFFFFFFFFFB ", "BBBBDDDBBBB ")
                    .aisle("aAAAAAAAAAAa", "BEBEBFBEBEB~", "C    F    Ca", "C    F    C ", "C    F    C ", "D    F    D ", "C    F    C ", "C    F    C ", "C    F    C ", "D    F    D ", "C    F    C ", "C    F    C ", "C    F    C ", "BFFFFFFFFFB ", "BBBBDDDBBBB ")
                    .aisle("aAAAAAAAAAAa", "BEBEBBBEBEBa", "C         Ca", "C  G   G  C ", "C         C ", "D         D ", "C         C ", "C  G   G  C ", "C         C ", "D         D ", "C         C ", "C  G   G  C ", "C         C ", "BFFFFFFFFFB ", "BBBBDDDBBBB ")
                    .aisle("aAAAAAAAAAA ", "BBBHEEEHBBB ", "C  H   H  C ", "C GHG GHG C ", "C  H   H  C ", "D  H   H  D ", "C  H   H  C ", "C GHG GHG C ", "C  H   H  C ", "D  H   H  D ", "C  H   H  C ", "C GHG GHG C ", "C  H   H  C ", "BFFFFFFFFFB ", " BBBBBBBBB  ")
                    .aisle(" AAAAAAAAA  ", " BBBBBBBBB  ", " B       B  ", " B G   G B  ", " B       B  ", "BB       BB ", " B       B  ", " B G   G B  ", " B       B  ", "BB       BB ", " B       B  ", " B G   G B  ", " B       B  ", " BFFFFFFFB  ", " BBBBBBBBB  ")
                    .aisle("  AAAAAAA   ", "  BBEEEBB   ", "  B     B   ", "  B     B   ", "  B     B   ", " BB     BB  ", "  B     B   ", "  B     B   ", "  B     B   ", " BB     BB  ", "  B     B   ", "  B     B   ", "  B     B   ", "  BFFFFFB   ", "  BBBBBBB   ")
                    .aisle("   AAAAA    ", "   BBBBB    ", "   CCCCC    ", "   CCCCC    ", "   CCCCC    ", "  BDDDDDB   ", "   CCCCC    ", "   CCCCC    ", "   CCCCC    ", "  BDDDDDB   ", "   CCCCC    ", "   CCCCC    ", "   CCCCC    ", "   BBBBB    ", "    BBB     ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where('B', blocks(GTBlocks.PLASTCRETE.get()))
                    .where('C', blocks(GTBlocks.CLEANROOM_GLASS.get()))
                    .where('D', blocks(GTBlocks.FILTER_CASING_STERILE.get()))
                    .where('E', blocks(GTBlocks.FILTER_CASING.get()))
                    .where('F', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.HastelloyN)))
                    .where('G', blocks(GTBlocks.CASING_GRATE.get()))
                    .where('H', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('a', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(GTEPartAbility.THREAD_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(IMPORT_FLUIDS).setExactLimit(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_clean_stainless_steel"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition NANITES_INTEGRATED_PROCESSING_CENTER = multiblock("nanites_integrated_processing_center", "纳米集成加工中心", NanitesIntegratedMachine::new)
            .nonYAxisRotation()
            .tooltipsText("Our advanced nanites colony production technology has completely surpassed the old-fashioned chemical production line", "我们先进的纳米蜂群生产技术已经完全超越了老式的化工产线")
            .tooltipsText("Install the corresponding module to unlock the corresponding recipe", "安装对应模块解锁对应配方")
            .tooltipsText("Installing a nanites into the host can reduce the probability of pollution.", "主机中放入纳米蜂群可减少污染概率")
            .tooltipsText("Base chance, iron: 1, iridium: 1.1, orichalcum: 1.2, infuscolium: 1.3, draconium: 1.4, cosmic neutronium: 1.5, eternity: 1.6", "基础概率，铁：1，铱：1.1，山铜：1.2，魔金：1.3，龙", "基础概率，铁：1，铱：1.1，山铜：1.2，魔金：1.3，龙：1.4，宇宙中子素：1.5，永恒：1.6")
            .recipe(GTERecipeTypes.NANITES_INTEGRATED_PROCESSING_CENTER_RECIPES)
            .customTooltipsBuilder(false, true, true)
            .parallelizableTooltips()
            .block(GTEBlocks.NAQUADAH_ALLOY_CASING)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA               ", "CC          DCCDCCD          CC               ", "CC          DCCDCCD          CC               ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA      EEEEE    ", "CC          DCCDCCD          CC      EEEEE    ", "CC          DCCDCCD          CC      EEEEE    ", "            D  D  D                  EEEEE    ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA    EEEEEEEEE  ", "                                   EEFFFFFEE  ", "                                   EEFFFFFEE  ", "                                   EEFFFFFEE  ", "                                     FFFFF    ", "                                     FFFFF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FFFFF    ", "                                     FFFFF    ", "                                      HHH     ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA   EEEEEEEEEEE ", "                                  E FFFFFFF E ", "                                  E F     F E ", "                                  E F     F E ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    HHHHHHH   ", "                                       H      ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA   EEEEEEEEEEE ", "                                  EFFFFFFFFFE ", "                                  EF       FE ", "                                  EF       FE ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   HH     HH  ", "                                    HHHHHHH   ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA  EEEEEEEEEEEEa", "                                 EFFFFFFFFFFFE", "                                 EF  I   I  FE", "                                 EF  I   I  FE", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                   H       H  ", "                                    HHHHHHH   ", "                                      EEE     ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAABBEEEEEEEEEEEEa", "                               BBEFFFFFFFFFFFE", "                               BBEF   JJJ   FE", "                                 EF   J J   FE", "                                  F   J J   F ", "                                  F   J J   F ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  F   J J   F ", "                                  F   JJJ   F ", "                                  HH       HH ", "                                    HH   HH   ", "                                     EEEEE    ", "                                              ", "                                              ", "                                              ", "       K               K                      ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLBEEEEEEEEEEEEa", "                               LLEFFFFFFFFFFFE", "                               BBEF   JMJ   FE", "                                 EF    M    FE", "                                  F    N    F ", "                                  F    N    F ", "                                  F    M    F ", "                                  F    M    F ", "                                  F    N    F ", "                                  F    N    F ", "                                  F    M    F ", "                                  F    M    F ", "                                  F   JMJ   F ", "                                  HH       HH ", "                                   HHH   HHH  ", "                                     EEEEE    ", "                                              ", "                                              ", "                                              ", "      KLK             KLK                     ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAABBEEEEEEEEEEEEa", "                               BBEFFFFFFFFFFFE", "                               BBEF   JJJ   FE", "                                 EF   J J   FE", "                                  F   J J   F ", "                                  F   J J   F ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  F   J J   F ", "                                  F   JJJ   F ", "                                  HH       HH ", "                                    HH   HH   ", "                                     EEEEE    ", "                                              ", "                                              ", "                                              ", "      KLK             KLK                     ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA  EEEEEEEEEEEEa", "                                 EFFFFFLFFFFFE", "                                 EF  I   I  FE", "                                 EF  I   I  FE", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                   H       H  ", "                                    HHHHHHH   ", "                                     OEEEO    ", "                                              ", "                                              ", "                                              ", "      KLK             KLK                     ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA   EEEEEEEEEEa ", "                                  EFFFFLFFFFE ", "                                  EF       FE ", "                                  EF       FE ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   HH     HH  ", "                                    HHHHHHH   ", "                                     DOOOD    ", "                                              ", "                                              ", "                                              ", "      KLK             KLK                     ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA   EEEEEEEEEEa ", "                                  E FFFLFFF E ", "                                  E F     F E ", "                                  E F     F E ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    HHHHHHH   ", "                                       H      ", "                                     D   D    ", "                                              ", "                                              ", "                                              ", "      KLK             KLK                     ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA    EEEEEEEEa  ", "                                   EEFFLFFEE  ", "                                   EEFFFFFEE  ", "                                   EEFFFFFEE  ", "                                     FFFFF    ", "                                     FFFFF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FFFFF    ", "                                     FFFFF    ", "                                      HHH     ", "                                              ", "                                     D   D    ", "                                              ", "                                              ", "                                              ", "      KLK             KLK                     ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA   EEEEEEEEEEEa", "CC           CCDCC           CCKKKEEEEELEEEEEa", "CC           CCDCC           CCKKKEEEEEEEEEEEE", "               D               KKKEEEEEEEEEEEE", "               D               KKKEEEEEEEEEEE ", "               D             DDDDDD  D   D    ", "               D             DDDDDD  DEEED    ", "               D                     D   D    ", "               D                     DEEED    ", "               D                     D   D    ", "               D                     DEEED    ", "               D                     D   D    ", "               D                     DEEED    ", "               D                     D   D    ", "               D                     D   D    ", "               D                     D   D    ", "               D                              ", "DD           D D D           DDDDDD           ", "DD           D D D           DD               ", "DD    KLK    D D D    KLK    DD               ", "DD     K     D D D     K     DD               ", "DD          DD D DD          DD               ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAAKKKEEEEEEEEEEEa", "CC           CC CC           CCKKKEPPPPLPPPPPa", "CC           CC CC           CCK  B          E", "                               K KEPPPPLPPPPPE", "                               K KEEEEEEEEEEE ", "                             DDKKKD  E   E    ", "                             DDKKKD           ", "                               KKK            ", "                               KKK            ", "                               KKK            ", "                               KKK            ", "                               KKK            ", "                               KKK            ", "                               KKK            ", "                               KKK            ", "                               KKK   D   D    ", "                               KKK            ", "DD           D D D           DDKKKD           ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK            ", "KKKKKKKLKKKKKKKKKKKKKKK KKKKKKKKKK            ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK            ", "DD          DD D DD          DD               ")
                    .aisle("BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKKKEEEEEEEEEEEa", "DD           D   D           DDKLLLLLLLLLLLLL~", "DD           D   D           DDKL B    L     E", "DD           D   D           DDKLLLLLLLLLLLLLE", "DD           D   D           DDKLKEEEEEEEEEEE ", "DD           D   D           DDKLKD  E   E    ", "DD           D   D           DDK KD           ", "DD           D   D           DDK K            ", "DD           D   D           DDK K            ", "DD           D   D           DDK K            ", "DD           D   D           DDK K            ", "DD           D   D           DDK K            ", "DD           D   D           DDK K            ", "DD           D   D           DDK K            ", "DD           D   D           DDK K            ", "DD           D   D           DDK K   D   D    ", "DD           D   D           DDK K            ", "DD           DDDDD           DDK KD           ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK K            ", "K                                K            ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK            ", "DD          DD D DD          DD               ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAAKKKEEEEEEEEEEEa", "CC           CC CC           CCKKKEPPPPLPPPPPa", "CC           CC CC           CCK  B          E", "                               K KEPPPPLPPPPPE", "                               K KEEEEEEEEEEE ", "                             DDKKKD  E   E    ", "                             DDKKKD           ", "                               KKK            ", "                               KKK            ", "                               KKK            ", "                               KKK            ", "                               KKK            ", "                               KKK            ", "                               KKK            ", "                               KKK            ", "                               KKK   D   D    ", "                               KKK            ", "DD           D D D           DDKKKD           ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK            ", "KKKKKKKKKKKKKKKKKKKKKKKLKKKKKKKKKK            ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK            ", "DD          DD D DD          DD               ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA   EEEEEEEEEEEa", "CC           CCDCC           CCKKKEEEEELEEEEEa", "CC           CCDCC           CCKKKEEEEEEEEEEEE", "               D               KKKEEEEEEEEEEEE", "               D               KKKEEEEEEEEEEE ", "               D             DDDDDD  D   D    ", "               D             DDDDDD  DEEED    ", "               D                     D   D    ", "               D                     DEEED    ", "               D                     D   D    ", "               D                     DEEED    ", "               D                     D   D    ", "               D                     DEEED    ", "               D                     D   D    ", "               D                     D   D    ", "               D                     D   D    ", "               D                              ", "DD           D D D           DDDDDD           ", "DD           D D D           DD               ", "DD    KLK    D D D    KLK    DD               ", "DD     K     D D D     K     DD               ", "DD          DD D DD          DD               ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA    EEEEEEEEa  ", "                                   EEFFLFFEE  ", "                                   EEFFFFFEE  ", "                                   EEFFFFFEE  ", "                                     FFFFF    ", "                                     FFFFF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FFFFF    ", "                                     FFFFF    ", "                                      HHH     ", "                                              ", "                                     D   D    ", "                                              ", "                                              ", "                                              ", "      KLK             KLK                     ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA   EEEEEEEEEEa ", "                                  E FFFLFFF E ", "                                  E F     F E ", "                                  E F     F E ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    HHHHHHH   ", "                                       H      ", "                                     D   D    ", "                                              ", "                                              ", "                                              ", "      KLK             KLK                     ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA   EEEEEEEEEEa ", "                                  EFFFFLFFFFE ", "                                  EF       FE ", "                                  EF       FE ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   HH     HH  ", "                                    HHHHHHH   ", "                                     DOOOD    ", "                                              ", "                                              ", "                                              ", "      KLK             KLK                     ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA  EEEEEEEEEEEEa", "                                 EFFFFFLFFFFFE", "                                 EF  I   I  FE", "                                 EF  I   I  FE", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                   H       H  ", "                                    HHHHHHH   ", "                                     OEEEO    ", "                                              ", "                                              ", "                                              ", "      KLK             KLK                     ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAABBEEEEEEEEEEEEa", "                               BBEFFFFFFFFFFFE", "                               BBEF   JJJ   FE", "                                 EF   J J   FE", "                                  F   J J   F ", "                                  F   J J   F ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  F   J J   F ", "                                  F   JJJ   F ", "                                  HH       HH ", "                                    HH   HH   ", "                                     EEEEE    ", "                                              ", "                                              ", "                                              ", "      KLK             KLK                     ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLBEEEEEEEEEEEEa", "                               LLEFFFFFFFFFFFE", "                               BBEF   JMJ   FE", "                                 EF    M    FE", "                                  F    N    F ", "                                  F    N    F ", "                                  F    M    F ", "                                  F    M    F ", "                                  F    N    F ", "                                  F    N    F ", "                                  F    M    F ", "                                  F    M    F ", "                                  F   JMJ   F ", "                                  HH       HH ", "                                   HHH   HHH  ", "                                     EEEEE    ", "                                              ", "                                              ", "                                              ", "      KLK             KLK                     ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAABBEEEEEEEEEEEEa", "                               BBEFFFFFFFFFFFE", "                               BBEF   JJJ   FE", "                                 EF   J J   FE", "                                  F   J J   F ", "                                  F   J J   F ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  G   J J   G ", "                                  F   J J   F ", "                                  F   JJJ   F ", "                                  HH       HH ", "                                    HH   HH   ", "                                     EEEEE    ", "                                              ", "                                              ", "                                              ", "       K               K                      ", "       K               K                      ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA  EEEEEEEEEEEEa", "                                 EFFFFFFFFFFFE", "                                 EF  I   I  FE", "                                 EF  I   I  FE", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                  F  I   I  F ", "                                   H       H  ", "                                    HHHHHHH   ", "                                      EEE     ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA   EEEEEEEEEEE ", "                                  EFFFFFFFFFE ", "                                  EF       FE ", "                                  EF       FE ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   F       F  ", "                                   HH     HH  ", "                                    HHHHHHH   ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA   EEEEEEEEEEE ", "                                  E FFFFFFF E ", "                                  E F     F E ", "                                  E F     F E ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    F     F   ", "                                    HHHHHHH   ", "                                       H      ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA    EEEEEEEEE  ", "                                   EEFFFFFEE  ", "                                   EEFFFFFEE  ", "                                   EEFFFFFEE  ", "                                     FFFFF    ", "                                     FFFFF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FGFGF    ", "                                     FFFFF    ", "                                     FFFFF    ", "                                      HHH     ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "                                              ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA      EEEEE    ", "CC          DCCDCCD          CC      EEEEE    ", "CC          DCCDCCD          CC      EEEEE    ", "            D  D  D                  EEEEE    ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ")
                    .aisle("AAAAAAAAAAAAAAABAAAAAAAAAAAAAAA               ", "CC          DCCDCCD          C                ", "CC          DCCDCCD          CC               ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ", "            D  D  D                           ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.HIGH_STRENGTH_CONCRETE.get()))
                    .where('B', blocks(GTBlocks.CASING_GRATE.get()))
                    .where('C', blocks(GTBlocks.CASING_ASSEMBLY_LINE.get()))
                    .where('D', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Polytetrafluoroethylene)))
                    .where('E', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get()))
                    .where('F', blocks(GTEBlocks.PRESSURE_CONTAINMENT_CASING.get()))
                    .where('G', blocks(GTBlocks.FUSION_GLASS.get()))
                    .where('H', blocks(GTEBlocks.OXIDATION_RESISTANT_HASTELLOY_N_MECHANICAL_CASING.get()))
                    .where('I', blocks(ChemicalHelper.getBlock(TagPrefix.block, GTMaterials.NeodymiumMagnetic)))
                    .where('J', heatingCoils())
                    .where('K', blocks(GTBlocks.CASING_STAINLESS_TURBINE.get()))
                    .where('L', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('M', blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where('N', blocks(GTEBlocks.PPS_CORROSION_RESISTANT_MECHANICAL_HOUSING.get()))
                    .where('O', blocks(GTEBlocks.AMPROSIUM_GEARBOX.get()))
                    .where('P', blocks(GCYMBlocks.ELECTROLYTIC_CELL.get()))
                    .where('a', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setExactLimit(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/hyper_mechanical_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition ORE_EXTRACTION_MODULE = multiblock("ore_extraction_module", "矿石萃取模块", NanitesModuleMachine::new)
            .nonYAxisRotation()
            .recipe(GTERecipeTypes.NANITES_INTEGRATED_PROCESSING_CENTER_RECIPES)
            .customTooltipsBuilder(false, true, false)
            .block(GTBlocks.CASING_HSSE_STURDY)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("AA    a~a    AA", "AA    a a    AA", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      I I      ", "      I I      ", "               ")
                    .aisle("AA    KKK    AA", "AA    a a    AA", "      a a      ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "      I I      ", "      I I      ", "      KKK      ", "               ")
                    .aisle("      KKK      ", "               ", "      a a      ", "      a a      ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "      I I      ", "      I I      ", "               ", "      KKK      ", "               ")
                    .aisle("      KKK      ", "               ", "               ", "      a a      ", "      a a      ", "      LLL      ", "               ", "               ", "               ", "               ", "               ", "      LLL      ", "      I I      ", "      I I      ", "               ", "               ", "      KKK      ", "               ")
                    .aisle("     KKKKK     ", "               ", "               ", "               ", "      a a      ", "     LI IL     ", "               ", "               ", "               ", "               ", "               ", "     LI IL     ", "      I I      ", "               ", "               ", "               ", "     KKKKK     ", "               ")
                    .aisle("    KKKKKKK    ", "      MMM      ", "      MMM      ", "      MMM      ", "      MMM      ", "    L MMM L    ", "      MNM      ", "      MNM      ", "      MNM      ", "      MNM      ", "      MNM      ", "    L MMM L    ", "      MMM      ", "      MMM      ", "      MMM      ", "      MMM      ", "    KKKKKKK    ", "               ")
                    .aisle("IKKKKKKKKKKKKKI", "II   MMMMM   II", "JII  MO OM  IIJ", "J II MO OM II J", "J  IIMO OMII  J", "J  LIMO OMIL  J", "J    MO OM    J", "J    MO OM    J", "J    MO OM    J", "J    MO OM    J", "J    MO OM    J", "J  LIMO OMIL  J", "J  IIMO OMII  J", "J II MO OM II J", "JII  MO OM  IIJ", "II   MMMMM   II", "IKKKKKKKKKKKKKI", "      CCC      ")
                    .aisle(" KKKKKKKKKKKKK ", "     MMMMM     ", "     M G M     ", "     M G M     ", "     M G M     ", "   L M G M L   ", "     N G N     ", "     N G N     ", "     N G N     ", "     N G N     ", "     N G N     ", "   L M G M L   ", "     M G M     ", "     M G M     ", "     M G M     ", "     MMGMM     ", " KKKKKKHKKKKKK ", "      CHC      ")
                    .aisle("IKKKKKKKKKKKKKI", "II   MMMMM   II", "JII  MO OM  IIJ", "J II MO OM II J", "J  IIMO OMII  J", "J  LIMO OMIL  J", "J    MO OM    J", "J    MO OM    J", "J    MO OM    J", "J    MO OM    J", "J    MO OM    J", "J  LIMO OMIL  J", "J  IIMO OMII  J", "J II MO OM II J", "JII  MO OM  IIJ", "II   MMMMM   II", "IKKKKKKKKKKKKKI", "      CHC      ")
                    .aisle("    KKKKKKK    ", "      MMM      ", "      MMM      ", "      MMM      ", "      MMM      ", "    L MMM L    ", "      MNM      ", "      MNM      ", "      MNM      ", "      MNM      ", "      MNM      ", "    L MMM L    ", "      MMM      ", "      MMM      ", "      MMM      ", "      MMM      ", "    KKKKKKK    ", "       H       ")
                    .aisle("     KKKKK     ", "               ", "               ", "               ", "      I I      ", "     LI IL     ", "               ", "               ", "               ", "               ", "               ", "     LI IL     ", "      I I      ", "               ", "               ", "               ", "     KKKKK     ", "       H       ")
                    .aisle("      KKK      ", "               ", "               ", "      I I      ", "      I I      ", "      LLL      ", "               ", "               ", "               ", "               ", "               ", "      LLL      ", "      I I      ", "      I I      ", "               ", "               ", "      KKK      ", "       H       ")
                    .aisle("      KKK      ", "               ", "      I I      ", "      I I      ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "      I I      ", "      I I      ", "               ", "      KKK      ", "       H       ")
                    .aisle("AA    KKK    AA", "AA    I I    AA", "      I I      ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "      I I      ", "      I I      ", "      KKK      ", "       H       ")
                    .aisle("AA    I I    AA", "AA    I I    AA", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      J J      ", "      I I      ", "      I I      ", "       H       ")
                    .aisle("               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "       H       ")
                    .aisle("AA    BBB    AA", "AA    B B    AA", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      B B      ", "      BBB      ", "       H       ")
                    .aisle("AA    BBB    AA", "AA    B B    AA", "      B B      ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "      B B      ", "      B B      ", "      BBB      ", "       H       ")
                    .aisle("      BBB      ", "               ", "      B B      ", "      B B      ", "               ", "      DDD      ", "               ", "               ", "               ", "               ", "               ", "      DDD      ", "               ", "      B B      ", "      B B      ", "               ", "      BBB      ", "       H       ")
                    .aisle("      BBB      ", "               ", "               ", "      B B      ", "      B B      ", "    DDB BDD    ", "               ", "               ", "               ", "               ", "               ", "    DDB BDD    ", "      B B      ", "      B B      ", "               ", "               ", "      BBB      ", "       H       ")
                    .aisle("     BBBBB     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "   D EEEEE D   ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "   D EEEEE D   ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     BBBBB     ", "       H       ")
                    .aisle("    BBBBBBB    ", "    EEEEEEE    ", "    EEF FEE    ", "    EEF FEE    ", "    EEF FEE    ", "   DEEF FEED   ", "    EEF FEE    ", "    EEF FEE    ", "    EEF FEE    ", "    EEF FEE    ", "    EEF FEE    ", "   DEEF FEED   ", "    EEF FEE    ", "    EEF FEE    ", "    EEF FEE    ", "    EEEEEEE    ", "    BBBBBBB    ", "       H       ")
                    .aisle("BBBBBBBBBBBBBBB", "BB  EEEEEEE  BB", "CBB EFC CFE BBC", "C BBEFC CFEBB C", "C  BEFC CFEB  C", "C DBEFC CFEBD C", "C   EFC CFE   C", "C   EFC CFE   C", "C   EFC CFE   C", "C   EFC CFE   C", "C   EFC CFE   C", "C DBEFC CFEBD C", "C  BEFC CFEB  C", "C BBEFC CFEBB C", "CBB EFC CFE BBC", "BB  EEEEEEE  BB", "BBBBBBBBBBBBBBB", "    CCCHCCC    ")
                    .aisle("BBBBBBBBBBBBBBB", "    EEEEEEE    ", "    E  G  E    ", "    E  G  E    ", "    E  G  E    ", "  D E  G  E D  ", "    E  G  E    ", "    E  G  E    ", "    E  G  E    ", "    E  G  E    ", "    E  G  E    ", "  D E  G  E D  ", "    E  G  E    ", "    E  G  E    ", "    EF G FE    ", "    EFEGEFE    ", "BBBBBFBHBFBBBBB", "    CFCHCFC    ")
                    .aisle("BBBBBBBBBBBBBBB", "BB  EEEEEEE  BB", "CBB EFC CFE BBC", "C BBEFC CFEBB C", "C  BEFC CFEB  C", "C DBEFC CFEBD C", "C   EFC CFE   C", "C   EFC CFE   C", "C   EFC CFE   C", "C   EFC CFE   C", "C   EFC CFE   C", "C DBEFC CFEBD C", "C  BEFC CFEB  C", "C BBEFC CFEBB C", "CBB EFC CFE BBC", "BB  EEEEEEE  BB", "BBBBBBBBBBBBBBB", "    CFCCCFC    ")
                    .aisle("    BBBBBBB    ", "    EEEEEEE    ", "    EEF FEE    ", "    EEF FEE    ", "    EEF FEE    ", "   DEEF FEED   ", "    EEF FEE    ", "    EEF FEE    ", "    EEF FEE    ", "    EEF FEE    ", "    EEF FEE    ", "   DEEF FEED   ", "    EEF FEE    ", "    EEF FEE    ", "    EEF FEE    ", "    EEEEEEE    ", "    BBBBBBB    ", "    CFFFFFC    ")
                    .aisle("     BBBBB     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "   D EEEEE D   ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "   D EEEEE D   ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     BBBBB     ", "               ")
                    .aisle("      BBB      ", "               ", "               ", "      B B      ", "      B B      ", "    DDB BDD    ", "               ", "               ", "               ", "               ", "               ", "    DDB BDD    ", "      B B      ", "      B B      ", "               ", "               ", "      BBB      ", "               ")
                    .aisle("      BBB      ", "               ", "      B B      ", "      B B      ", "               ", "      DDD      ", "               ", "               ", "               ", "               ", "               ", "      DDD      ", "               ", "      B B      ", "      B B      ", "               ", "      BBB      ", "               ")
                    .aisle("AA    BBB    AA", "AA    B B    AA", "      B B      ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "      B B      ", "      B B      ", "      BBB      ", "               ")
                    .aisle("AA    BBB    AA", "AA    B B    AA", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      C C      ", "      B B      ", "      BBB      ", "               ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTBlocks.CASING_ASSEMBLY_LINE.get()))
                    .where('B', blocks(GTEBlocks.HYPER_MECHANICAL_CASING.get()))
                    .where('C', frames(GTMaterials.Polytetrafluoroethylene))
                    .where('D', blocks(GCYMBlocks.MOLYBDENUM_DISILICIDE_COIL_BLOCK.get()))
                    .where('E', blocks(GTBlocks.CASING_PTFE_INERT.get()))
                    .where('F', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('G', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('H', blocks(GTBlocks.CASING_TITANIUM_TURBINE.get()))
                    .where('I', blocks(GTBlocks.CASING_HSSE_STURDY.get()))
                    .where('J', frames(GTMaterials.Invar))
                    .where('K', blocks(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST.get()))
                    .where('L', blocks(GTBlocks.SUPERCONDUCTING_COIL.get()))
                    .where('M', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('N', blocks(GTEBlocks.NAQUADAH_BOROSILICATE_GLASS.get()))
                    .where('O', blocks(GTBlocks.CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where('a', blocks(GTBlocks.CASING_HSSE_STURDY.get()).or(GTEPredicates.autoLaserAbilities(definition.getRecipeTypes())))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_sturdy_hsse"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition POLYMER_TWISTING_MODULE = multiblock("polymer_twisting_module", "聚合物扭曲模块", NanitesModuleMachine::new)
            .nonYAxisRotation()
            .recipe(GTERecipeTypes.NANITES_INTEGRATED_PROCESSING_CENTER_RECIPES)
            .customTooltipsBuilder(false, true, false)
            .block(GTBlocks.CASING_PTFE_INERT)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("AA  aaa~aaa  AA", "AA  GGGGGGG  AA", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    GGGGGGG    ", "    BBBBBBB    ", "               ")
                    .aisle("AA aBBBBBBBa AA", "AA GG     GG AA", "   H       H   ", "   H B     H   ", "   H  B    H   ", "   H   B   H   ", "   H    B  H   ", "   H     B H   ", "   H      BH   ", "   H       H   ", "   H       H   ", "   HB      H   ", "   H B     H   ", "   H  B    H   ", "   H   B   H   ", "   GG  G  GG   ", "   BBBBBBBBB   ", "               ")
                    .aisle("  aBBBBBBBBBa  ", "  GG       GG  ", "  H B       H  ", "  H         H  ", "  H         H  ", "  H         H  ", "  H         H  ", "  H         H  ", "  H         H  ", "  H        BH  ", "  HB        H  ", "  H         H  ", "  H         H  ", "  H         H  ", "  H         H  ", "  GG   G   GG  ", "  BBBBBBBBBBB  ", "               ")
                    .aisle(" aBBBBBBBBBBBa ", " GGB       BGG ", " H           H ", " H           H ", " H           H ", " H           H ", " H           H ", " H           H ", " H           H ", " HB          H ", " H          BH ", " H           H ", " H           H ", " H           H ", " H           H ", " GG    G    GG ", " BBBBBBBBBBBBB ", "               ")
                    .aisle("aBBBBBBBBBBBBBa", "GG           GG", "H           B H", "H             H", "H             H", "H             H", "H             H", "H             H", "HB            H", "H             H", "H             H", "H            BH", "H             H", "H             H", "H             H", "GG     G     GG", "BBBBIIIBIIIBBBB", "    CCC CCC    ")
                    .aisle("aBBBBBBBBBBBBBa", "G    D   D    G", "H    D   D    H", "H    D   D   BH", "H    D   D    H", "H    D   D    H", "H    D   D    H", "HB   D   D    H", "H    D   D    H", "H    D   D    H", "H    D   D    H", "H    D   D    H", "H    D   D   BH", "H    D   D    H", "H    D   D    H", "G    D G D    G", "BBBBIDIBIDIBBBB", "    CDDDDDC    ")
                    .aisle("aBBBBBBBBBBBBBa", "G             G", "H             H", "H             H", "H            BH", "H             H", "HB            H", "H             H", "H             H", "H             H", "H             H", "H             H", "H             H", "H            BH", "H             H", "G      G      G", "BBBBIIIBIIIBBBB", "    CDCCCDC    ")
                    .aisle("aBBBBBBBBBBBBBa", "G      E      G", "G      E      G", "G      E      G", "G      E      G", "GB     E     BG", "G      E      G", "G      E      G", "G      E      G", "G      E      G", "G      E      G", "G      E      G", "G      E      G", "G      E      G", "GB     E     BG", "GGGGGGGEGGGGGGG", "BBBBBBBFBBBBBBB", "     D F D     ")
                    .aisle("aBBBBBBBBBBBBBa", "G             G", "H             H", "H             H", "HB            H", "H             H", "H            BH", "H             H", "H             H", "H             H", "H             H", "H             H", "H             H", "HB            H", "H             H", "G      G      G", "BBBBIIIBIIIBBBB", "    CDCFCDC    ")
                    .aisle("aBBBBBBBBBBBBBa", "G    D   D    G", "H    D   D    H", "HB   D   D    H", "H    D   D    H", "H    D   D    H", "H    D   D    H", "H    D   D   BH", "H    D   D    H", "H    D   D    H", "H    D   D    H", "H    D   D    H", "HB   D   D    H", "H    D   D    H", "H    D   D    H", "G    D G D    G", "BBBBIDIBIDIBBBB", "    CDCFCDC    ")
                    .aisle("aBBBBBBBBBBBBBa", "GG           GG", "H B           H", "H             H", "H             H", "H             H", "H             H", "H             H", "H            BH", "H             H", "H             H", "HB            H", "H             H", "H             H", "H             H", "GG     G     GG", "BBBBIIIBIIIBBBB", "    CCCFCCC    ")
                    .aisle(" aBBBBBBBBBBBa ", " GGB       BGG ", " H           H ", " H           H ", " H           H ", " H           H ", " H           H ", " H           H ", " H           H ", " H          BH ", " HB          H ", " H           H ", " H           H ", " H           H ", " H           H ", " GG    G    GG ", " BBBBBBBBBBBBB ", "       F       ")
                    .aisle("  aBBBBBBBBBa  ", "  GG       GG  ", "  H       B H  ", "  H         H  ", "  H         H  ", "  H         H  ", "  H         H  ", "  H         H  ", "  H         H  ", "  HB        H  ", "  H        BH  ", "  H         H  ", "  H         H  ", "  H         H  ", "  H         H  ", "  GG   G   GG  ", "  BBBBBBBBBBB  ", "       F       ")
                    .aisle("AA aBBBBBBBa AA", "AA GG     GG AA", "   H       H   ", "   H     B H   ", "   H    B  H   ", "   H   B   H   ", "   H  B    H   ", "   H B     H   ", "   HB      H   ", "   H       H   ", "   H       H   ", "   H      BH   ", "   H     B H   ", "   H    B  H   ", "   H   B   H   ", "   GG  G  GG   ", "   BBBBBBBBB   ", "       F       ")
                    .aisle("AA  aaaaaaa  AA", "AA  GGGGGGG  AA", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    HHHGHHH    ", "    GGGGGGG    ", "    BBBBBBB    ", "       F       ")
                    .aisle("               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "       F       ")
                    .aisle("AA   BBBBB   AA", "AA     C     AA", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "     BBBBB     ", "       F       ")
                    .aisle("AA BBBBBBBBB AA", "AA     B     AA", "        B      ", "               ", "               ", "               ", "               ", "      B        ", "       B       ", "        B      ", "               ", "               ", "               ", "               ", "               ", "       B       ", "   BBBBBBBBB   ", "       F       ")
                    .aisle("  BBBBBBBBBBB  ", "               ", "               ", "         B     ", "               ", "               ", "     B         ", "               ", "               ", "               ", "         B     ", "               ", "               ", "     B         ", "      B        ", "       B       ", "  BBBBBBBBBBB  ", "       F       ")
                    .aisle(" BBBBBBBBBBBBB ", "               ", "               ", "               ", "          B    ", "    B          ", "               ", "               ", "               ", "               ", "               ", "          B    ", "    B          ", "               ", "               ", "       B       ", " BBBBBBBBBBBBB ", "       F       ")
                    .aisle(" BBBBBBBBBBBBB ", "               ", "               ", "               ", "   B           ", "           B   ", "               ", "               ", "               ", "               ", "               ", "   B           ", "           B   ", "               ", "               ", "       B       ", " BBBBBBBBBBBBB ", "       F       ")
                    .aisle("BBBBBBBBBBBBBBB", "               ", "               ", "  B            ", "               ", "               ", "            B  ", "               ", "               ", "               ", "  B            ", "               ", "               ", "            B  ", "               ", "       B       ", "BBBBBBBBBBBBBBB", "       F       ")
                    .aisle("BBBBBBBBBBBBBBB", "       D       ", " B     D       ", "       D       ", "       D       ", "       D       ", "       D       ", "       D     B ", "       D       ", " B     D       ", "       D       ", "       D       ", "       D       ", "       D       ", "       D    B  ", "       D       ", "BBBBBBBBBBBBBBB", "      CFC      ")
                    .aisle("BBBBBBBBBBBBBBB", "CB    DED    BC", "C     DED     C", "C     DED     C", "C     DED     C", "C     DED     C", "C     DED     C", "C     DED     C", "CB    DED    BC", "C     DED     C", "C     DED     C", "C     DED     C", "C     DED     C", "C     DED     C", "C     DED     C", "CBBBBBDEDBBBBBC", "BBBBBBBFBBBBBBB", "      CFC      ")
                    .aisle("BBBBBBBBBBBBBBB", "       D       ", "       D     B ", "       D       ", "       D       ", "       D       ", "       D       ", " B     D       ", "       D       ", "       D     B ", "       D       ", "       D       ", "       D       ", "       D       ", "  B    D       ", "       D       ", "BBBBBBBBBBBBBBB", "      CCC      ")
                    .aisle("BBBBBBBBBBBBBBB", "               ", "               ", "            B  ", "               ", "               ", "  B            ", "               ", "               ", "               ", "            B  ", "               ", "               ", "  B            ", "               ", "       B       ", "BBBBBBBBBBBBBBB", "               ")
                    .aisle(" BBBBBBBBBBBBB ", "               ", "               ", "               ", "           B   ", "   B           ", "               ", "               ", "               ", "               ", "               ", "           B   ", "   B           ", "               ", "               ", "       B       ", " BBBBBBBBBBBBB ", "               ")
                    .aisle(" BBBBBBBBBBBBB ", "               ", "               ", "               ", "    B          ", "          B    ", "               ", "               ", "               ", "               ", "               ", "    B          ", "          B    ", "               ", "               ", "       B       ", " BBBBBBBBBBBBB ", "               ")
                    .aisle("  BBBBBBBBBBB  ", "               ", "               ", "     B         ", "               ", "               ", "         B     ", "               ", "               ", "               ", "     B         ", "               ", "               ", "         B     ", "        B      ", "       B       ", "  BBBBBBBBBBB  ", "               ")
                    .aisle("AA BBBBBBBBB AA", "AA     B     AA", "      B        ", "               ", "               ", "               ", "               ", "        B      ", "       B       ", "      B        ", "               ", "               ", "               ", "               ", "               ", "       B       ", "   BBBBBBBBB   ", "               ")
                    .aisle("AA   BBBBB   AA", "AA     C     AA", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "       C       ", "     BBBBB     ", "               ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTBlocks.CASING_ASSEMBLY_LINE.get()))
                    .where('B', blocks(GTBlocks.CASING_PTFE_INERT.get()))
                    .where('C', frames(GTMaterials.Polytetrafluoroethylene))
                    .where('D', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('E', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('F', blocks(GTBlocks.CASING_STAINLESS_TURBINE.get()))
                    .where('G', blocks(GTEBlocks.HYPER_MECHANICAL_CASING.get()))
                    .where('H', blocks(GTEBlocks.CHEMICAL_GRADE_GLASS.get()))
                    .where('I', blocks(GTBlocks.HERMETIC_CASING_ZPM.get()))
                    .where('a', blocks(GTBlocks.CASING_PTFE_INERT.get())
                            .or(GTEPredicates.autoLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_inert_ptfe"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition BIOENGINEERING_MODULE = multiblock("bioengineering_module", "生物工程模块", NanitesModuleMachine::new)
            .nonYAxisRotation()
            .recipe(GTERecipeTypes.NANITES_INTEGRATED_PROCESSING_CENTER_RECIPES)
            .customTooltipsBuilder(false, true, false)
            .block(GTEBlocks.IRIDIUM_CASING)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("AA   aa~aa   AA", "AA   CCCCC   AA", "     DDDDD     ", "     CCCCC     ", "     DDDDD     ", "     CCCCC     ", "     DDDDD     ", "     CCCCC     ", "     DDDDD     ", "     CCCCC     ", "     DDDDD     ", "     CCCCC     ", "     DDDDD     ", "     CCCCC     ", "     DDDDD     ", "     CCCCC     ", "     CCCCC     ", "               ")
                    .aisle("AA aaHHHHHaa AA", "AA CCCIIICCC AA", "   DDD   DDD   ", "   CCCIIICCC   ", "   DDD   DDD   ", "   CCCIIICCC   ", "   DDD   DDD   ", "   CCCIIICCC   ", "   DDD   DDD   ", "   CCCIIICCC   ", "   DDD   DDD   ", "   CCCIIICCC   ", "   DDD   DDD   ", "   CCCIIICCC   ", "   DDD   DDD   ", "   CCCIIICCC   ", "   CCCCCCCCC   ", "               ")
                    .aisle("  aHHHHHHHHHa  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  CCJJJJJJJCC  ", "               ")
                    .aisle(" aHHHHHHHHHHHa ", " CCIIIIIIIIICC ", " DD    K    DD ", " CCIIIIKIIIICC ", " DD    K    DD ", " CCIIIIKIIIICC ", " DD    K    DD ", " CCIIIIIIIIICC ", " DD    K    DD ", " CCIIIIKIIIICC ", " DD    K    DD ", " CCIIIIKIIIICC ", " DD    K    DD ", " CCIIIIKIIIICC ", " DD    K    DD ", " CCIIIIKIIIICC ", " CCCCCCKCCCCCC ", "   KKKKKKKKK   ")
                    .aisle(" aHHHHHHHHHHHa ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " CJCJJJJJJJCJC ", "  LKLLLLLLLKL  ")
                    .aisle("aHHHHHHHHHHHHHa", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "CCJCJCCCCCJCJCC", "  LKL     LKL  ")
                    .aisle("aHHHHHHHHHHHHHa", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "CCJCJCCCCCJCJCC", "  LKL     LKL  ")
                    .aisle("aHHHHHHHHHHHHHa", "CIIIIIIFIIIIIIC", "D  K   F   K  D", "CIIKIIIFIIIKIIC", "D  K   F   K  D", "CIIKIIIFIIIKIIC", "D  K   F   K  D", "CIIIIIIFIIIIIIC", "D  K   F   K  D", "CIIKIIIFIIIKIIC", "D  K   F   K  D", "CIIKIIIFIIIKIIC", "D  K   F   K  D", "CIIKIIIFIIIKIIC", "D  K   F   K  D", "CIIKIIIFIIIKIIC", "CCJKJCCGCCJKJCC", "  LKL  G  LKL  ")
                    .aisle("aHHHHHHHHHHHHHa", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "D    L   L    D", "CIIIILIIILIIIIC", "CCJCJCCCCCJCJCC", "       G       ")
                    .aisle("aHHHHHHHHHHHHHa", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "DD   LL LL   DD", "CCIIILLILLIIICC", "CCJCJCCCCCJCJCC", "       G       ")
                    .aisle(" aHHHHHHHHHHHa ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " D           D ", " CIIIIIIIIIIIC ", " CJCJJJJJJJCJC ", "       G       ")
                    .aisle(" aHHHHHHHHHHHa ", " CCIIIIIIIIICC ", " DD    K    DD ", " CCIIIIKIIIICC ", " DD    K    DD ", " CCIIIIKIIIICC ", " DD    K    DD ", " CCIIIIIIIIICC ", " DD    K    DD ", " CCIIIIKIIIICC ", " DD    K    DD ", " CCIIIIKIIIICC ", " DD    K    DD ", " CCIIIIKIIIICC ", " DD    K    DD ", " CCIIIIKIIIICC ", " CCCCCCCCCCCCC ", "       G       ")
                    .aisle("  aHHHHHHHHHa  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  DD       DD  ", "  CCIIIIIIICC  ", "  CCJJJJJJJCC  ", "       G       ")
                    .aisle("AA aaHHHHHaa AA", "AA CCCIIICCC AA", "   DDD   DDD   ", "   CCCIIICCC   ", "   DDD   DDD   ", "   CCCIIICCC   ", "   DDD   DDD   ", "   CCCIIICCC   ", "   DDD   DDD   ", "   CCCIIICCC   ", "   DDD   DDD   ", "   CCCIIICCC   ", "   DDD   DDD   ", "   CCCIIICCC   ", "   DDD   DDD   ", "   CCCIIICCC   ", "   CCCCCCCCC   ", "       G       ")
                    .aisle("AA   aaaaa   AA", "AA   CCCCC   AA", "     DDDDD     ", "     CCCCC     ", "     DDDDD     ", "     CCCCC     ", "     DDDDD     ", "     CCCCC     ", "     DDDDD     ", "     CCCCC     ", "     DDDDD     ", "     CCCCC     ", "     DDDDD     ", "     CCCCC     ", "     DDDDD     ", "     CCCCC     ", "     CCCCC     ", "       G       ")
                    .aisle("               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "       G       ")
                    .aisle("AA   CCCCCBB AA", "AA      BB   AA", "       B       ", "      B        ", "    B          ", "               ", "               ", "               ", "          B    ", "        BB     ", "       B       ", "     BB        ", "    B          ", "               ", "               ", "               ", "     CCCCCB    ", "       G       ")
                    .aisle("AA CCCCCCCCC AA", "AA    DDD    AA", "       D       ", "               ", "               ", "   B           ", "               ", "           B   ", "               ", "               ", "               ", "               ", "               ", "   B           ", "       D       ", "      DDD  B   ", "   CCCCCCCCC   ", "       G       ")
                    .aisle("  CCCCCCCCCCC  ", "    DD   DD    ", "    DDD DDD    ", "     DDDDD     ", "      DDD      ", "               ", "  B         B  ", "               ", "               ", "               ", "               ", "               ", "      DDD      ", "     DDDDD     ", "  B DDD DDD B  ", "    DD   DD    ", "  CCCEEEEECCC  ", "     BBGBB     ")
                    .aisle("BCCCCCCCCCCCCC ", "   D       D   ", "   D       D   ", "   DD     DD   ", "    DD   DD    ", "     DDDDD   B ", "      DDD      ", " B             ", "               ", "               ", "      DDD      ", "     DDDDD     ", "    DD   DD    ", "   DD     DD B ", "   D       D   ", " B D       D   ", " CCCCCCCCCCCCC ", "       G       ")
                    .aisle("BCCCCCCCCCCCCC ", "  D         D  ", "  D         D  ", "   D       D   ", "   D       D  B", "    D     D    ", "     D   D     ", "      DDD      ", "B              ", "      DDD      ", "     D   D     ", "    D     D    ", "   D       D  B", "   D       D   ", "  D         D  ", "  D         D  ", "BCCCCCCCCCCCCC ", "       G       ")
                    .aisle("CCCCCCCCCCCCCCC", "B D         D  ", "  D         D  ", "  D         D B", "   D       D   ", "   D       D   ", "    D     D    ", "     DDDDD     ", "      DDD      ", "B    DDDDD     ", "    D     D    ", "   D       D  B", "   D       D   ", "  D         D  ", "  D         D  ", "  D         D  ", "CCECCCCCCCCCECC", "  B    G    B  ")
                    .aisle("CCCCCCCCCCCCCCC", "BD           D ", "  D         D  ", "  D         D B", "  D         D  ", "   D       D   ", "   D       D   ", "    DD   DD    ", "     DDDDD     ", "B   DD   DD    ", "   D       D   ", "   D       D  B", "  D         D  ", "  D         D  ", "  D         D  ", " D           D ", "CCECCCCCCCCCECC", "  B    G    B  ")
                    .aisle("CCCCCCCCCCCCCCC", " D     F     D ", "BD     F     DB", "  D    F    D  ", "  D    F    D  ", "   D   F   D   ", "   D   F   D   ", "    DD F DD    ", "     DDFDD     ", "    DD F DD    ", "B  D   F   D  B", "   D   F   D   ", "  D    F    D  ", "  D    F    D  ", " D     F     D ", " D     F     D ", "CCECCCCGCCCCECC", "  B    G    B  ")
                    .aisle("CCCCCCCCCCCCCCC", " D           DB", "  D         D  ", "B D         D  ", "  D         D  ", "   D       D   ", "   D       D   ", "    DD   DD    ", "     DDDDD     ", "    DD   DD   B", "   D       D   ", "B  D       D   ", "  D         D  ", "  D         D  ", "  D         D  ", " D           D ", "CCECCCCCCCCCECC", "  B         B  ")
                    .aisle("CCCCCCCCCCCCCCC", "  D         D B", "  D         D  ", "B D         D  ", "   D       D   ", "   D       D   ", "    D     D    ", "     DDDDD     ", "      DDD      ", "     DDDDD    B", "    D     D    ", "B  D       D   ", "   D       D   ", "  D         D  ", "  D         D  ", "  D         D  ", "CCECCCCCCCCCECC", "  B         B  ")
                    .aisle(" CCCCCCCCCCCCCB", "  D         D  ", "  D         D  ", "   D       D   ", "B  D       D   ", "    D     D    ", "     D   D     ", "      DDD      ", "              B", "      DDD      ", "     D   D     ", "    D     D    ", "B  D       D   ", "   D       D   ", "  D         D  ", "  D         D  ", " CCCCCCCCCCCCCB", "               ")
                    .aisle(" CCCCCCCCCCCCCB", "   D       D   ", "   D       D   ", "   DD     DD   ", "    DD   DD    ", " B   DDDDD     ", "      DDD      ", "             B ", "               ", "               ", "      DDD      ", "     DDDDD     ", "    DD   DD    ", " B DD     DD   ", "   D       D   ", "   D       D B ", " CCCCCCCCCCCCC ", "               ")
                    .aisle("  CCCCCCCCCCC  ", "    DD   DD    ", "    DDD DDD    ", "     DDDDD     ", "      DDD      ", "               ", "  B         B  ", "               ", "               ", "               ", "               ", "               ", "      DDD      ", "     DDDDD     ", "  B DDD DDD B  ", "    DD   DD    ", "  CCCEEEEECCC  ", "     BBBBB     ")
                    .aisle("AA CCCCCCCCC AA", "AA    DDD    AA", "       D       ", "               ", "               ", "           B   ", "               ", "   B           ", "               ", "               ", "               ", "               ", "               ", "           B   ", "       D       ", "   B  DDD      ", "   CCCCCCCCC   ", "               ")
                    .aisle("AA BBCCCCC   AA", "AA   BB      AA", "       B       ", "        BB     ", "          B    ", "               ", "               ", "               ", "    B          ", "     BB        ", "       B       ", "        BB     ", "          B    ", "               ", "               ", "               ", "    BCCCCC     ", "               ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTBlocks.CASING_ASSEMBLY_LINE.get()))
                    .where('B', frames(GTMaterials.Iridium))
                    .where('C', blocks(GTBlocks.PLASTCRETE.get()))
                    .where('D', blocks(GTBlocks.CLEANROOM_GLASS.get()))
                    .where('E', blocks(GTEBlocks.HIGH_ENERGY_ULTRAVIOLET_EMITTER_CASING.get()))
                    .where('F', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('G', blocks(GTBlocks.CASING_TUNGSTENSTEEL_TURBINE.get()))
                    .where('H', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('I', blocks(GTEBlocks.STERILE_WATER_PLANT_CASING.get()))
                    .where('J', blocks(GTBlocks.FILTER_CASING_STERILE.get()))
                    .where('K', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('L', frames(GTMaterials.Polytetrafluoroethylene))
                    .where('a', blocks(GTEBlocks.IRIDIUM_CASING.get())
                            .or(GTEPredicates.autoLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/iridium_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition PLANET_CORE_DRILLING = multiblock("planet_core_drilling", "星核钻机", PlanetCoreDrillingMachine::new)
            .nonYAxisRotation()
            .tooltipsText("A hammer capable of shaking the core of a planet", "一把能够撼动星核的重锤")
            .tooltipsText("Produces a total of 1024 ores from the current world per second.", "每秒产出当前世界的全部矿石65536份")
            .recipe(GTRecipeTypes.DUMMY_RECIPES)
            .customTooltipsBuilder(false, true, false)
            .block(GTEBlocks.MOLECULAR_CASING)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle
                    .aisle
                    .aisle("          BBBBBBB CCCCCCCCC BBBBBBB          ", "           BBABAB CDDDDDDDC BABABB           ", "           BBBBBB  DDDDDDD  BBBBBB           ", "           BBBBBB           BBBBBB           ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("         BBBBBBBB CCCCCCCCC BBBBBBBB         ", "          BB A AB CDDDDDDDC BA A BB          ", "          BB A AB CDDDDDDDC BA A BB          ", "          BBBABAB           BABABBB          ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("        BBBBBBBBB CCCCCCCCC BBBBBBBBB        ", "         BB  A AB C       C BA A  BB         ", "         BB     B CDDDDDDDC B     BB         ", "         BBBBABAB  DDDDDDD  BABABBBB         ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("       BBBBBBBBBB CCCCCCCCC BBBBBBBBBB       ", "        BB   A AB C       C BA A   BB        ", "        BB      B CEEEEEEEC BA     BB        ", "        BBBBBABAB CDDDDDDDC BABABBBBB        ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("      BBBBBBBBBBB CCCCCCCCC BBBBBBBBBBB      ", "       BB    A AB C       C BB A    BB       ", "       BB      AB C       C BA      BB       ", "       BBBBBBABAB CDDDDDDDC BABABBBBBB       ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("     BBBBBBBBBBB  CCCCCCCCC  BBBBBBBBBBB     ", "      BB     ABB  CCCCCCCCC  BBA     BB      ", "      BB     ABA  CCCCCCCCC  ABA     BB      ", "      BBBBBBBABA  CCCCCCCCC  ABABBBBBBB      ", "        FFF                       FFF        ", "        FFF                       FFF        ", "        FFF                       FFF        ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("    BBBBBBBBBBB    GGGGGGG    BBBBBBBBBBB    ", "     BB      BB    AAAAAAA    BB      BB     ", "     BB      ABA   AAAAAAA   ABA      BB     ", "     BBBBBBBBABA   AAAAAAA   ABABBBBBBBB     ", "       FEEEF       AAAAAAA       FEEEF       ", "       FEEEF                     FEEEF       ", "       FEEEF                     FEEEF       ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("   BBBBBBBBBBB   GGGGGGGGGGG   BBBBBBBBBBB   ", "    BB      BB   AAGGGGGGGAA   BB      BB    ", "    BB      BA A AAGGGGGGGAA A AB      BB    ", "    BBBBBBBBBA A AAGGGGGGGAA A ABBBBBBBBB    ", "       FEEEF     AAAAAEAAAAA     FEEEF       ", "       FEEEF                     FEEEF       ", "       FEEEF                     FEEEF       ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("  BBBBBBBBBBB  GGGGGGGGGGGGGGG  BBBBBBBBBBB  ", "   BB      BB  AAGGGGGGGGGGGAA  BB      BB   ", "   BB      BBA AAGGGGGGGGGGGAA ABB      BB   ", "   BBBBBBBBBBA AAGGGGGGGGGGGAA ABBBBBBBBBB   ", "       FEEEF   AAAAAAAEAAAAAAA   FEEEF       ", "       FEEEF                     FEEEF       ", "       FEEEF                     FEEEF       ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("  BBBBBBBBBB GGGGGGGGGGGGGGGGGGG BBBBBBBBBB  ", "  BB      BB AAGGGGGGGGGGGGGGGAA BB      BB  ", "  BB      BB AAGGGGGGGGGGGGGGGAA BB      BB  ", "  BBBBBBBBBB AAGGGGGGGGGGGGGGGAA BBBBBBBBBB  ", "        FFF  AAAAAAAAAEAAAAAAAAA  FFF        ", "        FFF                       FFF        ", "        FFF                       FFF        ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("  BBBBBBBBB GGGGGGGGGGGGGGGGGGGGG BBBBBBBBB  ", "  B      BB AAAAAGGGGGGGGGGGAAAAA BB      B  ", "  B      BB AAAAAGGGGGGGGGGGAAAAA BB      B  ", "  BBBBBBBBB AAAAAGGGGGGGGGGGAAAAA BBBBBBBBB  ", "            AAAAAAAAAAEAAAAAAAAAA            ", "            HHFHH           HHFHH            ", "            HHFHH           HHFHH            ", "            HHFHH           HHFHH            ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "             DDD             DDD             ", "             DDD             DDD             ", "             DDD             DDD             ", "             BBB             BBB             ", "             BBB             BBB             ", "             BBB             BBB             ", "                                             ", "                                             ")
                    .aisle("AABBBBBBBB GGGGGGGGGGGGGGGGGGGGGGG BBBBBBBBAA", " AAAAAAABB AA   AGGGGGGGGGGGA   AA BBAAAAAAA ", " ABA   AAAAAA   AGGGGGGGGGGGA   AAAAAA   ABA ", "  BAAAAAAAAAA   AGGGGGGGGGGGA   AAAAAAAAAAB  ", "           AA   AAAAAAEAAAAAA   AA           ", "            H   H           H   H            ", "            H   H           H   H            ", "            HGGGH           HGGGH            ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CCC             CCC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CCC             CCC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CCC             CCC             ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "            DDCDD           DDCDD            ", "            DDCDD           DDCDD            ", "            DDCDD           DDCDD            ", "            BBBBB           BBBBB            ", "            BBBBB           BBBBB            ", "            BBBBB           BBBBB            ", "                                             ", "                                             ")
                    .aisle("  BBBBBBB  GGGGGGGGGGGGGGGGGGGGGGG  BBBBBBB  ", "  B    BB  AA   AGGGGGGGGGGGA   AA  BB    B  ", "  B    BB  AA   AGGGGGGGGGGGA   AA  BB    B  ", "  BBBBBBB  AA   AGGGGGGGGGGGA   AA  BBBBBBB  ", "           AA   AAAAAAEAAAAAA   AA           ", "            F   F           F   F            ", "            F   F           F   F            ", "            FGGGF           FGGGF            ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             ECE             ECE             ", "             ECE             ECE             ", "             ECE             ECE             ", "             CCC             CCC             ", "             ECE             ECE             ", "             ECE             ECE             ", "             ECE             ECE             ", "             CCC             CCC             ", "             ECE             ECE             ", "             ECE             ECE             ", "             ECE             ECE             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "            DCCCD           DCCCD            ", "            DCCCD           DCCCD            ", "            DCCCD           DCCCD            ", "            BBBBA           ABBBB            ", "            BBBBA           ABBBB            ", "            BBBBB           BBBBB            ", "                                             ", "                                             ")
                    .aisle("AABBBBBB  GGGGGGGGGAAAAAAAGGGGGGGGG  BBBBBBAA", " AAAAABB  AGA   AGGAAAAAAAGGA   AGA  BAAAAAA ", " ABA AAAAAAGA   AGGAAAAAAAGGA   AGAAAAA  ABA ", "  BAAAAAAAAGA   AGGAAAAAAAGGA   AGAAAAAAAAB  ", "          AAA   AAAAAAAAAAAAA   AAA          ", "            H   H  AAAAAAA  H   H            ", "            H   H  AAAAAAA  H   H            ", "            HGGGH  AAAAAAA  HGGGH            ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CCC             CCC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CCC             CCC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CCC             CCC             ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "            DDCDD           DDCDD            ", "            DDCDD           DDCDD            ", "            DDCDD           DDCDD            ", "            BBBBA           ABBBB            ", "            BBBBA           ABBBB            ", "            BBBBB           BBBBB            ", "                                             ", "                                             ")
                    .aisle("  BBBBB   GGGGGGGGAAAAAAAAAGGGGGGGG   BBBBB  ", "  BBBBB   AGAAAAAGAAAAAAAAAGAAAAAGA   BBBBB  ", "  BBBBB   AGAAAAAGAAAAAAAAAGAAAAAGA   BBBBB  ", "  BBBBB   AGAAAAAGAAAAAAAAAGAAAAAGA   BBBBB  ", "          AAAAAAAAAAAAAAAAAAAAAAAAA          ", "            HHFHH AAAAAAAAA HHFHH            ", "            HHFHH AAAAAAAAA HHFHH            ", "            HHFHH AAAAAAAAA HHFHH            ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "             DDD             DDD             ", "             DDD             DDD             ", "             DDD             DDD             ", "             BAAAA         AAAAB             ", "             BAAAA         AAAAB             ", "             BBB             BBB             ", "                                             ", "                                             ")
                    .aisle("         GGGGGGGGAAHHHHHHHAAGGGGGGGG         ", "         AGGGGGGGAAHHHHHHHAAGGGGGGGA         ", "         AGGGGGGGAAIIIIIIIAAGGGGGGGA         ", "         AGGGGGGGAAIIIIIIIAAGGGGGGGA         ", "         AAAAAAAAAAIIIIIIIAAAAAAAAAA         ", "                 AAIIIIIIIAA                 ", "                 AAHHHHHHHAA                 ", "                 AAHHHHHHHAA                 ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                   AAAAAAA                   ", "                AAAAAAAAAAAAA                ", "                AAAAAAAAAAAAA                ", "                   AAAAAAA                   ", "                                             ", "                                             ")
                    .aisle("  CCCCCC GGGGGGGAAJ       JAAGGGGGGG CCCCCC  ", "  CCCCCC AGGGGGGAAJ       JAAGGGGGGA CCCCCC  ", "   CCCCC AGGGGGGAAD       DAAGGGGGGA CCCCC   ", "     CCC AGGGGGGAAD       DAAGGGGGGA CCC     ", "         AAAAAAAAAD       DAAAAAAAAA         ", "                AAD       DAA                ", "                AAJ       JAA                ", "                AAJ       JAA                ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                  ACCCCCCCA                  ", "                 AAAAAAAAAAA                 ", "                 AAAAAAAAAAA                 ", "                  AAAAAAAAA                  ", "                    DDDDD                    ", "                                             ")
                    .aisle("  CCCCCCGGGGGGGAAH         HAAGGGGGGGCCCCCC  ", "  DD   CAGGGGGGAAH  L   L  HAAGGGGGGAC   Da  ", "  DDDE CAGGGGGGAAI  KL LK  IAAGGGGGGAC EDDa  ", "    DDDCAGGGGGGAAI  KKKKK  IAAGGGGGGACDDD    ", "        AAAAAAAAAI  K   K  IAAAAAAAAA        ", "               AAI  K   K  IAA               ", "               AAH  K   K  HAA               ", "               AAH  KKKKK  HAA               ", "                    K MMM                    ", "                   MMM  K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   KM                   ", "                    K MMM                    ", "                   MMM  K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   KM                   ", "                    K MMM                    ", "                   MMM  K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   KM                   ", "                    K MMM                    ", "                   MMM  K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   KM                   ", "                    K MMM                    ", "                   MMM  K                    ", "                 AKKKKKKKKCA                 ", "                 AANNNNNNNAA                 ", "                 AANNNNNNNAA                 ", "                 AANNNNNNNAA                 ", "                   DDDDDDD                   ", "                                             ")
                    .aisle("  CCCCCCGGGGGGGAAH   LLL   HAAGGGGGGGCCCCCC  ", "  DD   CAGGGGGGAAH LKOOOKL HAAGGGGGGAC   Da  ", "  DDDE CAGGGGGGAAI KKNPNKK IAAGGGGGGAC EDDa  ", "    DDDCAGGGGGGAAI KKNPNKK IAAGGGGGGACDDD    ", "        AAAAAAAAAI KKNPNKK IAAAAAAAAA        ", "               AAI KKNPNKK IAA               ", "               AAH KKNPNKK HAA               ", "               AAH KKNPNKK HAA               ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   MKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKM                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   MKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKM                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   MKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKM                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   MKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKM                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                 AKKKNKNKKCA                 ", "                 AAN NAN NAA                 ", "                 AAN NAN NAA                 ", "                 AAN NAN NAA                 ", "                  DDDDDDDDD                  ", "                                             ")
                    .aisle("  CCCCCCGGGGGGGAAH  L   L  HAAGGGGGGGCCCCCCa ", "  DD   CAGGGGGGAAH  OOOOO  HAAGGGGGGAC   DDa ", "  DDDE CAGGGGGGAAI LNQ QNL IAAGGGGGGAC EDDa  ", "    DDDCAGGGGGGAAI KNQ QNK IAAGGGGGGACDDD    ", "        AAAAAAAAAI  NQ QN  IAAAAAAAAA        ", "               AAI  NQ QN  IAA               ", "               AAH  NQ QN  HAA               ", "               AAH KNQ QNK HAA               ", "                    NQ QN                    ", "                    NQ QN                    ", "                   MNQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QNM                   ", "                    NQ QN                    ", "                    NQ QN                    ", "                   MNQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QNM                   ", "                    NQ QN                    ", "                    NQ QN                    ", "                   MNQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QNM                   ", "                    NQ QN                    ", "                    NQ QN                    ", "                   MNQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QNM                   ", "                    NQ QN                    ", "                    NQ QN                    ", "                 AKKNQ QNKCA                 ", "                 AANNNANNNAA                 ", "                 AANNNANNNAA                 ", "                 AANNNANNNAA                 ", "                  DDDDDDDDD                  ", "                                             ")
                    .aisle("  CCCCCCGGGGGGGAAH  L   L  HAAGGGGGGGCCCCCCa ", "  DD   CAGGGGGGAAH  OOOOO  HAAGGGGGGAC   DD~ ", "  DDDE CAGGGGGGAAI  P S P  IAAGGGGGGAC EDDa  ", "    DDDCAGGGGGGAAI KP S PK IAAGGGGGGACDDD    ", "        AEEEEEEAAI  P S P  IAAEEEEEEA        ", "               AAI  P S P  IAA               ", "               AAH  P S P  HAA               ", "               AAH KP S PK HAA               ", "                    P S P                    ", "                    P S P                    ", "                   MP S P                    ", "                    P S P                    ", "                    P S P                    ", "                    P S P                    ", "                    P S PM                   ", "                    P S P                    ", "                    P S P                    ", "                    P S P                    ", "                   MP S P                    ", "                    P S P                    ", "                    P S P                    ", "                    P S P                    ", "                    P S PM                   ", "                    P S P                    ", "                    P S P                    ", "                    P S P                    ", "                   MP S P                    ", "                    P S P                    ", "                    P S P                    ", "                    P S P                    ", "                    P S PM                   ", "                    P S P                    ", "                    P S P                    ", "                    P S P                    ", "                   MP S P                    ", "                    P S P                    ", "                    P S P                    ", "                    P S P                    ", "                    P S PM                   ", "                    P S P                    ", "                    P S P                    ", "                    P S P                    ", "                 AKKK S KKCA                 ", "                 AANAAAAANAA                 ", "                 AANAAAAANAA                 ", "                 AANAAAAANAA                 ", "                  DDDDDDDDD                  ", "                                             ")
                    .aisle("  CCCCCCGGGGGGGAAH  L   L  HAAGGGGGGGCCCCCCa ", "  DD   CAGGGGGGAAH  OOOOO  HAAGGGGGGAC   DDa ", "  DDDE CAGGGGGGAAI LNQ QNL IAAGGGGGGAC EDDa  ", "    DDDCAGGGGGGAAI KNQ QNK IAAGGGGGGACDDD    ", "        AAAAAAAAAI  NQ QN  IAAAAAAAAA        ", "               AAI  NQ QN  IAA               ", "               AAH  NQ QN  HAA               ", "               AAH KNQ QNK HAA               ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                   MNQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QNM                   ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                   MNQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QNM                   ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                   MNQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QNM                   ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                   MNQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QNM                   ", "                    NQ QN                    ", "                    NQ QN                    ", "                    NQ QN                    ", "                 AKKNQ QNKCA                 ", "                 AANNNANNNAA                 ", "                 AANNNANNNAA                 ", "                 AANNNANNNAA                 ", "                  DDDDDDDDD                  ", "                                             ")
                    .aisle("  CCCCCCGGGGGGGAAH   LLL   HAAGGGGGGGCCCCCC  ", "  DD   CAGGGGGGAAH LKOOOKL HAAGGGGGGAC   Da  ", "  DDDE CAGGGGGGAAI KKNPNKK IAAGGGGGGAC EDDa  ", "    DDDCAGGGGGGAAI KKNPNKK IAAGGGGGGACDDD    ", "        AAAAAAAAAI KKNPNKK IAAAAAAAAA        ", "               AAI KKNPNKK IAA               ", "               AAH KKNPNKK HAA               ", "               AAH KKNPNKK HAA               ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   MKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKM                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   MKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKM                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   MKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKM                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   MKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKM                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                   KKNPNKK                   ", "                 AKKKNKNKKCA                 ", "                 AAN NAN NAA                 ", "                 AAN NAN NAA                 ", "                 AAN NAN NAA                 ", "                  DDDDDDDDD                  ", "                                             ")
                    .aisle("  CCCCCCGGGGGGGAAH         HAAGGGGGGGCCCCCC  ", "  DD   CAGGGGGGAAH  L   L  HAAGGGGGGAC   Da  ", "  DDDE CAGGGGGGAAI  KLLLK  IAAGGGGGGAC EDDa  ", "    DDDCAGGGGGGAAI  KKKKK  IAAGGGGGGACDDD    ", "        AAAAAAAAAI  K   K  IAAAAAAAAA        ", "               AAI  K   K  IAA               ", "               AAH  K   K  HAA               ", "               AAH  KKKKK  HAA               ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                   MK   K                    ", "                    MMM K                    ", "                    K  MMM                   ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                   MK   K                    ", "                    MMM K                    ", "                    K  MMM                   ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                   MK   K                    ", "                    MMM K                    ", "                    K  MMM                   ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                   MK   K                    ", "                    MMM K                    ", "                    K  MMM                   ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                    K   K                    ", "                 AKKKKKKKKCA                 ", "                 AANNNNNNNAA                 ", "                 AANNNNNNNAA                 ", "                 AANNNNNNNAA                 ", "                   DDDDDDD                   ", "                                             ")
                    .aisle("  CCCCCC GGGGGGGAAJ       JAAGGGGGGG CCCCCC  ", "  CCCCCC AGGGGGGAAJ       JAAGGGGGGA CCCCCC  ", "   CCCCC AGGGGGGAAD       DAAGGGGGGA CCCCC   ", "     CCC AGGGGGGAAD       DAAGGGGGGA CCC     ", "         AAAAAAAAAD       DAAAAAAAAA         ", "                AAD       DAA                ", "                AAJ       JAA                ", "                AAJ       JAA                ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                  AKKKKKKKA                  ", "                 AAAAAAAAAAA                 ", "                 AAAAAAAAAAA                 ", "                  AAAAAAAAA                  ", "                    DDDDD                    ", "                                             ")
                    .aisle("         GGGGGGGGAAHHHHHHHAAGGGGGGGG         ", "         AGGGGGGGAAHHHHHHHAAGGGGGGGA         ", "         AGGGGGGGAAIIIIIIIAAGGGGGGGA         ", "         AGGGGGGGAAIIIIIIIAAGGGGGGGA         ", "         AAAAAAAAAAIIIIIIIAAAAAAAAAA         ", "                 AAIIIIIIIAA                 ", "                 AAHHHHHHHAA                 ", "                 AAHHHHHHHAA                 ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                   AAAAAAA                   ", "                AAAAAAAAAAAAA                ", "                AAAAAAAAAAAAA                ", "                   AAAAAAA                   ", "                                             ", "                                             ")
                    .aisle("  BBBBB   GGGGGGGGAAAAAAAAAGGGGGGGG   BBBBB  ", "  BBBBB   AGAAAAAGAAAAAAAAAGAAAAAGA   BBBBB  ", "  BBBBB   AGAAAAAGAAAAAAAAAGAAAAAGA   BBBBB  ", "  BBBBB   AGAAAAAGAAAAAAAAAGAAAAAGA   BBBBB  ", "          AAAAAAAAAAAAAAAAAAAAAAAAA          ", "            HHFHH AAAAAAAAA HHFHH            ", "            HHFHH AAAAAAAAA HHFHH            ", "            HHFHH AAAAAAAAA HHFHH            ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "             DDD             DDD             ", "             DDD             DDD             ", "             DDD             DDD             ", "             BAAAA         AAAAB             ", "             BAAAA         AAAAB             ", "             BBB             BBB             ", "                                             ", "                                             ")
                    .aisle("AABBBBBB  GGGGGGGGGAAAAAAAGGGGGGGGG  BBBBBBAA", " AAAAAAB  AGA   AGGAAAAAAAGGA   AGA  BBAAAAA ", " ABA  AAAAAGA   AGGAAAAAAAGGA   AGAAAAAA ABA ", "  BAAAAAAAAGA   AGGAAAAAAAGGA   AGAAAAAAAAB  ", "          AAA   AAAAAAAAAAAAA   AAA          ", "            H   H  AAAAAAA  H   H            ", "            H   H  AAAAAAA  H   H            ", "            HGGGH  AAAAAAA  HGGGH            ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CCC             CCC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CCC             CCC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CCC             CCC             ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "            DDCDD           DDCDD            ", "            DDCDD           DDCDD            ", "            DDCDD           DDCDD            ", "            BBBBA           ABBBB            ", "            BBBBA           ABBBB            ", "            BBBBB           BBBBB            ", "                                             ", "                                             ")
                    .aisle("  BBBBBBB  GGGGGGGGGGGGGGGGGGGGGGG  BBBBBBB  ", "  B    BB  AA   AGGGGGGGGGGGA   AA  BB    B  ", "  B    BB  AA   AGGGGGGGGGGGA   AA  BB    B  ", "  BBBBBBB  AA   AGGGGGGGGGGGA   AA  BBBBBBB  ", "           AA   AAAAAAEAAAAAA   AA           ", "            F   F           F   F            ", "            F   F           F   F            ", "            FGGGF           FGGGF            ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             ECE             ECE             ", "             ECE             ECE             ", "             ECE             ECE             ", "             CCC             CCC             ", "             ECE             ECE             ", "             ECE             ECE             ", "             ECE             ECE             ", "             CCC             CCC             ", "             ECE             ECE             ", "             ECE             ECE             ", "             ECE             ECE             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "            DCCCD           DCCCD            ", "            DCCCD           DCCCD            ", "            DCCCD           DCCCD            ", "            BBBBA           ABBBB            ", "            BBBBA           ABBBB            ", "            BBBBB           BBBBB            ", "                                             ", "                                             ")
                    .aisle("AABBBBBBBB GGGGGGGGGGGGGGGGGGGGGGG BBBBBBBBAA", " AAAAAAABB AA   AGGGGGGGGGGGA   AA BBAAAAAAA ", " ABA   AAAAAA   AGGGGGGGGGGGA   AAAAAA   ABA ", "  BAAAAAAAAAA   AGGGGGGGGGGGA   AAAAAAAAAAB  ", "           AA   AAAAAAEAAAAAA   AA           ", "            H   H           H   H            ", "            H   H           H   H            ", "            HGGGH           HGGGH            ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CCC             CCC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CCC             CCC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CCC             CCC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CEC             CEC             ", "             CCC             CCC             ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "              C               C              ", "            DDCDD           DDCDD            ", "            DDCDD           DDCDD            ", "            DDCDD           DDCDD            ", "            BBBBB           BBBBB            ", "            BBBBB           BBBBB            ", "            BBBBB           BBBBB            ", "                                             ", "                                             ")
                    .aisle("  BBBBBBBBB GGGGGGGGGGGGGGGGGGGGG BBBBBBBBB  ", "  B      BB AAAAAGGGGGGGGGGGAAAAA BB      B  ", "  B      BB AAAAAGGGGGGGGGGGAAAAA BB      B  ", "  BBBBBBBBB AAAAAGGGGGGGGGGGAAAAA BBBBBBBBB  ", "            AAAAAAAAAAEAAAAAAAAAA            ", "            HHFHH           HHFHH            ", "            HHFHH           HHFHH            ", "            HHFHH           HHFHH            ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "             DDD             DDD             ", "             DDD             DDD             ", "             DDD             DDD             ", "             BBB             BBB             ", "             BBB             BBB             ", "             BBB             BBB             ", "                                             ", "                                             ")
                    .aisle("  BBBBBBBBBB GGGGGGGGGGGGGGGGGGG BBBBBBBBBB  ", "  BB      BB AAGGGGGGGGGGGGGGGAA BB      BB  ", "  BB      BB AAGGGGGGGGGGGGGGGAA BB      BB  ", "  BBBBBBBBBB AAGGGGGGGGGGGGGGGAA BBBBBBBBBB  ", "        FFF  AAAAAAAAAEAAAAAAAAA  FFF        ", "        FFF                       FFF        ", "        FFF                       FFF        ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("  BBBBBBBBBBB  GGGGGGGGGGGGGGG  BBBBBBBBBBB  ", "   BB      BB  AAGGGGGGGGGGGAA  BB      BB   ", "   BB      BBA AAGGGGGGGGGGGAA ABB      BB   ", "   BBBBBBBBBBA AAGGGGGGGGGGGAA ABBBBBBBBBB   ", "       FEEEF   AAAAAAAEAAAAAAA   FEEEF       ", "       FEEEF                     FEEEF       ", "       FEEEF                     FEEEF       ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("   BBBBBBBBBBB   GGGGGGGGGGG   BBBBBBBBBBB   ", "    BB      BB   AAGGGGGGGAA   BB      BB    ", "    BB      BA A AAGGGGGGGAA A AB      BB    ", "    BBBBBBBBBA A AAGGGGGGGAA A ABBBBBBBBB    ", "       FEEEF     AAAAAEAAAAA     FEEEF       ", "       FEEEF                     FEEEF       ", "       FEEEF                     FEEEF       ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("    BBBBBBBBBBB    GGGGGGG    BBBBBBBBBBB    ", "     BB      BB    AAAAAAA    BB      BB     ", "     BB      ABA   AAAAAAA   ABA      BB     ", "     BBBBBBBBABA   AAAAAAA   ABABBBBBBBB     ", "       FEEEF       AAAAAAA       FEEEF       ", "       FEEEF                     FEEEF       ", "       FEEEF                     FEEEF       ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("     BBBBBBBBBBB  CCCCCCCCC  BBBBBBBBBBB     ", "      BB     ABB  CCCCCCCCC  BBA     BB      ", "      BB     ABA  CCCCCCCCC  ABA     BB      ", "      BBBBBBBABA  CCCCCCCCC  ABABBBBBBB      ", "        FFF                       FFF        ", "        FFF                       FFF        ", "        FFF                       FFF        ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("      BBBBBBBBBBB CCCCCCCCC BBBBBBBBBBB      ", "       BB    A BB C       C BA A    BB       ", "       BB      AB C       C BA      BB       ", "       BBBBBBABAB CDDDDDDDC BABABBBBBB       ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("       BBBBBBBBBB CCCCCCCCC BBBBBBBBBB       ", "        BB   A AB C       C BA A   BB        ", "        BB     AB CEEEEEEEC B      BB        ", "        BBBBBABAB CDDDDDDDC BABABBBBB        ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("        BBBBBBBBB CCCCCCCCC BBBBBBBBB        ", "         BB  A AB C       C BA A  BB         ", "         BB     B CDDDDDDDC B     BB         ", "         BBBBABAB  DDDDDDD  BABABBBB         ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("         BBBBBBBB CCCCCCCCC BBBBBBBB         ", "          BB A AB CDDDDDDDC BA A BB          ", "          BB A AB CDDDDDDDC BA A BB          ", "          BBBABAB           BABABBB          ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle("          BBBBBBB CCCCCCCCC BBBBBBB          ", "           BBABAB CDDDDDDDC BABABB           ", "           BBBBBB  DDDDDDD  BBBBBB           ", "           BBBBBB           BBBBBB           ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .aisle
                    .aisle("             A A             A A             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ", "                                             ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.ECHO_CASING.get()))
                    .where('B', blocks(GTEBlocks.HIGH_PRESSURE_RESISTANT_CASING.get()))
                    .where('C', blocks(GTEBlocks.HYPER_MECHANICAL_CASING.get()))
                    .where('D', blocks(GTEBlocks.MOLECULAR_CASING.get()))
                    .where('E', blocks(GTEBlocks.HYPER_CORE.get()))
                    .where('F', blocks(GTEBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get()))
                    .where('G', blocks(GCYMBlocks.CASING_STRESS_PROOF.get()))
                    .where('H', blocks(GTEBlocks.DIMENSIONAL_BRIDGE_CASING.get()))
                    .where('I', blocks(GTEBlocks.ULTIMATE_STELLAR_CONTAINMENT_CASING.get()))
                    .where('J', blocks(GTEBlocks.CONTAINMENT_FIELD_GENERATOR.get()))
                    .where('K', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get()))
                    .where('L', blocks(GTEBlocks.MACHINE_CASING_GRINDING_HEAD.get()))
                    .where('M', blocks(GTEBlocks.AMPROSIUM_GEARBOX.get()))
                    .where('N', blocks(GTEBlocks.TITANSTEEL_COIL_BLOCK.get()))
                    .where('O', blocks(GTEBlocks.EXTREME_DENSITY_CASING.get()))
                    .where('P', blocks(GTBlocks.FUSION_GLASS.get()))
                    .where('Q', blocks(GTEBlocks.LASER_CASING.get()))
                    .where('S', blocks(GTEBlocks.AMPROSIUM_ACTIVE_CASING.get()))
                    .where('a', blocks(GTEBlocks.MOLECULAR_CASING.get())
                            .or(abilities(IMPORT_ITEMS).setExactLimit(1))
                            .or(abilities(EXPORT_ITEMS).setMaxGlobalLimited(4).setMinGlobalLimited(1))
                            .or(abilities(INPUT_LASER).setMaxGlobalLimited(2))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/molecular_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition ADVANCED_INFINITE_DRILLER = multiblock("advanced_infinite_driller", "进阶无尽钻机", AdvancedInfiniteDrillMachine::new)
            .nonYAxisRotation()
            .recipe(GTRecipeTypes.DUMMY_RECIPES)
            .tooltipsText("Using dimensional technology and indestructible drills, they relentlessly extract every drop of blood from the planet.", "利用维度技术和坚不可摧的钻头无情的抽取星球的每一分血液")
            .tooltipsText("More advanced infinite fluid drilling", "更加高级的无尽流体钻井")
            .tooltipsText("Can extract fluids more efficiently, while the drill requires a certain temperature to start, can use liquid flames to heat up", "可以更加高效的抽取流体, 与此同时钻机需要一定温度来启动,可以通入液态烈焰来升温")
            .tooltipsText("Only neutron-element drill heads can be placed (more drill heads to be determined)", "仅可放入中子素钻头(更多钻头待定)")
            .tooltipsText("The drill generates heat at different operating temperatures, the heat generation formula is (temperature/2000)", "钻机在不同的工作温度下会产生热量,产热公式为(温度/2000)")
            .tooltipsText("As the temperature increases, efficiency will also increase. When the temperature exceeds the critical value, the drill head will melt", "随着温度提升,效率也会提升.当温度超过临界值,钻头将会融毁")
            .tooltipsText("Different fluids can be introduced for cooling, cooling liquid consumption is as follows. The fixed consumption for cooling is 200B/5t", "可以通入不同的流体来降温, 可用冷却液如下.冷却固定消耗为200B/5t")
            .tooltipsText("Distilled Water 1K", "蒸馏水 1K")
            .tooltipsText("Liquid Oxygen 2K", "液态氧 2K")
            .tooltipsText("Liquid Helium 4K", "液态氦 4K")
            .tooltipsText("Liquid Flame consumption formula is (current temperature^1.3)", "液态烈焰消耗公式为(当前温度^1.3)")
            .customTooltipsBuilder(false, true, false)
            .block(GTEBlocks.IRIDIUM_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("          AABAA          ", "          CCCCC          ", "          CCCCC          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         AAABAAA         ", "          CCCCC          ", "          CCCCC          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         AAABAAA         ", "          CCCCC          ", "          CCCCC          ", "           CEC           ", "           CEC           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         AAABAAA         ", "                         ", "                         ", "           E E           ", "           CEC           ", "          CCECC          ", "           CEC           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         AAABAAA         ", "                         ", "                         ", "           E E           ", "          C   C          ", "         CCE ECC         ", "           CEC           ", "           CEC           ", "           CEC           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         AAABAAA         ", "          C   C          ", "                         ", "          CE EC          ", "                         ", "        CC E E CC        ", "                         ", "           E E           ", "           CEC           ", "           CEC           ", "           CEC           ", "           CEC           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         AAABAAA         ", "                         ", "          C   C          ", "           E E           ", "                         ", "       CC  E E  CC       ", "                         ", "           E E           ", "          A   A          ", "          A   A          ", "          AAAAA          ", "           CEC           ", "           CEC           ", "           CEC           ", "           CEC           ", "          CCECC          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("        AAAABAAAA        ", "           E E           ", "           E E           ", "          CE EC          ", "           E E           ", "      CC   E E   CC      ", "          AE EA          ", "          AE EA          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "         CCCECCC         ", "           CEC           ", "           CEC           ", "           CEC           ", "           CEC           ", "           CEC           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("       AAAFFFFFAAA       ", "        E FCCCF E        ", "        E FCCCF E        ", "        E FFFFF E        ", "        E A   A E        ", "     CC E A   A E CC     ", "        E       E        ", "        E       E        ", "        E       E        ", "        E       E        ", "        E       E        ", "        E       E        ", "        E       E        ", "        E       E        ", "        E       E        ", "        CC     CC        ", "                         ", "                         ", "                         ", "                         ", "           CEC           ", "           CEC           ", "           CEC           ", "           CEC           ", "          AAAAA          ", "          EEEEE          ", "          EEEEE          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("AAAAAAAAAFAGGGAFAAAAAAAAA", "CCCC     FA   AF     CCCC", "CHHC     FA   AF     CHHC", "CHHC     FA   AF     CHHC", "CCCC                 CCCC", "     C             C     ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "       CC       CC       ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "           C C           ", "           AAA           ", "          AIIIA          ", "          E   E          ", "          E   E          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("AAAAAAAAFAG   GAFAAAAAAAA", "CCCC AAAFA     AFAAA CCCC", "C JC AAAFA     AFAAA C JC", "CJ C AAAFA     AFAAA CJ C", "C  C AAAA       AAAA C  C", " CC  C             C  CC ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "      CC         CC      ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "          AAAAA          ", "          AAAAA          ", "          AIIIA          ", "          E   E          ", "          E   E          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("AAAAAAAAFG     GFAAAAAAAA", "CCCCAA AC       CA AACCCC", "C JCAA AC   K   CA AAC JC", "CJJJAA AF   G   FA AACJJJ", "C  CAAFA    G    AFAAC  C", " CCCCCC    ML     CCCCCC ", "      C     L     C      ", "      C     L     C      ", "      B     L     B      ", "      B     L     B      ", "      C     L     C      ", "            LM           ", "            M            ", "           ML            ", "            L            ", "      C     L     C      ", "            L            ", "            L            ", "           LLL           ", "            L            ", "      C     L     C      ", "      BA    L    AB      ", "      CAAAA L AAAAC      ", "      CAAAA L AAAAC      ", "          A L A          ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ")
                    .aisle("BBBBBBBBFG     GFBBBBBBBB", "CCCCA  AC   K   CA  ACCCC", "C JCA  AC  KNK  CA  AC JC", "CJJJA  AF  GNG  FA  ACJJJ", "C  CAFFA   GNG   AFFAC  C", " CC  CCC   LNL   CCC  CC ", "     CCC   MNL   CCC     ", "     CCC   LNL   CCC     ", "     BCC   LNL   CCB     ", "     BCC   LNL   CCB     ", "     CCC   LNM   CCC     ", "      CM   LNL   MC      ", "      CM   LNL   MC      ", "      CM   LNL   MC      ", "      CM   MNL   MC      ", "      CM   LNL   MC      ", "      CM   LNL   MC      ", "      CM   LNL   MC      ", "      CM   LNL   MC      ", "      CM   LNL   MC      ", "     CCC   LNL   CCC     ", "     BCBAAMLNLMAABCB     ", "     CCCMMMLNLMMMCCC     ", "     CCCMMMLNLMMMCCC     ", "      AAAAALNLAAAAA      ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ", "           LNL           ")
                    .aisle("AAAAAAAAFG     GFAAAAAAAA", "CCCCAA AC       CA AACCCC", "C JCAA AC   K   CA AAC JC", "CJJJAA AF   G   FA AACJJJ", "C  CAAFA    G    AFAAC  C", " CCCCCC     L     CCCCCC ", "      C     L     C      ", "      C    ML     C      ", "      B     M     B      ", "      B     LM    B      ", "      C     L     C      ", "            L            ", "            L            ", "            L            ", "            L            ", "      C    ML     C      ", "            M            ", "            LM           ", "           LLL           ", "            L            ", "      C     L     C      ", "      BA    L    AB      ", "      CAAAA L AAAAC      ", "      CAAAA L AAAAC      ", "          A L A          ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ", "            L            ")
                    .aisle("AAAAAAAAFAG   GAFAAAAAAAA", "CCCC AAAFA     AFAAA CCCC", "C JC AAAFA     AFAAA C JC", "CJ C AAAFA     AFAAA CJ C", "C  C AAAA       AAAA C  C", " CC  C             C  CC ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "      CC         CC      ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "          AAAAA          ", "          AAAAA          ", "          AIIIA          ", "          E   E          ", "          E   E          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("AAAAAAAAAFAGGGAFAAAAAAAAA", "CCCC     FA   AF     CCCC", "CHHC     FA   AF     CHHC", "CHHC     FA   AF     CHHC", "CCCC                 CCCC", "     C             C     ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "       CC       CC       ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "           C C           ", "           AAA           ", "          AIIIA          ", "          E   E          ", "          E   E          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("       AAAFFFFFAAA       ", "        E FCCCF E        ", "        E FCCCF E        ", "        E FFFFF E        ", "        E A   A E        ", "     CC E A   A E CC     ", "        E       E        ", "        E       E        ", "        E       E        ", "        E       E        ", "        E       E        ", "        E       E        ", "        E       E        ", "        E       E        ", "        E       E        ", "        CC     CC        ", "                         ", "                         ", "                         ", "                         ", "           CEC           ", "           CEC           ", "           CEC           ", "           CEC           ", "          AAAAA          ", "          EEEEE          ", "          EEEEE          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("        AAAABAAAA        ", "           E E           ", "           E E           ", "          CE EC          ", "           E E           ", "      CC   E E   CC      ", "          AE EA          ", "          AE EA          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "         CCCECCC         ", "           CEC           ", "           CEC           ", "           CEC           ", "           CEC           ", "           CEC           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         AAABAAA         ", "                         ", "          C   C          ", "           E E           ", "                         ", "       CC  E E  CC       ", "                         ", "           E E           ", "          A   A          ", "          A   A          ", "          AAAAA          ", "           CEC           ", "           CEC           ", "           CEC           ", "           CEC           ", "          CCECC          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         AAABAAA         ", "          C   C          ", "                         ", "          CE EC          ", "                         ", "        CC E E CC        ", "                         ", "           E E           ", "           CEC           ", "           CEC           ", "           CEC           ", "           CEC           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         AAABAAA         ", "                         ", "                         ", "           E E           ", "          C   C          ", "         CCE ECC         ", "           CEC           ", "           CEC           ", "           CEC           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         AAABAAA         ", "                         ", "                         ", "           E E           ", "           CEC           ", "          CCECC          ", "           CEC           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         AAABAAA         ", "          CCCCC          ", "          CCCCC          ", "           CEC           ", "           CEC           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         AAABAAA         ", "          CCCCC          ", "          CCCCC          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("          AABAA          ", "          CC#CC          ", "          CCCCC          ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle
                    .where('#', controller(blocks(definition.get())))
                    .where('I', blocks(GTBlocks.FILTER_CASING.get()))
                    .where('G', blocks(GTEBlocks.DIMENSIONAL_BRIDGE_CASING.get()))
                    .where('N', blocks(GTEBlocks.NAQUADRIATICTARANIUM_COIL_BLOCK.get()))
                    .where('M', blocks(GTEBlocks.AMPROSIUM_GEARBOX.get()))
                    .where('L', blocks(ChemicalHelper.getBlock(TagPrefix.block, GTMaterials.Vanadium)))
                    .where('B', blocks(GTEBlocks.HYPER_CORE.get()))
                    .where('F', blocks(GTEBlocks.RESTRAINT_DEVICE.get()))
                    .where('H', blocks(GCYMBlocks.HEAT_VENT.get()))
                    .where('K', blocks(GTEBlocks.MACHINE_CASING_GRINDING_HEAD.get()))
                    .where('E', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Neutronium)))
                    .where('J', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('C', blocks(GTEBlocks.HYPER_MECHANICAL_CASING.get()))
                    .where('A', blocks(GTEBlocks.IRIDIUM_CASING.get())
                            .or(abilities(IMPORT_FLUIDS).setMaxGlobalLimited(2))
                            .or(abilities(EXPORT_FLUIDS).setMaxGlobalLimited(16))
                            .or(abilities(INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(abilities(INPUT_LASER).setMaxGlobalLimited(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/iridium_casing"), GTCEu.id("block/multiblock/fluid_drilling_rig"))
            .register();

    MultiblockMachineDefinition ENERGY_INJECTOR = multiblock("energy_injector", "能量注入仪", EnergyInjectorMachine::new)
            .nonYAxisRotation()
            .tooltipsText("Can to charge items, Can consume electricity to repair item durability.", "可为物品充电，还可消耗电力修复物品耐久")
            .recipe(GTRecipeTypes.DUMMY_RECIPES)
            .customTooltipsBuilder(false, true, false)
            .block(GCYMBlocks.CASING_NONCONDUCTING)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("AAGAA", "A   A", "A   A", "A   A", "BBBBB", " C C ", " DDD ", " C C ")
                    .aisle("ABBBA", " EEE ", " EFE ", " EEE ", "BCCCB", "CC CC", "DC CD", "CC CC")
                    .aisle("ABBBA", " EEE ", " FHF ", " EEE ", "BCCCB", "     ", "D   D", "     ")
                    .aisle("ABBBA", " EEE ", " EFE ", " EEE ", "BCCCB", "CC CC", "DC CD", "CC CC")
                    .aisle("AAAAA", "A   A", "A   A", "A   A", "BBBBB", " C C ", " DDD ", " C C ")
                    .where('A', blocks(GCYMBlocks.CASING_NONCONDUCTING.get())
                            .or(abilities(IMPORT_ITEMS).setExactLimit(1))
                            .or(abilities(EXPORT_ITEMS).setExactLimit(1))
                            .or(abilities(INPUT_ENERGY).setPreviewCount(1))
                            .or(abilities(INPUT_LASER).setPreviewCount(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('B', blocks(GCYMBlocks.CASING_NONCONDUCTING.get()))
                    .where('C', frames(GTMaterials.HSSG))
                    .where('D', blocks(GTBlocks.CASING_PALLADIUM_SUBSTATION.get()))
                    .where('E', blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where('F', blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where('G', controller(blocks(definition.get())))
                    .where('H', blocks(GTBlocks.BATTERY_EMPTY_TIER_II.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/nonconducting_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition NEUTRON_VORTEX = multiblock("neutron_vortex", "中子旋涡", NeutronVortexMachine::new)
            .nonYAxisRotation()
            .tooltipsText("Does not consume neutron kinetic energy while running.", "运行时不消耗中子动能")
            .tooltipsText("After installing auxiliary structures, you can enable energy conversion mode, which automatically adapts the neutron kinetic energy consumption based on the recipe.", "安装附属结构后可开启能源转换模式，消耗电力自动适应配方的中子动能")
            .recipe(GTERecipeTypes.NEUTRON_ACTIVATOR_RECIPES)
            .alwaysTryModifyRecipe(true)
            .block(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING)
            .pattern(MachineUtils.EMPTY_PATTERN)
            .shapeInfos(definition -> {
                List<MultiblockShapeInfo> shapeInfos = new ArrayList<>();
                for (int i = 0; i < 2; i++) {
                    shapeInfos.addAll(MachineUtils.getMatchingShapes(false, NeutronVortexMachine.getBlockPattern(i, definition)));
                }
                return shapeInfos;
            })
            .workableCasingRenderer(GTECore.id("block/casings/naquadah_reinforced_plant_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition NEUTRON_COMPRESSOR = multiblock("neutron_compressor", "中子态素压缩机", ElectricMultiblockMachine::new)
            .allRotation()
            .parallelizableTooltips()
            .recipe(GTERecipeTypes.NEUTRON_COMPRESSOR_RECIPES)
            .parallelizableOverclock()
            .customTooltipsBuilder(true, true, false)
            .block(GTEBlocks.DIMENSIONALLY_TRANSCENDENT_CASING)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.BACK, RelativeDirection.UP, RelativeDirection.LEFT)
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAABBBBBAAAAAAAAAAAA", "AACC                     CCAA", "AAC                       CAA", "AA                         AA", "AA          DEDED          AA", "AA         AAAAAAA         AA", "AA        AAAAAAAAA        AA", "AA       AFFFFFFFFFA       AA", "AA      AAAAAAAAAAAAA      AA", "AA     AFAAAAAAAAAAAFA     AA", "AA    AAFAAABAAABAAAFAA    AA", "AB   DAAFAABBAAABBAAFAAD   BA", "AB   EAAFAAAAAAAAAAAFAAE   BA", "AB   DAAFAAAAAGAAAAAFAAD   BA", "AB   EAAFAAAAAAAAAAAFAAE   BA", "AB   DAAFAABBAAABBAAFAAD   BA", "AA    AAFAAABAAABAAAFAA    AA", "AA     AFAAAAAAAAAAAFA     AA", "AA      AAAAAAAAAAAAA      AA", "AA       AFFFFFFFFFA       AA", "AA        AAAAAAAAA        AA", "AA         AAAAAAA         AA", "AA          DEDED          AA", "AA                         AA", "AAC                       CAA", "AACC                     CCAA", "AAAAAAAAAAAABBBBBAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAABBBBBAAAAAAAAAAAA", "A  H                     H  A", "A  H                     H  A", "AHH                       HHA", "A           DEDED           A", "A           DEDED           A", "A          AAAAAAA          A", "A        IA       AI        A", "A        A         A        A", "A      IA           AI      A", "A      A  JJJJJJJJJ  A      A", "A     A   J       J   A     A", "B   DDA   J H   H J   ADD   B", "B   EEA   J       J   AEE   B", "B   DDA   J   G   J   ADD   B", "B   EEA   J       J   AEE   B", "B   DDA   J H   H J   ADD   B", "A     A   J       J   A     A", "A      A  JJJJJJJJJ  A      A", "A      IA           AI      A", "A        A         A        A", "A        IA       AI        A", "A          AAAAAAA          A", "A           DEDED           A", "A           DEDED           A", "AHH                       HHA", "A  H                     H  A", "A  H                     H  A", "AAAAAAAAAAAABBBBBAAAAAAAAAAAA")
                    .aisle("AACC                     CCAA", "A  H                     H  A", "C  K                     K  C", "CHKH        DEDED        HKHC", "            DEDED            ", "            DEDED            ", "         I AAAAAAA I         ", "         LA       AL         ", "         A         A         ", "      ILA           ALI      ", "       A             A       ", "      A               A      ", "   DDDA     H   H     ADDD   ", "   EEEA               AEEE   ", "   DDDA       G       ADDD   ", "   EEEA               AEEE   ", "   DDDA     H   H     ADDD   ", "      A               A      ", "       A             A       ", "      ILA           ALI      ", "         A         A         ", "         LA       AL         ", "         I AAAAAAA I         ", "            DEDED            ", "            DEDED            ", "CHKH        DEDED        HKHC", "C  K                     K  C", "A  H                     H  A", "AACC                     CCAA")
                    .aisle("AAC                       CAA", "AHH                       HHA", "CHKH        DEDED        HKHC", "  HKHEE     DEDED     EEHKH  ", "   H E      MMMMM      E H   ", "   EE    I  DEDED  I    EE   ", "   E    KL AAAAAAA LK    E   ", "       KKLA       ALKK       ", "      KK A         A KK      ", "     ILLA           ALLI     ", "       A             A       ", "      A               A      ", "  DDMDA     H   H     ADMDD  ", "  EEMEA               AEMEE  ", "  DDMDA       G       ADMDD  ", "  EEMEA               AEMEE  ", "  DDMDA     H   H     ADMDD  ", "      A               A      ", "       A             A       ", "     ILLA           ALLI     ", "      KK A         A KK      ", "       KKLA       ALKK       ", "   E    KL AAAAAAA LK    E   ", "   EE    I  DEDED  I    EE   ", "   H E      MMMMM      E H   ", "  HKHEE     DEDED     EEHKH  ", "CHKH        DEDED        HKHC", "AHH                       HHA", "AAC                       CAA")
                    .aisle("QA                         AA", "Q           DEDED           A", "            DEDED            ", "   H E      MMMMM      E H   ", "         I  DEDED  I         ", "   E    CL  DEDED  LC    E   ", "        CL AAAAAAA LC        ", "        CLA       ALC        ", "     CCC A         A CCC     ", "    ILLLA           ALLLI    ", "       A  JJJJJJJJJ  A       ", "      A   J       J   A      ", " DDMDDA   J H   H J   ADDMDD ", " EEMEEA   J       J   AEEMEE ", " DDMDDA   J   G   J   ADDMDD ", " EEMEEA   J       J   AEEMEE ", " DDMDDA   J H   H J   ADDMDD ", "      A   J       J   A      ", "       A  JJJJJJJJJ  A       ", "    ILLLA           ALLLI    ", "     CCC A         A CCC     ", "        CLA       ALC        ", "        CL AAAAAAA LC        ", "   E    CL  DEDED  LC    E   ", "         I  DEDED  I         ", "   H E      MMMMM      E H   ", "            DEDED            ", "A           DEDED           A", "AA                         AA")
                    .aisle("QA          DEDED          AA", "Q           DEDED           A", "            DEDED            ", "   EE    I  DEDED  I    EE   ", "   E    CL  DEDED  LC    E   ", "        CL  DEDED  LC        ", "      NNCL AAAAAAA LCNN      ", "      NNCLAOOOOOOOALCNN      ", "    CCCC AOOOOOOOOOA CCCC    ", "   ILLLLAOOOOOOOOOOOALLLLI   ", "       AOOOOOOOOOOOOOA       ", "      AOOOOOOOOOOOOOOOA      ", "DDDDDDAOOOOOHOOOHOOOOOADDDDDD", "EEEEEEAOOOOOOOOOOOOOOOAEEEEEE", "DDDDDDAOOOOOOOGOOOOOOOADDDDDD", "EEEEEEAOOOOOOOOOOOOOOOAEEEEEE", "DDDDDDAOOOOOHOOOHOOOOOADDDDDD", "      AOOOOOOOOOOOOOOOA      ", "       AOOOOOOOOOOOOOA       ", "   ILLLLAOOOOOOOOOOOALLLLI   ", "    CCCC AOOOOOOOOOA CCCC    ", "      NNCLAOOOOOOOALCNN      ", "      NNCL AAAAAAA LCNN      ", "        CL  DEDED  LC        ", "   E    CL  DEDED  LC    E   ", "   EE    I  DEDED  I    EE   ", "            DEDED            ", "A           DEDED           A", "AA          DEDED          AA")
                    .aisle("QA         AAAAAAA         AA", "Q          AAAAAAA          A", "         I AAAAAAA I         ", "   E    KL AAAAAAA LK    E   ", "        CL AAAAAAA LC        ", "      NNCL AAAAAAA LCNN      ", "     N   L         L   N     ", "     N   L         L   N     ", "   KCC     NNNNNNN     CCK   ", "  ILLLLL  N       N  LLLLLI  ", "         N         N         ", "AAAAAA  N           N  AAAAAA", "AAAAAA  N   H   H   N  AAAAAA", "AAAAAA  N           N  AAAAAA", "AAAAAA  N     G     N  AAAAAA", "AAAAAA  N           N  AAAAAA", "AAAAAA  N   H   H   N  AAAAAA", "AAAAAA  N           N  AAAAAA", "         N         N         ", "  ILLLLL  N       N  LLLLLI  ", "   KCC     NNNNNNN     CCK   ", "     N   L         L   N     ", "     N   L         L   N     ", "      NNCL AAAAAAA LCNN      ", "        CL AAAAAAA LC        ", "   E    KL AAAAAAA LK    E   ", "         I AAAAAAA I         ", "A          AAAAAAA          A", "AA         AAAAAAA         AA")
                    .aisle("QA        AAAAAAAAA        AA", "Q        IA       AI        A", "         LA       AL         ", "       KKLA       ALKK       ", "        CLA       ALC        ", "      NNCLAOOOOOOOALCNN      ", "     N   L         L   N     ", "   K N  CL         LC  N K   ", "   KCC C   NNNNNNN   C CCK   ", " ILLLLLL  N       N  LLLLLLI ", "AAAAAA   N         N   AAAAAA", "A    O  N           N  O    A", "A    O  N   H   H   N  O    A", "A    O  N           N  O    A", "A    O  N     G     N  O    A", "A    O  N           N  O    A", "A    O  N   H   H   N  O    A", "A    O  N           N  O    A", "AAAAAA   N         N   AAAAAA", " ILLLLLL  N       N  LLLLLLI ", "   KCC C   NNNNNNN   C CCK   ", "   K N  CL         LC  N K   ", "     N   L         L   N     ", "      NNCLAOOOOOOOALCNN      ", "        CLA       ALC        ", "       KKLA       ALKK       ", "         LA       AL         ", "A        IA       AI        A", "AA        AAAAAAAAA        AA")
                    .aisle("QA       AFFFFFFFFFA       AA", "Q        A         A        A", "         A         A         ", "      KK A         A KK      ", "     CCC A         A CCC     ", "    CCCC AOOOOOOOOOA CCCC    ", "   KCC     NNNNNNN     CCK   ", "   KCC C   NNNNNNN   C CCK   ", "           NNNNNNN           ", "AAAAAA    N       N    AAAAAA", "F    O   N         N   O    F", "F    ONNN           NNNO    F", "F    ONNN   H   H   NNNO    F", "F    ONNN           NNNO    F", "F    ONNN     G     NNNO    F", "F    ONNN           NNNO    F", "F    ONNN   H   H   NNNO    F", "F    ONNN           NNNO    F", "F    O   N         N   O    F", "AAAAAA    N       N    AAAAAA", "           NNNNNNN           ", "   KCC C   NNNNNNN   C CCK   ", "   KCC     NNNNNNN     CCK   ", "    CCCC AOOOOOOOOOA CCCC    ", "     CCC A         A CCC     ", "      KK A         A KK      ", "         A         A         ", "A        A         A        A", "AA       AFFFFFFFFFA       AA")
                    .aisle("QA      AAAAAAAAAAAAA      AA", "Q      IA           AI      A", "      ILA           ALI      ", "     ILLA           ALLI     ", "    ILLLA           ALLLI    ", "   ILLLLAOOOOOOOOOOOALLLLI   ", "  ILLLLL  N       N  LLLLLI  ", " ILLLLLL  N       N  LLLLLLI ", "AAAAAA                 AAAAAA", "A    O                 O    A", "A    ONNN           NNNO    A", "A    O                 O    A", "A    O      H   H      O    A", "A    O                 O    A", "A    O        G        O    A", "A    O                 O    A", "A    O      H   H      O    A", "A    O                 O    A", "A    ONNN           NNNO    A", "A    O                 O    A", "AAAAAA                 AAAAAA", " ILLLLLL  N       N  LLLLLLI ", "  ILLLLL  N       N  LLLLLI  ", "   ILLLLAOOOOOOOOOOOALLLLI   ", "    ILLLA           ALLLI    ", "     ILLA           ALLI     ", "      ILA           ALI      ", "A      IA           AI      A", "AA      AAAAAAAAAAAAA      AA")
                    .aisle("QA     AFAAAAAAAAAAAFA     AA", "Q      A  JJJJJJJJJ  A      A", "       A             A       ", "       A             A       ", "       A  JJJJJJJJJ  A       ", "       AOOOOOOOOOOOOOA       ", "         N         N         ", "AAAAAA   N         N   AAAAAA", "F    O                 O    F", "A    ONNN           NNNO    A", "AJ  JO                 OJ  JA", "AJ  JO                 OJ  JA", "AJ  JO      H   H      OJ  JA", "AJ  JO                 OJ  JA", "AJ  JO        G        OJ  JA", "AJ  JO                 OJ  JA", "AJ  JO      H   H      OJ  JA", "AJ  JO                 OJ  JA", "AJ  JO                 OJ  JA", "A    ONNN           NNNO    A", "F    O                 O    F", "AAAAAA   N         N   AAAAAA", "         N         N         ", "       AOOOOOOOOOOOOOA       ", "       A  JJJJJJJJJ  A       ", "       A             A       ", "       A             A       ", "A      A  JJJJJJJJJ  A      A", "AA     AFAAAAAAAAAAAFA     AA")
                    .aisle("QA    AAFAAABAAABAAAFAA    AA", "Q     A   J       J   A     A", "      A               A      ", "      A               A      ", "      A   J       J   A      ", "      AOOOOOOOOOOOOOOOA      ", "AAAAAA  N           N  AAAAAA", "A    O  N           N  O    A", "F    ONNN           NNNO    F", "A    O                 O    A", "AJ  JO                 OJ  JA", "A    O                 O    A", "B    O      H   H      O    B", "A    O                 O    A", "A    O        G        O    A", "A    O                 O    A", "B    O      H   H      O    B", "A    O                 O    A", "AJ  JO                 OJ  JA", "A    O                 O    A", "F    ONNN           NNNO    F", "A    O  N           N  O    A", "AAAAAA  N           N  AAAAAA", "      AOOOOOOOOOOOOOOOA      ", "      A   J       J   A      ", "      A               A      ", "      A               A      ", "A     A   J       J   A     A", "AA    AAFAAABAAABAAAFAA    AA")
                    .aisle("QB   DAAFAABBAAABBAAFAAD   BA", "B   DDA   J H   H J   ADD   B", "   DDDA     H   H     ADDD   ", "  DDMDA     H   H     ADMDD  ", " DDMDDA   J H   H J   ADDMDD ", "DDDDDDAOOOOOHOOOHOOOOOADDDDDD", "AAAAAA  N   H   H   N  AAAAAA", "A    O  N   H   H   N  O    A", "F    ONNN   H   H   NNNO    F", "A    O      H   H      O    A", "AJ  JO      H   H      OJ  JA", "B    O      H   H      O    B", "BHHHHHHHHHHHHHHHHHHHHHHHHHHHB", "A    O      HPPPH      O    A", "A    O      HPPPH      O    A", "A    O      HPPPH      O    A", "BHHHHHHHHHHHHHHHHHHHHHHHHHHHB", "B    O      H   H      O    B", "AJ  JO      H   H      OJ  JA", "A    O      H   H      O    A", "F    ONNN   H   H   NNNO    F", "A    O  N   H   H   N  O    A", "AAAAAA  N   H   H   N  AAAAAA", "DDDDDDAOOOOOHOOOHOOOOOADDDDDD", " DDMDDA   J H   H J   ADDMDD ", "  DDMDA     H   H     ADMDD  ", "   DDDA     H   H     ADDD   ", "B   DDA   J H   H J   ADD   B", "AB   DAAFAABBAAABBAAFAAD   BA")
                    .aisle("QB   EAAFAAAAAAAAAAAFAAE   BA", "B   EEA   J       J   AEE   B", "   EEEA               AEEE   ", "  EEMEA               AEMEE  ", " EEMEEA   J       J   AEEMEE ", "EEEEEEAOOOOOOOOOOOOOOOAEEEEEE", "AAAAAA  N           N  AAAAAA", "A    O  N           N  O    A", "F    ONNN           NNNO    F", "A    O                 O    A", "AJ  JO                 OJ  JA", "A    O                 O    A", "A    O      HPPPH      O    A", "A    O      P   P      O    A", "A    O      P   P      O    A", "A    O      P   P      O    A", "A    O      HPPPH      O    A", "A    O                 O    A", "AJ  JO                 OJ  JA", "A    O                 O    A", "F    ONNN           NNNO    F", "A    O  N           N  O    A", "AAAAAA  N           N  AAAAAA", "EEEEEEAOOOOOOOOOOOOOOOAEEEEEE", " EEMEEA   J       J   AEEMEE ", "  EEMEA               AEMEE  ", "   EEEA               AEEE   ", "B   EEA   J       J   AEE   B", "AB   EAAFAAAAAAAAAAAFAAE   BA")
                    .aisle("RB   DAAFAAAAAGAAAAAFAAD   BA", "B   DDA   J   G   J   ADD   B", "   DDDA       G       ADDD   ", "  DDMDA       G       ADMDD  ", " DDMDDA   J   G   J   ADDMDD ", "DDDDDDAOOOOOOOGOOOOOOOADDDDDD", "AAAAAA  N     G     N  AAAAAA", "A    O  N     G     N  O    A", "F    ONNN     G     NNNO    F", "A    O        G        O    A", "AJ  JO        G        OJ  JA", "A    O        G        O    A", "A    O      HPPPH      O    A", "A    O      P   P      O    A", "GGGGGGGGGGGGP   PGGGGGGGGGGGG", "A    O      P   P      O    A", "A    O      HPPPH      O    A", "A    O        G        O    A", "AJ  JO        G        OJ  JA", "A    O        G        O    A", "F    ONNN     G     NNNO    F", "A    O  N     G     N  O    A", "AAAAAA  N     G     N  AAAAAA", "DDDDDDAOOOOOOOGOOOOOOOADDDDDD", " DDMDDA   J   G   J   ADDMDD ", "  DDMDA       G       ADMDD  ", "   DDDA       G       ADDD   ", "B   DDA   J   G   J   ADD   B", "AB   DAAFAAAAAGAAAAAFAAD   BA")
                    .aisle("QB   EAAFAAAAAAAAAAAFAAE   BA", "B   EEA   J       J   AEE   B", "   EEEA               AEEE   ", "  EEMEA               AEMEE  ", " EEMEEA   J       J   AEEMEE ", "EEEEEEAOOOOOOOOOOOOOOOAEEEEEE", "AAAAAA  N           N  AAAAAA", "A    O  N           N  O    A", "F    ONNN           NNNO    F", "A    O                 O    A", "AJ  JO                 OJ  JA", "A    O                 O    A", "A    O      HPPPH      O    A", "A    O      P   P      O    A", "A    O      P   P      O    A", "A    O      P   P      O    A", "A    O      HPPPH      O    A", "A    O                 O    A", "AJ  JO                 OJ  JA", "A    O                 O    A", "F    ONNN           NNNO    F", "A    O  N           N  O    A", "AAAAAA  N           N  AAAAAA", "EEEEEEAOOOOOOOOOOOOOOOAEEEEEE", " EEMEEA   J       J   AEEMEE ", "  EEMEA               AEMEE  ", "   EEEA               AEEE   ", "B   EEA   J       J   AEE   B", "AB   EAAFAAAAAAAAAAAFAAE   BA")
                    .aisle("QB   DAAFAABBAAABBAAFAAD   BA", "B   DDA   J H   H J   ADD   B", "   DDDA     H   H     ADDD   ", "  DDMDA     H   H     ADMDD  ", " DDMDDA   J H   H J   ADDMDD ", "DDDDDDAOOOOOHOOOHOOOOOADDDDDD", "AAAAAA  N   H   H   N  AAAAAA", "A    O  N   H   H   N  O    A", "F    ONNN   H   H   NNNO    F", "A    O      H   H      O    A", "AJ  JO      H   H      OJ  JA", "B    O      H   H      O    B", "BHHHHHHHHHHHHHHHHHHHHHHHHHHHB", "A    O      HPPPH      O    A", "A    O      HPPPH      O    A", "A    O      HPPPH      O    A", "BHHHHHHHHHHHHHHHHHHHHHHHHHHHB", "B    O      H   H      O    B", "AJ  JO      H   H      OJ  JA", "A    O      H   H      O    A", "F    ONNN   H   H   NNNO    F", "A    O  N   H   H   N  O    A", "AAAAAA  N   H   H   N  AAAAAA", "DDDDDDAOOOOOHOOOHOOOOOADDDDDD", " DDMDDA   J H   H J   ADDMDD ", "  DDMDA     H   H     ADMDD  ", "   DDDA     H   H     ADDD   ", "B   DDA   J H   H J   ADD   B", "AB   DAAFAABBAAABBAAFAAD   BA")
                    .aisle("QA    AAFAAABAAABAAAFAA    AA", "Q     A   J       J   A     A", "      A               A      ", "      A               A      ", "      A   J       J   A      ", "      AOOOOOOOOOOOOOOOA      ", "AAAAAA  N           N  AAAAAA", "A    O  N           N  O    A", "F    ONNN           NNNO    F", "A    O                 O    A", "AJ  JO                 OJ  JA", "A    O                 O    A", "B    O      H   H      O    B", "A    O                 O    A", "A    O        G        O    A", "A    O                 O    A", "B    O      H   H      O    B", "A    O                 O    A", "AJ  JO                 OJ  JA", "A    O                 O    A", "F    ONNN           NNNO    F", "A    O  N           N  O    A", "AAAAAA  N           N  AAAAAA", "      AOOOOOOOOOOOOOOOA      ", "      A   J       J   A      ", "      A               A      ", "      A               A      ", "A     A   J       J   A     A", "AA    AAFAAABAAABAAAFAA    AA")
                    .aisle("QA     AFAAAAAAAAAAAFA     AA", "Q      A  JJJJJJJJJ  A      A", "       A             A       ", "       A             A       ", "       A  JJJJJJJJJ  A       ", "       AOOOOOOOOOOOOOA       ", "         N         N         ", "AAAAAA   N         N   AAAAAA", "F    O                 O    F", "A    ONNN           NNNO    A", "AJ  JO                 OJ  JA", "AJ  JO                 OJ  JA", "AJ  JO      H   H      OJ  JA", "AJ  JO                 OJ  JA", "AJ  JO        G        OJ  JA", "AJ  JO                 OJ  JA", "AJ  JO      H   H      OJ  JA", "AJ  JO                 OJ  JA", "AJ  JO                 OJ  JA", "A    ONNN           NNNO    A", "F    O                 O    F", "AAAAAA   N         N   AAAAAA", "         N         N         ", "       AOOOOOOOOOOOOOA       ", "       A  JJJJJJJJJ  A       ", "       A             A       ", "       A             A       ", "A      A  JJJJJJJJJ  A      A", "AA     AFAAAAAAAAAAAFA     AA")
                    .aisle("QA      AAAAAAAAAAAAA      AA", "Q      IA           AI      A", "      ILA           ALI      ", "     ILLA           ALLI     ", "    ILLLA           ALLLI    ", "   ILLLLAOOOOOOOOOOOALLLLI   ", "  ILLLLL  N       N  LLLLLI  ", " ILLLLLL  N       N  LLLLLLI ", "AAAAAA                 AAAAAA", "A    O                 O    A", "A    ONNN           NNNO    A", "A    O                 O    A", "A    O      H   H      O    A", "A    O                 O    A", "A    O        G        O    A", "A    O                 O    A", "A    O      H   H      O    A", "A    O                 O    A", "A    ONNN           NNNO    A", "A    O                 O    A", "AAAAAA                 AAAAAA", " ILLLLLL  N       N  LLLLLLI ", "  ILLLLL  N       N  LLLLLI  ", "   ILLLLAOOOOOOOOOOOALLLLI   ", "    ILLLA           ALLLI    ", "     ILLA           ALLI     ", "      ILA           ALI      ", "A      IA           AI      A", "AA      AAAAAAAAAAAAA      AA")
                    .aisle("QA       AFFFFFFFFFA       AA", "Q        A         A        A", "         A         A         ", "      KK A         A KK      ", "     CCC A         A CCC     ", "    CCCC AOOOOOOOOOA CCCC    ", "   KCC     NNNNNNN     CCK   ", "   KCC C   NNNNNNN   C CCK   ", "           NNNNNNN           ", "AAAAAA    N       N    AAAAAA", "F    O   N         N   O    F", "F    ONNN           NNNO    F", "F    ONNN   H   H   NNNO    F", "F    ONNN           NNNO    F", "F    ONNN     G     NNNO    F", "F    ONNN           NNNO    F", "F    ONNN   H   H   NNNO    F", "F    ONNN           NNNO    F", "F    O   N         N   O    F", "AAAAAA    N       N    AAAAAA", "           NNNNNNN           ", "   KCC C   NNNNNNN   C CCK   ", "   KCC     NNNNNNN     CCK   ", "    CCCC AOOOOOOOOOA CCCC    ", "     CCC A         A CCC     ", "      KK A         A KK      ", "         A         A         ", "A        A         A        A", "AA       AFFFFFFFFFA       AA")
                    .aisle("QA        AAAAAAAAA        AA", "Q        IA       AI        A", "         LA       AL         ", "       KKLA       ALKK       ", "        CLA       ALC        ", "      NNCLAOOOOOOOALCNN      ", "     N   L         L   N     ", "   K N  CL         LC  N K   ", "   KCC C   NNNNNNN   C CCK   ", " ILLLLLL  N       N  LLLLLLI ", "AAAAAA   N         N   AAAAAA", "A    O  N           N  O    A", "A    O  N   H   H   N  O    A", "A    O  N           N  O    A", "A    O  N     G     N  O    A", "A    O  N           N  O    A", "A    O  N   H   H   N  O    A", "A    O  N           N  O    A", "AAAAAA   N         N   AAAAAA", " ILLLLLL  N       N  LLLLLLI ", "   KCC C   NNNNNNN   C CCK   ", "   K N  CL         LC  N K   ", "     N   L         L   N     ", "      NNCLAOOOOOOOALCNN      ", "        CLA       ALC        ", "       KKLA       ALKK       ", "         LA       AL         ", "A        IA       AI        A", "AA        AAAAAAAAA        AA")
                    .aisle("QA         AAAAAAA         AA", "Q          AAAAAAA          A", "         I AAAAAAA I         ", "   E    KL AAAAAAA LK    E   ", "        CL AAAAAAA LC        ", "      NNCL AAAAAAA LCNN      ", "     N   L         L   N     ", "     N   L         L   N     ", "   KCC     NNNNNNN     CCK   ", "  ILLLLL  N       N  LLLLLI  ", "         N         N         ", "AAAAAA  N           N  AAAAAA", "AAAAAA  N   H   H   N  AAAAAA", "AAAAAA  N           N  AAAAAA", "AAAAAA  N     G     N  AAAAAA", "AAAAAA  N           N  AAAAAA", "AAAAAA  N   H   H   N  AAAAAA", "AAAAAA  N           N  AAAAAA", "         N         N         ", "  ILLLLL  N       N  LLLLLI  ", "   KCC     NNNNNNN     CCK   ", "     N   L         L   N     ", "     N   L         L   N     ", "      NNCL AAAAAAA LCNN      ", "        CL AAAAAAA LC        ", "   E    KL AAAAAAA LK    E   ", "         I AAAAAAA I         ", "A          AAAAAAA          A", "AA         AAAAAAA         AA")
                    .aisle("QA          DEDED          AA", "Q           DEDED           A", "            DEDED            ", "   EE    I  DEDED  I    EE   ", "   E    CL  DEDED  LC    E   ", "        CL  DEDED  LC        ", "      NNCL AAAAAAA LCNN      ", "      NNCLAOOOOOOOALCNN      ", "    CCCC AOOOOOOOOOA CCCC    ", "   ILLLLAOOOOOOOOOOOALLLLI   ", "       AOOOOOOOOOOOOOA       ", "      AOOOOOOOOOOOOOOOA      ", "DDDDDDAOOOOOHOOOHOOOOOADDDDDD", "EEEEEEAOOOOOOOOOOOOOOOAEEEEEE", "DDDDDDAOOOOOOOGOOOOOOOADDDDDD", "EEEEEEAOOOOOOOOOOOOOOOAEEEEEE", "DDDDDDAOOOOOHOOOHOOOOOADDDDDD", "      AOOOOOOOOOOOOOOOA      ", "       AOOOOOOOOOOOOOA       ", "   ILLLLAOOOOOOOOOOOALLLLI   ", "    CCCC AOOOOOOOOOA CCCC    ", "      NNCLAOOOOOOOALCNN      ", "      NNCL AAAAAAA LCNN      ", "        CL  DEDED  LC        ", "   E    CL  DEDED  LC    E   ", "   EE    I  DEDED  I    EE   ", "            DEDED            ", "A           DEDED           A", "AA          DEDED          AA")
                    .aisle("QA                         AA", "Q           DEDED           A", "            DEDED            ", "   H E      MMMMM      E H   ", "         I  DEDED  I         ", "   E    CL  DEDED  LC    E   ", "        CL AAAAAAA LC        ", "        CLA       ALC        ", "     CCC A         A CCC     ", "    ILLLA           ALLLI    ", "       A  JJJJJJJJJ  A       ", "      A   J       J   A      ", " DDMDDA   J H   H J   ADDMDD ", " EEMEEA   J       J   AEEMEE ", " DDMDDA   J   G   J   ADDMDD ", " EEMEEA   J       J   AEEMEE ", " DDMDDA   J H   H J   ADDMDD ", "      A   J       J   A      ", "       A  JJJJJJJJJ  A       ", "    ILLLA           ALLLI    ", "     CCC A         A CCC     ", "        CLA       ALC        ", "        CL AAAAAAA LC        ", "   E    CL  DEDED  LC    E   ", "         I  DEDED  I         ", "   H E      MMMMM      E H   ", "            DEDED            ", "A           DEDED           A", "AA                         AA")
                    .aisle("AAC                       CAA", "AHH                       HHA", "CHKH        DEDED        HKHC", "  HKHEE     DEDED     EEHKH  ", "   H E      MMMMM      E H   ", "   EE    I  DEDED  I    EE   ", "   E    KL AAAAAAA LK    E   ", "       KKLA       ALKK       ", "      KK A         A KK      ", "     ILLA           ALLI     ", "       A             A       ", "      A               A      ", "  DDMDA     H   H     ADMDD  ", "  EEMEA               AEMEE  ", "  DDMDA       G       ADMDD  ", "  EEMEA               AEMEE  ", "  DDMDA     H   H     ADMDD  ", "      A               A      ", "       A             A       ", "     ILLA           ALLI     ", "      KK A         A KK      ", "       KKLA       ALKK       ", "   E    KL AAAAAAA LK    E   ", "   EE    I  DEDED  I    EE   ", "   H E      MMMMM      E H   ", "  HKHEE     DEDED     EEHKH  ", "CHKH        DEDED        HKHC", "AHH                       HHA", "AAC                       CAA")
                    .aisle("AACC                     CCAA", "A  H                     H  A", "C  K                     K  C", "CHKH        DEDED        HKHC", "            DEDED            ", "            DEDED            ", "         I AAAAAAA I         ", "         LA       AL         ", "         A         A         ", "      ILA           ALI      ", "       A             A       ", "      A               A      ", "   DDDA     H   H     ADDD   ", "   EEEA               AEEE   ", "   DDDA       G       ADDD   ", "   EEEA               AEEE   ", "   DDDA     H   H     ADDD   ", "      A               A      ", "       A             A       ", "      ILA           ALI      ", "         A         A         ", "         LA       AL         ", "         I AAAAAAA I         ", "            DEDED            ", "            DEDED            ", "CHKH        DEDED        HKHC", "C  K                     K  C", "A  H                     H  A", "AACC                     CCAA")
                    .aisle("AAAAAAAAAAAABBBBBAAAAAAAAAAAA", "A  H                     H  A", "A  H                     H  A", "AHH                       HHA", "A           DEDED           A", "A           DEDED           A", "A          AAAAAAA          A", "A        IA       AI        A", "A        A         A        A", "A      IA           AI      A", "A      A  JJJJJJJJJ  A      A", "A     A   J       J   A     A", "B   DDA   J H   H J   ADD   B", "B   EEA   J       J   AEE   B", "B   DDA   J   G   J   ADD   B", "B   EEA   J       J   AEE   B", "B   DDA   J H   H J   ADD   B", "A     A   J       J   A     A", "A      A  JJJJJJJJJ  A      A", "A      IA           AI      A", "A        A         A        A", "A        IA       AI        A", "A          AAAAAAA          A", "A           DEDED           A", "A           DEDED           A", "AHH                       HHA", "A  H                     H  A", "A  H                     H  A", "AAAAAAAAAAAABBBBBAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAABBBBBAAAAAAAAAAAA", "AACC                     CCAA", "AAC                       CAA", "AA                         AA", "AA          DEDED          AA", "AA         AAAAAAA         AA", "AA        AAAAAAAAA        AA", "AA       AFFFFFFFFFA       AA", "AA      AAAAAAAAAAAAA      AA", "AA     AFAAAAAAAAAAAFA     AA", "AA    AAFAAABAAABAAAFAA    AA", "AB   DAAFAABBAAABBAAFAAD   BA", "AB   EAAFAAAAAAAAAAAFAAE   BA", "AB   DAAFAAAAAGAAAAAFAAD   BA", "AB   EAAFAAAAAAAAAAAFAAE   BA", "AB   DAAFAABBAAABBAAFAAD   BA", "AA    AAFAAABAAABAAAFAA    AA", "AA     AFAAAAAAAAAAAFA     AA", "AA      AAAAAAAAAAAAA      AA", "AA       AFFFFFFFFFA       AA", "AA        AAAAAAAAA        AA", "AA         AAAAAAA         AA", "AA          DEDED          AA", "AA                         AA", "AAC                       CAA", "AACC                     CCAA", "AAAAAAAAAAAABBBBBAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAA")
                    .where('A', blocks(GTEBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get()))
                    .where('B', blocks(GTEBlocks.DIMENSIONAL_STABILITY_CASING.get()))
                    .where('C', blocks(GTEBlocks.DIMENSION_INJECTION_CASING.get()))
                    .where('D', blocks(GTEBlocks.MOLECULAR_CASING.get()))
                    .where('E', blocks(GTEBlocks.DEGENERATE_RHENIUM_CONSTRAINED_CASING.get()))
                    .where('F', blocks(GTEBlocks.DIMENSIONAL_BRIDGE_CASING.get()))
                    .where('G', blocks(GTEBlocks.SPACETIME_COMPRESSION_FIELD_GENERATOR.get()))
                    .where('H', blocks(GTEBlocks.RESTRAINT_DEVICE.get()))
                    .where('I', blocks(GTEBlocks.AMPROSIUM_ACTIVE_CASING.get()))
                    .where('J', blocks(GTEBlocks.INFINITY_COIL_BLOCK.get()))
                    .where('K', frames(GTMaterials.Neutronium))
                    .where('L', blocks(GTEBlocks.AMPROSIUM_CASING.get()))
                    .where('M', blocks(GTEBlocks.AMPROSIUM_GEARBOX.get()))
                    .where('N', blocks(GTEBlocks.SPS_CASING.get()))
                    .where('O', blocks(GTEBlocks.EXTREME_DENSITY_CASING.get()))
                    .where('P', blocks(GTEBlocks.INFINITY_GLASS.get()))
                    .where('Q', blocks(GTEBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get())
                            .or(GTEPredicates.autoLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('R', controller(blocks(definition.get())))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/dimensionally_transcendent_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition NANITES_CIRCUIT_ASSEMBLY_FACTORY = multiblock("nanites_circuit_assembly_factory", "纳米蜂群电路组装厂", CrossRecipeMultiblockMachine::createHatchParallel)
            .nonYAxisRotation()
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .recipe(GTRecipeTypes.CIRCUIT_ASSEMBLER_RECIPES)
            .block(GTEBlocks.NAQUADAH_ALLOY_CASING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle(" BBBBBBBBBBB ", " CCDDDLDDDCC ", " EEEEEEEEEEE ", "             ", "             ", "             ", "             ", "             ", "             ", "             ")
                    .aisle("ABBBBBBBBBBBA", "AC  J L J  CA", "AFFFFFFFFFFFA", " AAAAAAAAAAA ", "             ", "             ", "             ", "             ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " D  J L J  D ", " EFFBFFFBFFE ", "    BFFFB    ", "    B   B    ", "    B   B    ", "    B   B    ", "    B   B    ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " D  J L J  D ", " EFFFFFFFFFE ", "     FFF     ", "             ", "             ", "             ", "    B   B    ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " D  J L J  D ", " EFFFFFFFFFE ", "   I FFF I   ", "   I     I   ", "   I     I   ", "   IIIIIII   ", "   IBI IBI   ", "             ", "             ")
                    .aisle("BBBBBBBBBBBBB", "BB  J L J  BB", "BFFFFFFFFFFFB", "     FFF     ", "             ", "             ", "             ", "    B   B    ", "             ", "             ")
                    .aisle("BBBBBBBBBBBBB", "BB  J L J  BB", "BFFFHFFFHFFFB", "     FFF     ", "             ", "             ", "             ", "    B   B    ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " D  J L J  D ", " EFFHFFFHFFE ", "     FFF     ", "             ", "             ", "             ", "    B   B    ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " D  J L J  D ", " EFFHFFFHFFE ", "     FFF     ", "             ", "             ", "             ", "    B   B    ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " D  J L J  D ", " EFFFFFFFFFE ", "   I FFF I   ", "   I     I   ", "   I     I   ", "   IIIIIII   ", "   IBI IBI   ", "             ", "             ")
                    .aisle("ABBBBBBBBBBBA", "AC  K L K  CA", "AFFFFFFFFFFFA", " AAAAAAAAAAA ", "             ", "             ", "             ", "    B   B    ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " CCBKBKBKBCC ", " FFFFFFFFFFF ", "     F F     ", "     F F     ", "     F F     ", "   FFFFFFF   ", "   FBFFFBF   ", "    FFFFF    ", "             ")
                    .aisle("  EFFFFFFFE  ", "  EFKFKFKFE  ", "  EFFFFFFFE  ", "   FFFFFFF   ", "   CCCCCCC   ", "   FFFFFFF   ", "  FFFFFFFFF  ", "  FFBFFFBFF  ", "   FFFFFFF   ", "   FFFFFFF   ")
                    .aisle("  EFFFFFFFE  ", "  E K K K E  ", "  E       E  ", "  F       F  ", "  C       C  ", "  HF     FH  ", "  FF     FF  ", "  FFB   BFF  ", "  FF     FF  ", "   FFFFFFF   ")
                    .aisle("  EFFFFFFFE  ", "  E K K K G  ", "  E K K K E  ", "  F K K K F  ", "  C K K K C  ", "  HFK K KFH  ", "  FFK K KFF  ", "  FFK K KFF  ", "   F     F   ", "   FFFFFFF   ")
                    .aisle("  EFFFFFFFE  ", "  E K K K E  ", "  E       E  ", "  F       F  ", "  C       C  ", "  HF     FH  ", "  FF     FF  ", "  FFB   BFF  ", "  FF     FF  ", "   FFFFFFF   ")
                    .aisle("  EFFFFFFFE  ", "  EFKFKFKFE  ", "  EFFFFFFFE  ", "   FFFFFFF   ", "   CCCCCCC   ", "   FFFFFFF   ", "  FFFFFFFFF  ", "  FFBFFFBFF  ", "   FFFFFFF   ", "   FFFFFFF   ")
                    .aisle(" BBBBBBBBBBB ", " CCBKBKBKBCC ", " FFFFFFFFFFF ", "     F F     ", "     F F     ", "     F F     ", "   FFFFFFF   ", "   FBFFFBF   ", "    FFFFF    ", "             ")
                    .aisle("ABBBBBBBBBBBA", "AC  K L K  CA", "AFFFFFFFFFFFA", " AAAAAAAAAAA ", "             ", "             ", "             ", "    B   B    ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " D  J L J  D ", " EFFFFFFFFFE ", "   I FFF I   ", "   I     I   ", "   I     I   ", "   IIIIIII   ", "   IBI IBI   ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " D  J L J  D ", " EFFHFFFHFFE ", "     FFF     ", "             ", "             ", "             ", "    B   B    ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " D  J L J  D ", " EFFHFFFHFFE ", "     FFF     ", "             ", "             ", "             ", "    B   B    ", "             ", "             ")
                    .aisle("BBBBBBBBBBBBB", "BB  J L J  BB", "BFFFHFFFHFFFB", "     FFF     ", "             ", "             ", "             ", "    B   B    ", "             ", "             ")
                    .aisle("BBBBBBBBBBBBB", "BB  J L J  BB", "BFFFFFFFFFFFB", "     FFF     ", "             ", "             ", "             ", "    B   B    ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " D  J L J  D ", " EFFFFFFFFFE ", "   I FFF I   ", "   I     I   ", "   I     I   ", "   IIIIIII   ", "   IBI IBI   ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " D  J L J  D ", " EFFFFFFFFFE ", "     FFF     ", "             ", "             ", "             ", "    B   B    ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " D  J L J  D ", " EFFBFFFBFFE ", "    BFFFB    ", "    B   B    ", "    B   B    ", "    B   B    ", "    B   B    ", "             ", "             ")
                    .aisle("ABBBBBBBBBBBA", "AC  J L J  CA", "AFFFFFFFFFFFA", " AAAAAAAAAAA ", "             ", "             ", "             ", "             ", "             ", "             ")
                    .aisle(" BBBBBBBBBBB ", " CCDDDLDDDCC ", " EEEEEEEEEEE ", "             ", "             ", "             ", "             ", "             ", "             ", "             ")
                    .where('A', frames(GTEMaterials.HastelloyN))
                    .where('B', blocks(GTEBlocks.PIKYONIUM_MACHINE_CASING.get()))
                    .where('C', blocks(GTEBlocks.DIMENSION_INJECTION_CASING.get()))
                    .where('D', blocks(GTBlocks.FUSION_GLASS.get()))
                    .where('E', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('F', blocks(GTEBlocks.NAQUADAH_ALLOY_CASING.get()))
                    .where('G', controller(blocks(definition.get())))
                    .where('H', blocks(GTEBlocks.HYPER_CORE.get()))
                    .where('I', frames(GTMaterials.HastelloyX))
                    .where('J', frames(GTEMaterials.Quantanium))
                    .where('K', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('L', blocks(GTEBlocks.MACHINE_CASING_CIRCUIT_ASSEMBLY_LINE.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/hyper_mechanical_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition PRECISION_ASSEMBLY_CENTER = multiblock("precision_assembly_center", "精密组装中心", CrossRecipeMultiblockMachine::createHatchParallel)
            .nonYAxisRotation()
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .recipe(GTERecipeTypes.PRECISION_ASSEMBLER_RECIPES)
            .block(GTEBlocks.IRIDIUM_CASING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("AAAAAAAAAAAAA", "AAAAAATAAAAAA", "CCCCCCCCCCCCC", "CCLLLCCCLLLCC", "CCLLLCCCLLLCC", "CCLLLCCCLLLCC", "CCCCCCCCCCCCC", " HHHQQQQQHHH ", "  HHHHHHHHH  ", "             ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CCCCCCCCCCCCC", "CJLLLJJJLLLJC", "CJLOLJUJLOLJC", "CJLLLJJJLLLJC", "CCCCCCCCCCCCC", " HEEEEEEEEEH ", "  HHHHHHHHH  ", "     HHH     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CCKKKKKKKKKCC", "DKLLLRRRLLLKD", "C LOLRURLOL C", "DKLLLRRRLLLKD", "CCKKKKKKKKKCC", " HKKKKKKKKKH ", "  HHHHHHHHH  ", "     HHH     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "EK   RRR   KE", "C  O RUR O  C", "EK   RRR   KE", "CC         CC", " HM       MH ", "  MMHHHHHMM  ", "     HHH     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "DK   RRR   KD", "C  O RUR O  C", "DK   RRR   KD", "CC         CC", " HM       MH ", "  MMHSHSHMM  ", "     EHE     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "DK   RRR   KD", "C  O RUR O  C", "DK   RRR   KD", "CC         CC", " HM       MH ", "  MMHSHSHMM  ", "     EHE     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "EK   RRR   KE", "C  O RUR O  C", "EK   RRR   KE", "CC         CC", " HM       MH ", "  MMHSHSHMM  ", "     EHE     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "DK   RRR   KD", "C  O RUR O  C", "DK   RRR   KD", "CC         CC", " HM       MH ", "  MMHSHSHMM  ", "     EHE     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "CK         KC", "C  O  U  O  C", "CK         KC", "CC         CC", " HM       MH ", "  MMHSHSHMM  ", "     EHE     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "CC  P   P  CC", "C  IO U OI  C", "CC  P   P  CC", "CC         CC", " HHH       H ", "  HHHSHSHHH  ", "     EHE     ")
                    .aisle("BBBBBBBBBBBBB", "BIENNNNNNNEIB", "B    O O    B", "FC         CF", "F     U     F", "F           F", "FF         FF", "FFF      FFFF", " FFFFSHSFFFF ", "     EHE     ")
                    .aisle("BCCCCCCCCCCCB", " IENCCCCCNEI ", "B    OQO    B", "FC   P P   CF", "G     U     G", "G           G", "F           F", " GG       GG ", "  GGFSHSFGG  ", "     EHE     ")
                    .aisle("BCCCCCCCCCCCB", " IENCCCCCNEI ", "B  O OQO O  B", "FC O     O CF", "G  O  U  O  G", "G  E     E  G", "F           F", " GG       GG ", "  GGFSHSFGG  ", "     EHE     ")
                    .aisle("BCCCCCCCCCCCB", " IENCCCCCNEI ", "B    OQO    B", "FC   P P   CF", "G    PUP    G", "G           G", "F           F", " GG       GG ", "  GGFHHHFGG  ", "     HHH     ")
                    .aisle("BCCCCCCCCCCCB", " IENCCCCCNEI ", "B    OQO    B", "FC         CF", "G     U     G", "G           G", "F           F", " GG       GG ", "  GGFHHHFGG  ", "     HHH     ")
                    .aisle("BCCCCCCCCCCCB", " IENCCCCCNEI ", "B    OQO    B", "FC         CF", "F     U     F", "F           F", "FF         FF", "FFFF      FFF", " FFFFHHHFFFF ", "     HHH     ")
                    .aisle("BCCCCCCCCCCCB", " IENCCCCCNEI ", "B    OQO    B", "FC         CF", "G     U     G", "G           G", "F           F", " GG       GG ", "  GGFHHHFGG  ", "     HHH     ")
                    .aisle("BCCCCCCCCCCCB", " IENCCCCCNEI ", "B    OQO    B", "FC   P P   CF", "G    PUP    G", "G           G", "F           F", " GG       GG ", "  GGFHHHFGG  ", "     HHH     ")
                    .aisle("BCCCCCCCCCCCB", " IENCCCCCNEI ", "B  O OQO O  B", "FC O     O CF", "G  O  U  O  G", "G  E     E  G", "F           F", " GG       GG ", "  GGFSHSFGG  ", "     EHE     ")
                    .aisle("BCCCCCCCCCCCB", " IENCCCCCNEI ", "B    OQO    B", "FC   P P   CF", "G     U     G", "G           G", "F           F", " GG       GG ", "  GGFSHSFGG  ", "     EHE     ")
                    .aisle("BBBBBBBBBBBBB", "BIENNNNNNNEIB", "B    O O    B", "FC         CF", "F     U     F", "F           F", "FF         FF", "FFFF      FFF", " FFFFSHSFFFF ", "     EHE     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "CC  P   P  CC", "C  IO U OI  C", "CC  P   P  CC", "CC         CC", " H       HHH ", "  HHHSHSHHH  ", "     EHE     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "CK         KC", "C  O  U  O  C", "CK         KC", "CC         CC", " HM       MH ", "  MMHSHSHMM  ", "     EHE     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "DK   RRR   KD", "C  O RUR O  C", "DK   RRR   KD", "CC         CC", " HM       MH ", "  MMHSHSHMM  ", "     EHE     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "EK   RRR   KE", "C  O RUR O  C", "EK   RRR   KE", "CC         CC", " HM       MH ", "  MMHSHSHMM  ", "     EHE     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "DK   RRR   KD", "C  O RUR O  C", "DK   RRR   KD", "CC         CC", " HM       MH ", "  MMHSHSHMM  ", "     EHE     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "DK   RRR   KD", "C  O RUR O  C", "DK   RRR   KD", "CC         CC", " HM       MH ", "  MMHSHSHMM  ", "     EHE     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CC         CC", "EK   RRR   KE", "C  O RUR O  C", "EK   RRR   KE", "CC         CC", " HM       MH ", "  MMHHHHHMM  ", "     HHH     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CCKKKKKKKKKCC", "DKLLLRRRLLLKD", "C LOLRURLOL C", "DKLLLRRRLLLKD", "CCKKKKKKKKKCC", " HKKKKKKKKKH ", "  HHHHHHHHH  ", "     HHH     ")
                    .aisle("AHHHHHHHHHHHA", "AHHHHHHHHHHHA", "CCCCCCCCCCCCC", "CJLLLJJJLLLJC", "CJLOLJUJLOLJC", "CJLLLJJJLLLJC", "CCCCCCCCCCCCC", " HEEEEEEEEEH ", "  HHHHHHHHH  ", "     HHH     ")
                    .aisle("AAAAAAAAAAAAA", "AAAAAAAAAAAAA", "CCCCCCCCCCCCC", "CCLLLCCCLLLCC", "CCLLLCCCLLLCC", "CCLLLCCCLLLCC", "CCCCCCCCCCCCC", " HHHQQQQQHHH ", "  HHHHHHHHH  ", "             ")
                    .where('A', blocks(GTEBlocks.IRIDIUM_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('B', blocks(GTEBlocks.HYPER_MECHANICAL_CASING.get()))
                    .where('C', blocks(GTEBlocks.OXIDATION_RESISTANT_HASTELLOY_N_MECHANICAL_CASING.get()))
                    .where('D', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('E', frames(GTEMaterials.HastelloyN))
                    .where('F', blocks(GTEBlocks.ZIRCONIA_CERAMIC_HIGH_STRENGTH_BENDING_RESISTANCE_MECHANICAL_BLOCK.get()))
                    .where('G', blocks(GTBlocks.CLEANROOM_GLASS.get()))
                    .where('H', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('I', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('J', frames(GTEMaterials.Trinaquadalloy))
                    .where('K', blocks(GTEBlocks.BORON_CARBIDE_CERAMIC_RADIATION_RESISTANT_MECHANICAL_CUBE.get()))
                    .where('L', blocks(GTBlocks.MACHINE_CASING_UHV.get()))
                    .where('M', blocks(GTBlocks.CASING_LAMINATED_GLASS.get()))
                    .where('N', blocks(GTEBlocks.AMPROSIUM_GEARBOX.get()))
                    .where('O', blocks(GTEBlocks.ADVANCED_ASSEMBLY_LINE_UNIT.get()))
                    .where('P', blocks(Blocks.IRON_BARS))
                    .where('Q', blocks(GTEBlocks.SPACETIME_ASSEMBLY_LINE_UNIT.get()))
                    .where('R', blocks(GTEBlocks.MOLECULAR_CASING.get()))
                    .where('S', blocks(GTBlocks.FILTER_CASING.get()))
                    .where('T', controller(blocks(definition.get())))
                    .where('U', blocks(GTEBlocks.HOLLOW_CASING.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/iridium_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition THERMAL_POWER_PUMP = multiblock("thermal_power_pump", "热力泵", ThermalPowerPumpMachine::new)
            .nonYAxisRotation()
            .tooltipsText("Efficient Water Supply", "高效供水")
            .tooltipsText("Input steam, generate an equal amount of water", "输入蒸汽，产生同等数量的水")
            .recipe(GTRecipeTypes.DUMMY_RECIPES)
            .block(GTEBlocks.BRASS_REINFORCED_WOODEN_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("FFF", "G G", "FFF")
                    .aisle("FHF", "HHH", "FFF")
                    .aisle("FFF", "GEG", "FFF")
                    .aisle("DDD", "DED", "DDD")
                    .aisle("CDC", "AEA", "CAC")
                    .aisle("CDC", "AEA", "CAC")
                    .aisle("CDC", "AEA", "CAC")
                    .aisle("AAA", "ABA", "AAA")
                    .where('A', blocks(GTEBlocks.BRASS_REINFORCED_WOODEN_CASING.get())
                            .or(abilities(IMPORT_FLUIDS).setExactLimit(1))
                            .or(abilities(EXPORT_FLUIDS).setExactLimit(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('B', controller(blocks(definition.get())))
                    .where('C', blocks(GTBlocks.CASING_BRONZE_BRICKS.get()))
                    .where('D', blocks(GTEBlocks.BRASS_REINFORCED_WOODEN_CASING.get()))
                    .where('E', blocks(GTBlocks.CASING_BRONZE_PIPE.get()))
                    .where('F', blocks(GTEBlocks.REINFORCED_WOOD_CASING.get()))
                    .where('G', frames(GTMaterials.TreatedWood))
                    .where('H', blocks(GTBlocks.CASING_BRONZE_GEARBOX.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/brass_reinforced_wooden_casing"), GTCEu.id("block/multiblock/multiblock_tank"))
            .register();

    MultiblockMachineDefinition LARGE_STEAM_STORAGE_TANK = multiblock("large_steam_storage_tank", "大型蒸汽储罐", h -> new MultiblockTankMachine(h, 100000000, new PropertyFluidFilter(666, true, true, true, true) {

        @Override
        public boolean test(@NotNull FluidStack stack) {
            return stack.getFluid() == GTMaterials.Steam.getFluid();
        }
    }))
            .nonYAxisRotation()
            .recipe(GTRecipeTypes.DUMMY_RECIPES)
            .block(GCYMBlocks.CASING_INDUSTRIAL_STEAM)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle(" AAA ", " ABA ", " ABA ", " A A ", " A A ", " A A ", " CCC ")
                    .aisle("AAAAA", "ADEDA", "ADDDA", "ADFDA", "ADFDA", "ADFDA", "C D C")
                    .aisle("AAAAA", "BEEEB", "BDEDB", " F F ", " F F ", " F F ", "CDBDC")
                    .aisle("AAAAA", "ADEDA", "ADDDA", "ADFDA", "ADFDA", "ADFDA", "C D C")
                    .aisle(" AAA ", " AGA ", " ABA ", " A A ", " A A ", " A A ", " CCC ")
                    .where('A', blocks(GTEBlocks.BRASS_REINFORCED_WOODEN_CASING.get()))
                    .where('B', blocks(GCYMBlocks.CASING_INDUSTRIAL_STEAM.get())
                            .or(blocks(GTMultiMachines.STEEL_TANK_VALVE.getBlock()).setMaxGlobalLimited(2, 2)))
                    .where('C', frames(GTMaterials.Bronze))
                    .where('D', blocks(GCYMBlocks.CASING_INDUSTRIAL_STEAM.get()))
                    .where('E', blocks(GTBlocks.CASING_BRONZE_PIPE.get()))
                    .where('F', blocks(Blocks.GLASS))
                    .where('G', controller(blocks(definition.get())))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/industrial_steam_casing"), GTCEu.id("block/multiblock/multiblock_tank"))
            .register();
}
