package org.gte.gtecore.common.data.machines;

import org.gte.gtecore.GTECore;
import org.gte.gtecore.api.machine.multiblock.CoilCrossRecipeMultiblockMachine;
import org.gte.gtecore.api.machine.multiblock.CoilMultiblockMachine;
import org.gte.gtecore.api.machine.multiblock.CrossRecipeMultiblockMachine;
import org.gte.gtecore.api.machine.multiblock.ElectricMultiblockMachine;
import org.gte.gtecore.api.machine.part.GTEPartAbility;
import org.gte.gtecore.api.pattern.GTEPredicates;
import org.gte.gtecore.client.renderer.machine.FluidRenderer;
import org.gte.gtecore.client.renderer.machine.SpaceElevatorRenderer;
import org.gte.gtecore.common.data.*;
import org.gte.gtecore.common.machine.multiblock.electric.gcym.GCYMMultiblockMachine;
import org.gte.gtecore.common.machine.multiblock.electric.space.SuperSpaceElevatorMachine;
import org.gte.gtecore.common.machine.multiblock.noenergy.PrimitiveOreMachine;
import org.gte.gtecore.common.machine.multiblock.water.*;
import org.gte.gtecore.config.GTEConfig;
import org.gte.gtecore.utils.MachineUtils;
import org.gte.gtecore.utils.RLUtils;

import com.gregtechceu.gtceu.GTCEu;
import com.gregtechceu.gtceu.api.data.chemical.ChemicalHelper;
import com.gregtechceu.gtceu.api.data.tag.TagPrefix;
import com.gregtechceu.gtceu.api.machine.MultiblockMachineDefinition;
import com.gregtechceu.gtceu.api.pattern.FactoryBlockPattern;
import com.gregtechceu.gtceu.api.pattern.util.RelativeDirection;
import com.gregtechceu.gtceu.common.data.GCYMBlocks;
import com.gregtechceu.gtceu.common.data.GTBlocks;
import com.gregtechceu.gtceu.common.data.GTMaterials;
import com.gregtechceu.gtceu.common.data.GTRecipeTypes;

import net.minecraft.server.level.ServerLevel;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.entity.LightningBolt;
import net.minecraft.world.level.block.Blocks;

import committee.nova.mods.avaritia.init.registry.ModBlocks;

import static com.gregtechceu.gtceu.api.machine.multiblock.PartAbility.*;
import static com.gregtechceu.gtceu.api.pattern.Predicates.*;
import static org.gte.gtecore.api.GTEValues.POWER_MODULE_TIER;
import static org.gte.gtecore.common.block.BlockMap.SEPMMAP;
import static org.gte.gtecore.utils.register.MachineRegisterUtils.multiblock;

public interface MultiBlockB {

    static void init() {}

    MultiblockMachineDefinition PRIMITIVE_VOID_ORE = GTEConfig.INSTANCE.enablePrimitiveVoidOre ?
            multiblock("primitive_void_ore", "原始虚空采矿机", PrimitiveOreMachine::new)
                    .allRotation()
                    .recipe(GTERecipeTypes.PRIMITIVE_VOID_ORE_RECIPES)
                    .block(() -> Blocks.DIRT)
                    .pattern(definition -> FactoryBlockPattern.start()
                            .aisle("XXX", "XXX", "XXX")
                            .aisle("XXX", "XAX", "XXX")
                            .aisle("XXX", "XSX", "XXX")
                            .where('S', controller(blocks(definition.get())))
                            .where('X', blocks(Blocks.DIRT).or(abilities(EXPORT_ITEMS)).or(abilities(IMPORT_FLUIDS)))
                            .where('A', air())
                            .build())
                    .workableCasingRenderer(RLUtils.mc("block/dirt"), GTCEu.id("block/multiblock/gcym/large_extractor"))
                    .register() :
            null;

    MultiblockMachineDefinition LARGE_BENDER = multiblock("large_bender", "大型卷弯机", GCYMMultiblockMachine::new)
            .allRotation()
            .eutMultiplierTooltips(0.8)
            .durationMultiplierTooltips(0.6)
            .parallelizableTooltips()
            .recipe(GTRecipeTypes.BENDER_RECIPES)
            .recipeModifier(GTERecipeModifiers.GCYM_OVERCLOCKING)
            .block(GCYMBlocks.CASING_STRESS_PROOF)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", "A   A", "AAAAA", " AAA ")
                    .aisle("AAAAA", "A   A", "ACCCA", "AAAAA")
                    .aisle("AAAAA", "ADDDA", "DDDDD", "AAAAA")
                    .aisle("AAAAA", "ABaBA", "ABBBA", "AAAAA")
                    .aisle("AAAAA", "ADDDA", "DDDDD", "AAAAA")
                    .aisle("AAAAA", "A   A", "ACCCA", "AAAAA")
                    .aisle("AA~AA", "A   A", "AAAAA", " AAA ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GCYMBlocks.CASING_STRESS_PROOF.get())
                            .setMinGlobalLimited(80)
                            .or(GTEPredicates.autoMnaAccelerateAbilities(definition.getRecipeTypes()))
                            .or(autoAbilities(true, false, true)))
                    .where('B', air())
                    .where('C', blocks(GTBlocks.CASING_TUNGSTENSTEEL_PIPE.get()))
                    .where('D', blocks(GTBlocks.CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where(' ', any())
                    .where('a', GTEPredicates.integralFramework())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/stress_proof_casing"), GTCEu.id("block/multiblock/gcym/large_material_press"))
            .register();

    MultiblockMachineDefinition LARGE_ROLLING = multiblock("large_rolling", "大型辊轧机", GCYMMultiblockMachine::new)
            .allRotation()
            .eutMultiplierTooltips(0.8)
            .durationMultiplierTooltips(0.6)
            .parallelizableTooltips()
            .recipe(GTERecipeTypes.ROLLING_RECIPES)
            .recipe(GTERecipeTypes.CLUSTER_RECIPES)
            .recipeModifier(GTERecipeModifiers.GCYM_OVERCLOCKING)
            .block(GCYMBlocks.CASING_STRESS_PROOF)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle("AAAAA", "B   B", "CCCCC", "     ")
                    .aisle("ACCCA", "B   B", "CBBBC", "     ")
                    .aisle("ADDDA", "E   E", "CDDDC", "ACCCA")
                    .aisle("AFaFG", "E   E", "CFFFC", "ACCCA")
                    .aisle("ADDDA", "E   E", "CDDDC", "ACCCA")
                    .aisle("ACCCA", "B   B", "CBBBC", "     ")
                    .aisle("AAAAA", "B   B", "CCCCC", "     ")
                    .where('B', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Tungsten)))
                    .where('C', blocks(GCYMBlocks.CASING_STRESS_PROOF.get()))
                    .where('D', blocks(GTBlocks.CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where('E', blocks(GTBlocks.CASING_GRATE.get()))
                    .where('F', blocks(GTBlocks.STEEL_HULL.get()))
                    .where('G', controller(blocks(definition.get())))
                    .where('A', blocks(GCYMBlocks.CASING_STRESS_PROOF.get())
                            .or(GTEPredicates.autoMnaAccelerateAbilities(definition.getRecipeTypes()))
                            .or(autoAbilities(true, false, true)))
                    .where(' ', any())
                    .where('a', GTEPredicates.integralFramework())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/stress_proof_casing"), GTCEu.id("block/multiblock/gcym/large_material_press"))
            .register();

    MultiblockMachineDefinition LARGE_FORMING = multiblock("large_forming", "大型冲压机", GCYMMultiblockMachine::new)
            .allRotation()
            .eutMultiplierTooltips(0.8)
            .durationMultiplierTooltips(0.6)
            .parallelizableTooltips()
            .recipe(GTRecipeTypes.FORGE_HAMMER_RECIPES)
            .recipe(GTRecipeTypes.FORMING_PRESS_RECIPES)
            .recipeModifier(GTERecipeModifiers.GCYM_OVERCLOCKING)
            .block(GCYMBlocks.CASING_STRESS_PROOF)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("EEEEE", "AAAAA", "DDDDD", "DHHHD", "DDDDD", "DHHHD", "DDDDD", "     ")
                    .aisle("EEEEE", "AFFFA", "D   D", "     ", "DFFFD", "CGGGC", "DD DD", " DDD ")
                    .aisle("EEEEE", "AFFFA", "     ", "     ", "DFFFD", "CGGGC", "D   D", " DDD ")
                    .aisle("EEaEE", "AFFFA", "D   D", "     ", "DFFFD", "CGGGC", "DD DD", " DDD ")
                    .aisle("AABAA", "A   A", "A   A", "ACCCA", "DDDDD", "DCCCD", "DDDDD", "     ")
                    .where('B', controller(blocks(definition.get())))
                    .where('C', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.BlueSteel)))
                    .where('D', blocks(GCYMBlocks.CASING_STRESS_PROOF.get()))
                    .where('E', blocks(GTBlocks.STEEL_HULL.get()))
                    .where('F', blocks(ChemicalHelper.getBlock(TagPrefix.block, GTMaterials.TungstenSteel)))
                    .where('G', blocks(GTBlocks.CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where('H', blocks(GTBlocks.CASING_GRATE.get()))
                    .where('A', blocks(GCYMBlocks.CASING_STRESS_PROOF.get())
                            .or(GTEPredicates.autoMnaAccelerateAbilities(definition.getRecipeTypes()))
                            .or(autoAbilities(true, false, true)))
                    .where(' ', any())
                    .where('a', GTEPredicates.integralFramework())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/stress_proof_casing"), GTCEu.id("block/multiblock/gcym/large_material_press"))
            .register();

    MultiblockMachineDefinition GRAVITATION_SHOCKBURST = multiblock("gravitation_shockburst", "引力震爆器", ElectricMultiblockMachine::new)
            .allRotation()
            .recipe(GTERecipeTypes.GRAVITATION_SHOCKBURST_RECIPES)
            .recipe(GTERecipeTypes.ELECTRIC_IMPLOSION_COMPRESSOR_RECIPES)
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, false)
            .parallelizablePerfectOverclock()
            .block(GTEBlocks.CREATE_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("aaaaaaaaa", "         ", "         ", "         ", "         ", "         ", "aaaaaaaaa")
                    .aisle("aaaaaaaaa", " abbbbba ", " abbbbba ", " abbbbba ", " abbbbba ", " abbbbba ", "aaaaaaaaa")
                    .aisle("aaaaaaaaa", " b ccc b ", " bcccccb ", " bcccccb ", " bcccccb ", " b ccc b ", "aaaaaaaaa")
                    .aisle("aaaaaaaaa", " bcccccb ", " bcccccb ", " bcc ccb ", " bcccccb ", " bcccccb ", "aaaaaaaaa")
                    .aisle("aaaaaaaaa", " bcccccb ", " bcc ccb ", " bc   cb ", " bcc ccb ", " bcccccb ", "aaaaaaaaa")
                    .aisle("aaaaaaaaa", " bcccccb ", " bcccccb ", " bcc ccb ", " bcccccb ", " bcccccb ", "aaaaaaaaa")
                    .aisle("aaaaaaaaa", " b ccc b ", " bcccccb ", " bcccccb ", " bcccccb ", " b ccc b ", "aaaaaaaaa")
                    .aisle("aaaaaaaaa", " abbbbba ", " abbbbba ", " abbbbba ", " abbbbba ", " abbbbba ", "aaaaaaaaa")
                    .aisle("aaaa~aaaa", "         ", "         ", "         ", "         ", "         ", "aaaaaaaaa")
                    .where('a', blocks(GTEBlocks.CREATE_CASING.get())
                            .or(abilities(IMPORT_ITEMS).setMaxGlobalLimited(1).setPreviewCount(1))
                            .or(abilities(EXPORT_ITEMS).setMaxGlobalLimited(1).setPreviewCount(1))
                            .or(abilities(OPTICAL_DATA_RECEPTION).setExactLimit(1))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(INPUT_LASER).setMaxGlobalLimited(1)))
                    .where('b', blocks(GTEBlocks.INFINITY_GLASS.get()))
                    .where('c', blocks(ModBlocks.infinity.get()))
                    .where('~', controller(blocks(definition.get())))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/create_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition DIGESTION_TANK = multiblock("digestion_tank", "煮解池", CoilMultiblockMachine.createCoilMachine(false, true))
            .nonYAxisRotation()
            .parallelizableTooltips()
            .recipe(GTERecipeTypes.DIGESTION_TREATMENT_RECIPES)
            .parallelizableOverclock()
            .block(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("#OOOOO#", "#YMMMY#", "##YYY##", "#######")
                    .aisle("OXXXXXO", "YMAAAMY", "#YAAAY#", "#YYYYY#")
                    .aisle("OXKKKXO", "MAAAAAM", "YAAAAAY", "#YAAAY#")
                    .aisle("OXKKKXO", "MAAAAAM", "YAAAAAY", "#YAAAY#")
                    .aisle("OXKKKXO", "MAAAAAM", "YAAAAAY", "#YAAAY#")
                    .aisle("OXXXXXO", "YMAAAMY", "#YAAAY#", "#YYYYY#")
                    .aisle("#OOSOO#", "#YMMMY#", "##YYY##", "#######")
                    .where('S', controller(blocks(definition.get())))
                    .where('X', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where('K', blocks(GTBlocks.CASING_INVAR_HEATPROOF.get()))
                    .where('Y', blocks(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST.get()))
                    .where('M', heatingCoils())
                    .where('O', blocks(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('A', air())
                    .where('#', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_robust_tungstensteel"), GTCEu.id("block/multiblock/gcym/large_maceration_tower"))
            .register();

    MultiblockMachineDefinition WOOD_DISTILLATION = multiblock("wood_distillation", "木化工厂", ElectricMultiblockMachine::new)
            .nonYAxisRotation()
            .recipe(GTERecipeTypes.WOOD_DISTILLATION_RECIPES)
            .parallelizableTooltips()
            .parallelizableOverclock()
            .block(GTBlocks.CASING_INVAR_HEATPROOF)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("ABBBA IIIII IIIII ABBBA", "AAAAA IIIII IIIII AAAAA", "CAAAC CIIIC CIIIC CAAAC", "C   C C   C C   C CCCCC", "CCCCC C   C C   C CAAAC", "CAAAC C   C CCCCC C   C", "C   C CCCCC CJJJC CAAAC", "CAAAC CJJJC CJJJC C   C", "C   C CJJJC CJJJC CAAAC", "CAAAC CJJJC CBBBC C   C", "C   C CBBBC C   C CBBBC", "CAAAC CCCCC CCCCC CDDDC", "C   C C   C CDDDC CDDDC", "CBBBC CCCCC CDDDC CDDDC", "CDDDC CDDDC CDDDC CCCCC", "CDDDC CDDDC CCCCC      ", "CCCCC CDDDC            ", "      CDDDC            ", "      CCCCC            ", "                       ")
                    .aisle("BBBBB IKKKI IKKKI BBBBB", "AAAAA IKKKI IKKKI AAAAA", "ADDDA IDJDI IDJDI ADDDA", " DDD   DJD   DJD  CDDDC", "CDDDC  DJD   DJDC A   A", "A   A  DJD  CDJDC  EEE ", " EEE  CDJDC J   J A   A", "A   A J   J J   J  EEE ", " EEE  J   J J   J A   A", "A   A J   J B   B  EEE ", " EEE  B   B  DDD  B   B", "A   A CDDDC CDDDC D   D", " EEE   DDD  D   D D   D", "B   B CEEEC D   D D   D", "D   D D   D D   D CDDDC", "D   D D   D CDDDC  DDD ", "CDDDC D   D  DDD       ", " DDD  D   D            ", "      CDDDC            ", "       DDD             ")
                    .aisle("BBBBB IKKKI IKKKI BBBBB", "AAGAA IKGKI IKGKI AAGAA", "ADGDA IJGJI IJGJI ADGDA", " DGD   JGJ   JGJ  CDGDC", "CDGDC  JGJ   JGJC A G A", "A G A  JGJ  CJGJC  EGE ", " EGE  CJGJC J   J A G A", "A G A J   J J   J  EGE ", " EGE  J   J J   J A G A", "A G A J   J B   B  EGE ", " EGE  B   B  DGD  B   B", "A G A CDGDC CDGDC D   D", " EEE   DGD  D   GGD   D", "B   B CEEEC D   D D   D", "D   GGG   D D   D CD DC", "D   D D   D CD DC  DDD ", "CD DC D   D  DDD       ", " DDD  D   D            ", "      CD DC            ", "       DDD             ")
                    .aisle("BBBBB IKKKI IKKKI BBBBB", "AAAAA IKGKI IKGKI AAAAA", "ADDDA IDJDI IDJDI ADDDA", " DDD   DJD   DGD  CDDDC", "CDDDC  DJD   DJDC A   A", "A   A  DJD  CDJDC  EEE ", " EEE  CDJDC J   J A   A", "A   A J   J J   J  EEE ", " EEE  J   J J   J A   A", "A   A J   J B   B  EEE ", " EEE  B   B  DDD  B   B", "A   A CDDDC CDDDC D   D", " EEE   DDD  D   D D   D", "B   B CEEEC D   D D   D", "D   D D   D D   D CDDDC", "D   D D   D CDDDC  DDD ", "CDDDC D   D  DDD       ", " DDD  D   D            ", "      CDDDC            ", "       DDD             ")
                    .aisle("ABBBA IKKKI IKKKI ABBBA", "AAAAA IIGII IIGII AAAAA", "CAAAC CIIIC CIIIC CAAAC", "C   C C   C C   C CCCCC", "CCCCC C   C C   C CAAAC", "CAAAC C   C CCCCC C   C", "C   C CCCCC CJJJC CAAAC", "CAAAC CJJJC CJJJC C   C", "C   C CJJJC CJJJC CAAAC", "CAAAC CJJJC CBBBC C   C", "C   C CBBBC C   C CBBBC", "CAAAC CCCCC CCCCC CDDDC", "C   C C   C CDDDC CDDDC", "CBBBC CCCCC CDDDC CDDDC", "CDDDC CDDDC CDDDC CCCCC", "CDDDC CDDDC CCCCC      ", "CCCCC CDDDC            ", "      CDDDC            ", "      CCCCC            ", "                       ")
                    .aisle
                    .aisle
                    .aisle("                       ", "        G     G        ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ")
                    .aisle("C   C  IIIIIIIII       ", "CCCCC  IGIIIIIGI       ", "CDDDC  IIIIIIIII       ", "CDDDC  IIIIIIIII       ", "CDDDC  IIIIIIIII       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ")
                    .aisle("       IKKKKKKKI       ", "CDDDC  I       I       ", "D   D  I       I       ", "D   D  I       I       ", "D   D  IIIIIIIII       ", " DDD     I   I         ", "         I   I         ", "         I   I         ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ")
                    .aisle("       IKKKKKKKI       ", "CDDDC  I       I       ", "D   D  I       I       ", "D   D  I       I       ", "D   D  IIEIIIEII       ", " DDD    IEI IEI        ", "        IEI IEI        ", "        IHI IHI        ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ")
                    .aisle("       IKKKKKKKI       ", "CDDDC  I       I       ", "D   D  I       I       ", "D   D  I       I       ", "D   D  IIIIIIIII       ", " DDD     I   I         ", "         I   I         ", "         I   I         ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ")
                    .aisle("       IILLLLLII       ", "CDDDC  IILLMLLII       ", "D   D  IILLLLLII       ", "D   D  IIIIIIIII       ", "D   D  IIIIIIIII       ", " DDD                   ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ")
                    .aisle("                       ", "CDDDC                  ", "D   D                  ", "D   D                  ", "D   D                  ", " DDD                   ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ")
                    .aisle("C   C                  ", "CCCCC                  ", "CDNDC                  ", "CDNDC                  ", "CDDDC                  ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ")
                    .where('M', controller(blocks(definition.get())))
                    .where('I', blocks(GTBlocks.CASING_INVAR_HEATPROOF.get()))
                    .where('N', blocks(GTBlocks.HERMETIC_CASING_HV.get()))
                    .where('J', blocks(GTEBlocks.STAINLESS_EVAPORATION_CASING.get()))
                    .where('E', blocks(GTBlocks.FILTER_CASING.get()))
                    .where('L', blocks(GTBlocks.CASING_INVAR_HEATPROOF.get())
                            .or(abilities(INPUT_ENERGY).setMaxGlobalLimited(2).setPreviewCount(1))
                            .or(abilities(IMPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1))
                            .or(abilities(IMPORT_ITEMS).setMaxGlobalLimited(2).setPreviewCount(1))
                            .or(abilities(EXPORT_FLUIDS).setMaxGlobalLimited(6).setPreviewCount(1))
                            .or(abilities(EXPORT_ITEMS).setMaxGlobalLimited(2).setPreviewCount(1))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('B', blocks(GCYMBlocks.HEAT_VENT.get()))
                    .where('H', abilities(MUFFLER))
                    .where('D', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where('G', blocks(GTBlocks.CASING_STEEL_PIPE.get()))
                    .where('K', blocks(GTBlocks.FIREBOX_STEEL.get()))
                    .where('C', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.StainlessSteel)))
                    .where('A', blocks(GTBlocks.CASING_ALUMINIUM_FROSTPROOF.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_heatproof"), GTCEu.id("block/multiblock/electric_blast_furnace"))
            .register();

    MultiblockMachineDefinition DESULFURIZER = multiblock("desulfurizer", "脱硫机", CoilCrossRecipeMultiblockMachine::createInfiniteCoilParallel)
            .allRotation()
            .recipe(GTERecipeTypes.DESULFURIZER_RECIPES)
            .coilParallelTooltips()
            .customTooltipsBuilder(true, false, true)
            .block(GTBlocks.CASING_STAINLESS_CLEAN)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("CCCCCIIIIIII", "CCCCCILILILI", "CCCCCILILILI", "            ", "            ", "            ")
                    .aisle("CCCCCIIIIIII", "CGCCCXXXXXXI", "CCCCCILILILI", "  CCCILILILI", "  CCCIIIIIII", "            ")
                    .aisle("CCCCCIIIIIII", "CGGGGILILILI", "CCCCCILILILI", "  CXXXXXXXXI", "  CCCIIIIIII", "            ")
                    .aisle("CCCCCIIIIIII", "CGCPCXXXXXXI", "CCCCCILILILI", "  DDDILILILI", "  DDDIIIIIII", "  DDD       ")
                    .aisle("CCCCCIIIIIII", "CCCPCILILILI", "CCCPCILILILI", "  DPD       ", "  DPD       ", "  DDD       ")
                    .aisle("  DDD       ", "  D~D       ", "  DDD       ", "  DDD       ", "  DDD       ", "  DDD       ")
                    .where('~', controller(blocks(definition.get())))
                    .where('I', blocks(GTBlocks.CASING_INVAR_HEATPROOF.get()))
                    .where('X', blocks(GTBlocks.CASING_STEEL_PIPE.get()))
                    .where('P', blocks(GTBlocks.CASING_BRONZE_PIPE.get()))
                    .where('G', blocks(GTBlocks.HERMETIC_CASING_MV.get()))
                    .where('D', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get())
                            .setMinGlobalLimited(24)
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('L', heatingCoils())
                    .where('C', blocks(GTBlocks.CASING_STEEL_SOLID.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_clean_stainless_steel"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();

    MultiblockMachineDefinition LIQUEFACTION_FURNACE = multiblock("liquefaction_furnace", "液化炉", CoilMultiblockMachine.createCoilMachine(false, true))
            .allRotation()
            .parallelizableTooltips()
            .recipe(GTERecipeTypes.LIQUEFACTION_FURNACE_RECIPES)
            .parallelizableOverclock()
            .block(GTBlocks.CASING_INVAR_HEATPROOF)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle("AAAAA", " BBB ", " AAA ")
                    .aisle("AAAAA", "B B B", "ACCCA")
                    .aisle("AAAAS", "BBEBB", "ACFCA")
                    .aisle("AAAAA", "B B B", "ACCCA")
                    .aisle("AAAAA", " BBB ", " AAA ")
                    .where('B', heatingCoils())
                    .where('C', blocks(GTBlocks.CASING_STEEL_SOLID.get()))
                    .where('E', blocks(GTBlocks.CASING_STEEL_PIPE.get()))
                    .where('A', blocks(GTBlocks.CASING_INVAR_HEATPROOF.get())
                            .setMinGlobalLimited(20)
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('F', abilities(MUFFLER))
                    .where('S', controller(blocks(definition.get())))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_heatproof"), GTCEu.id("block/multiblock/multi_furnace"))
            .register();

    MultiblockMachineDefinition REACTION_FURNACE = multiblock("reaction_furnace", "反应炉", CoilMultiblockMachine.createCoilMachine(true, true))
            .allRotation()
            .tooltipsKey("gtceu.machine.electric_blast_furnace.tooltip.2")
            .parallelizableTooltips()
            .recipe(GTERecipeTypes.REACTION_FURNACE_RECIPES)
            .parallelizableOverclock()
            .block(GTBlocks.CASING_STEEL_SOLID)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.BACK, RelativeDirection.UP, RelativeDirection.LEFT)
                    .aisle("A   A", "ABBBA", "BBCBB", "BBBBB", " BBB ")
                    .aisle("     ", "BBBBB", "BDCDB", "BDCDB", "BAAAB")
                    .aisle("     ", "~BBBB", "CCCCC", "BCCCB", "BAFAB")
                    .aisle("     ", "BBBBB", "BDCDB", "BDCDB", "BAAAB")
                    .aisle("A   A", "ABBBA", "BBCBB", "BBBBB", " BBB ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Steel)))
                    .where('C', heatingCoils())
                    .where('D', blocks(GTBlocks.CASING_STEEL_PIPE.get()))
                    .where('B', blocks(GTBlocks.CASING_STEEL_SOLID.get())
                            .setMinGlobalLimited(20)
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('F', abilities(MUFFLER))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_solid_steel"), GTCEu.id("block/multiblock/electric_blast_furnace"))
            .register();

    MultiblockMachineDefinition MEGA_BREWER = multiblock("mega_brewer", "巨型酿造厂", CoilCrossRecipeMultiblockMachine::createCoilParallel)
            .nonYAxisRotation()
            .coilParallelTooltips()
            .customTooltipsBuilder(true, true, true)
            .recipe(GTRecipeTypes.BREWING_RECIPES)
            .recipe(GTRecipeTypes.FERMENTING_RECIPES)
            .block(GCYMBlocks.CASING_CORROSION_PROOF)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.FRONT, RelativeDirection.UP, RelativeDirection.RIGHT)
                    .aisle("     I   I     ", "     I   I     ", "     I   I     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("     IIIII     ", "     JJJJJ     ", "     JJJJJ     ", "     I   I     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("    IIIIIII    ", "    JJ   JJ    ", "    JJ G JJ    ", "     JJJJJ     ", "     I   I     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("   IIIIIIIII   ", "   JJECCCEJJ   ", "   JJECGCEJJ   ", "    JJCCCJJ    ", "     JJJJJ     ", "     I   I     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("  IIIIIIIIIII  ", "  JJE     EJJ  ", "  JJE  G  EJJ  ", "   JJ     JJ   ", "    JJJJJJJ    ", "     I   I     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("IIIIIIIIIIIIIII", "IJJE       EJJI", "IJJE   G   EJJI", " IJJ       JJI ", "  IJJJJJJJJJI  ", "   IIBBBBBII   ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle(" IIIIIIIIIIIII ", " J C       C J ", " J C   G   C J ", "  JC  CCC  CJ  ", "   JJJBBBJJJ   ", "     BBBBB     ", "      BBB      ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle(" IIIIIIIIIIIII ", " J C       C ~ ", " JGGGGGGGGGGGJ ", "  JC  CGC  CJ  ", "   JJJBGBJJJ   ", "     BBGBB     ", "      BBB      ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle(" IIIIIIIIIIIII ", " J C       C J ", " J C   G   C J ", "  JC  CCC  CJ  ", "   JJJBBBJJJ   ", "     BB BB     ", "      BBB      ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("IIIIIIIIIIIIIII", "IJJE       EJJI", "IJJE   G   EJJI", " IJJ       JJI ", "  IJJJJJJJJJI  ", "   IIBB BBII   ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("  IIIIIIIIIII  ", "  JJE     EJJ  ", "  JJE  G  EJJ  ", "   JJ     JJ   ", "    JJJJJJJ    ", "     I   I     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("   IIIIIIIII   ", "   JJECCCEJJ   ", "   JJECGCEJJ   ", "    JJCCCJJ    ", "     JJJJJ     ", "     I   I     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("    IIIIIII    ", "    JJ   JJ    ", "    JJ G JJ    ", "     JJJJJ     ", "     I   I     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("     IIIII     ", "     JJJJJ     ", "     JJJJJ     ", "     I   I     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("     I   I     ", "     I   I     ", "     I   I     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ")
                    .aisle("     AAAAA     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     CCCCC     ", "     A   A     ", "               ", "               ")
                    .aisle("   DAAAAAAAD   ", "   DBBBBBBBD   ", "   DBBEEEBBD   ", "   DBB   BBD   ", "   DBB   BBD   ", "   DBB   BBD   ", "   DBB   BBD   ", "   DBB   BBD   ", "   DBBFFFBBD   ", "   DBBFGFBBD   ", "   DBBFFFBBD   ", "   DBB   BBD   ", "   DBB   BBD   ", "   DBB   BBD   ", "   DBBFFFBBD   ", "   DBBFGFBBD   ", "   DBBFFFBBD   ", "   DBB   BBD   ", "   DCCCCCCCD   ", "     BBBBB     ", "     A   A     ", "               ")
                    .aisle("  DAAAAAAAAAD  ", "  DBBBBBBBBBD  ", "  DBBEFCFEBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF G FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF G FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DCCCCCCCCCD  ", "    BB   BB    ", "     BBBBB     ", "     A   A     ")
                    .aisle("  AAAAAAAAAAA  ", "  BBBBBBBBBBB  ", "  BBECFCFCEBB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB   G   BB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB   G   BB  ", "  BB       BB  ", "  BB       BB  ", "  CCCCCCCCCCC  ", "   BBB   BBB   ", "    BBBBBBB    ", "     A   A     ")
                    .aisle(" AAAAAAAAAAAAA ", " BBBBBBBBBBBBB ", " BBECCFCFCCEBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H G H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H G H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " CCCCCCCCCCCCC ", " ABBBEEEEEBBBA ", "  ABBBBBBBBBA  ", "   AAABBBAAA   ")
                    .aisle(" AAAAAAAAAAAAA ", " BBBBBBBBBBBBB ", " BEFFFFFFFFFEB ", " B           B ", " B           B ", " B           B ", " B           B ", " B           B ", " BF         FB ", " BF    G    FB ", " BF         FB ", " B           B ", " B           B ", " B           B ", " BF         FB ", " BF    G    FB ", " BF         FB ", " B           B ", " CCCCC   CCCCC ", "  B  EEEEE  B  ", "   BBB   BBB   ", "     BBBBB     ")
                    .aisle(" AAAAAAAAAAAAA ", " BBBBBBBBBBBBB ", " BECCCFGFCCCEB ", " B     G     B ", " B     G     B ", " B     G     B ", " B     G     B ", " B     G     B ", " BF    G    FB ", " BGGGGGGGGGGGB ", " BF    G    FB ", " B     G     B ", " B     G     B ", " B     G     B ", " BF    G    FB ", " BGGGGGGGGGGGB ", " BF    G    FB ", " B     G     B ", " CCCCC G CCCCC ", "  B  EEGEE  B  ", "   BBB G BBB   ", "     BBBBB     ")
                    .aisle(" AAAAAAAAAAAAA ", " BBBBBBBBBBBBB ", " BEFFFFFFFFFEB ", " B           B ", " B           B ", " B           B ", " B           B ", " B           B ", " BF         FB ", " BF    G    FB ", " BF         FB ", " B           B ", " B           B ", " B           B ", " BF         FB ", " BF    G    FB ", " BF         FB ", " B           B ", " CCCCC   CCCCC ", "  B  EEEEE  B  ", "   BBB   BBB   ", "     BBBBB     ")
                    .aisle(" AAAAAAAAAAAAA ", " BBBBBBBBBBBBB ", " BBECCFCFCCEBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H G H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " BBF H G H FBB ", " BBF H   H FBB ", " BBF H   H FBB ", " CCCCCCCCCCCCC ", " ABBBEEEEEBBBA ", "  ABBBBBBBBBA  ", "   AAABBBAAA   ")
                    .aisle("  AAAAAAAAAAA  ", "  BBBBBBBBBBB  ", "  BBECFCFCEBB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB   G   BB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB       BB  ", "  BB   G   BB  ", "  BB       BB  ", "  BB       BB  ", "  CCCCCCCCCCC  ", "   BBB   BBB   ", "    BBBBBBB    ", "     A   A     ")
                    .aisle("  DAAAAAAAAAD  ", "  DBBBBBBBBBD  ", "  DBBEFCFEBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF G FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DBBF G FBBD  ", "  DBBF   FBBD  ", "  DBBF   FBBD  ", "  DCCCCCCCCCD  ", "    BB   BB    ", "     BBBBB     ", "     A   A     ")
                    .aisle("   DAAAAAAAD   ", "   DBBBBBBBD   ", "   DBBEEEBBD   ", "   DBB   BBD   ", "   DBB   BBD   ", "   DBB   BBD   ", "   DBB   BBD   ", "   DBB   BBD   ", "   DBBFFFBBD   ", "   DBBFGFBBD   ", "   DBBFFFBBD   ", "   DBB   BBD   ", "   DBB   BBD   ", "   DBB   BBD   ", "   DBBFFFBBD   ", "   DBBFGFBBD   ", "   DBBFFFBBD   ", "   DBB   BBD   ", "   DCCCCCCCD   ", "     BBBBB     ", "     A   A     ", "               ")
                    .aisle("     AAAAA     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     CCCCC     ", "     A   A     ", "               ", "               ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('B', blocks(GTEBlocks.ANTIFREEZE_HEATPROOF_MACHINE_CASING.get()))
                    .where('C', blocks(GTEBlocks.DIMENSION_INJECTION_CASING.get()))
                    .where('D', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.HastelloyN)))
                    .where('E', blocks(GTEBlocks.HERMETIC_CASING_UEV.get()))
                    .where('F', heatingCoils())
                    .where('G', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('H', blocks(GTEBlocks.CONTAINMENT_FIELD_GENERATOR.get()))
                    .where('I', blocks(GTBlocks.CASING_PTFE_INERT.get()))
                    .where('J', blocks(GCYMBlocks.CASING_CORROSION_PROOF.get())
                            .setMinGlobalLimited(160)
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/corrosion_proof_casing"), GTCEu.id("block/multiblock/gcym/large_brewer"))
            .register();

    MultiblockMachineDefinition FUEL_REFINING_COMPLEX = multiblock("fuel_refining_complex", "燃料精炼复合体", CoilMultiblockMachine.createCoilMachine(false, true))
            .nonYAxisRotation()
            .parallelizableTooltips()
            .customTooltipsBuilder(false, true, false)
            .recipe(GTERecipeTypes.FUEL_REFINING_RECIPES)
            .parallelizableOverclock()
            .block(GTEBlocks.OXIDATION_RESISTANT_HASTELLOY_N_MECHANICAL_CASING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("      aaaaa      ", "       a~a       ", "       aaa       ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ")
                    .aisle("     AAAAAAA     ", "     ADDDDDA     ", "     ADDDDDA     ", "     ADDDDDA     ", "      DDDDD      ", "       DDD       ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ")
                    .aisle(" AAAAAAAAAAAAAAA ", " KKK DDDDDDD KKK ", " KKK D     D KKK ", " KKK D     D KKK ", " KKK DD   DD KKK ", " KKK  DDDDD  KKK ", "       DDD       ", "       DDD       ", "        D        ", "                 ", "                 ", "                 ", "                 ", "                 ")
                    .aisle("AAAAAAAAAAAAAAAAA", "KKKKKDDDDDDDKKKKK", "K   KD     DK   K", "K   KD     DK   K", "K   KD     DK   K", "KKKKKDDD DDDKKKKK", " FFF  DD DD  FFF ", "      DD DD      ", "      DDDDD      ", "                 ", "                 ", "                 ", "                 ", "                 ")
                    .aisle("AAAAAAAAAAAAAAAAA", "KKKKKDDDDDDDKKKKK", "K   KD     DK   K", "K   KD     DK   K", "K   KD     DK   K", "KK KKDD   DDKK KK", " LJL  D   D  LJL ", "  J   D   D   J  ", "  J   LJDJL   J  ", "  J    J J    J  ", "  JJJJJJ JJJJJJ  ", "                 ", "                 ", "                 ")
                    .aisle("AAAAAAAAAAAAAAAAA", "KKKKKDDDDDDDKKKKK", "K   KD     DK   K", "K   KD     DK   K", "K   KD     DK   K", "KKKKKDDD DDDKKKKK", " FFF  DD DD  FFF ", "      DD DD      ", "      DDDDD      ", "                 ", "                 ", "                 ", "                 ", "                 ")
                    .aisle("AAAAAAAAAAAAAAAAA", " KKK DDDDDDD KKK ", " KKK D     D KKK ", " KKK D     D KKK ", " KKK DD   DD KKK ", " KKK  DDDDD  KKK ", "       DDD       ", "       DJD       ", "        D        ", "                 ", "                 ", "                 ", "                 ", "                 ")
                    .aisle("AAAAAAAAAAAAAAAAA", "      DDDDD      ", "      DDDDD      ", "      DDDDD      ", "      DDDDD      ", "       DDD       ", "                 ", "        J        ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ")
                    .aisle("AAAAAAAAAAAAAAAAA", " DD  BBBBBBB  DD ", " DD  BBBBBBB  DD ", " DD  BBBBBBB  DD ", " DD  BBBBBBB  DD ", " DD  BBBBBBB  DD ", " DD  BBBBBBB  DD ", " DD  BBBJBBB  DD ", " DD   BCCCB   DD ", " DD   BBBBB   DD ", " DD   BBBBB   DD ", " DD    BBB    DD ", "       BBB       ", "                 ")
                    .aisle("AAAAAAAAAAAAAAAAA", "DDDDBBBBBBBBBDDDD", "DDDDBB CEC BBDDDD", "DDDDBB C C BBDDDD", "DDDDBB C C BBDDDD", "DDDDBB C C BBDDDD", "DDDDBB C C BBDDDD", "DDDDBBBCECBBBDDDD", "DDDD FBCECBF DDDD", "DDDD FBBEBBF DDDD", "DDDD FBBEBBF DDDD", "DDDD FBBEBBF DDDD", "FFFFFFBBEBBFFFFFF", "       BBB       ")
                    .aisle("AAAAAAAAAAAAAAAAA", "DDDDBBBBBBBBBDDDD", "I  DB  CEC  BD  I", "D  DB   E   BD  D", "I  DB   E   BD  I", "D  DB   E   BD  D", "I  DBG  E  GBD  I", "D  DBHB E BHBD  D", "I  D  BC CB  D  I", "D  D  B   B  D  D", "I  D  B   B  D  I", "DDDD  B   B  DDDD", "     FB E BF     ", "      BB BB      ")
                    .aisle("AAAAAAAAAAAAAAAAA", "DDDDBBBBBBBBBDDDD", "D  DB  CEC  BD  D", "D  DB       BD  D", "D  DB       BD  D", "D  DB       BD  D", "D  DBG     GBD  D", "D  DBHB E BHBD  D", "D  D  BC CB  D  D", "D  D  B   B  D  D", "D  D  B   B  D  D", "DDDD  B   B  DDDD", "     FB E BF     ", "      BB BB      ")
                    .aisle("AAAAAAAAAAAAAAAAA", "DDDDBBBBBBBBBDDDD", "D  DB  CEC  BD  D", "D  DB       BD  D", "D  DB       BD  D", "D  DB       BD  D", "D  DBG     GBD  D", "D  DBHB E BHBD  D", "D  D  BC CB  D  D", "D  D  B   B  D  D", "D  D  B   B  D  D", "DDDD  B   B  DDDD", "     FB E BF     ", "      BB BB      ")
                    .aisle("AAAAAAAAAAAAAAAAA", "DDDDBBBBBBBBBDDDD", "DDDDB  CEC  BDDDD", "DDDDB   E   BDDDD", "DDDDB   E   BDDDD", "DDDDB   E   BDDDD", "DDDDBG  E  GBDDDD", "DDDDBHB E BHBDDDD", "DDDD  BC CB  DDDD", "DDDD  B   B  DDDD", "DDDD  B   B  DDDD", "DDDD  B   B  DDDD", "FFFFFFB E BFFFFFF", "      BB BB      ")
                    .aisle(" AAAAAAAAAAAAAAA ", " DDABBBBBBBBBADD ", " DDABB CEC BBADD ", " DDABB C C BBADD ", " DD BB C C BB DD ", " DD BB C C BB DD ", " DD BB C C BB DD ", " DD BBBCECBBB DD ", " DD  FBCECBF  DD ", " DD  FBBEBBF  DD ", " DD  FBBEBBF  DD ", " DD  FBBEBBF  DD ", "     FBBEBBF     ", "       BBB       ")
                    .aisle("  AAAAAAAAAAAAA  ", "  AAABBBBBBBAAA  ", "     BBBBBBB     ", "     BBBBBBB     ", "     BBBBBBB     ", "     BBBBBBB     ", "     BBBBBBB     ", "     BBBBBBB     ", "      BCCCB      ", "      BBBBB      ", "      BBBBB      ", "       BBB       ", "       BBB       ", "                 ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.OXIDATION_RESISTANT_HASTELLOY_N_MECHANICAL_CASING.get()))
                    .where('B', blocks(GTBlocks.CASING_PTFE_INERT.get()))
                    .where('C', heatingCoils())
                    .where('D', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where('E', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('F', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.TungstenSteel)))
                    .where('G', blocks(GTBlocks.HERMETIC_CASING_LuV.get()))
                    .where('H', blocks(GCYMBlocks.ELECTROLYTIC_CELL.get()))
                    .where('I', blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where('J', blocks(GCYMBlocks.CASING_WATERTIGHT.get()))
                    .where('K', blocks(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST.get()))
                    .where('L', blocks(GTBlocks.CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where('a', blocks(GTEBlocks.OXIDATION_RESISTANT_HASTELLOY_N_MECHANICAL_CASING.get())
                            .or(GTEPredicates.autoLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/oxidation_resistant_hastelloy_n_mechanical_casing"), GTCEu.id("block/multiblock/gcym/large_brewer"))
            .register();

    MultiblockMachineDefinition MICROORGANISM_MASTER = multiblock("microorganism_master", "微生物之主", CrossRecipeMultiblockMachine::createHatchParallel)
            .nonYAxisRotation()
            .recipe(GTERecipeTypes.INCUBATOR_RECIPES)
            .tooltipsText("Ignores radiation and cleanliness requirements", "无视辐射与洁净要求")
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GTBlocks.CASING_PTFE_INERT)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.BACK, RelativeDirection.UP, RelativeDirection.LEFT)
                    .aisle("    ABBBBBA   CCC   ABBBBBA    ", "    AAAAAAA   CCC   AAAAAAA    ", "    A     A   CDC   A     A    ", "              CDC              ", "              CDC              ", "              CCC              ", "              CCC              ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("  EEEEEEEEEEEEEEEEEEEEEEEEEEE  ", "   AAAAAAAAAEECCCE AAAAAAAAA   ", "    A     A EEC CE  A     A    ", "    AAAAAAA   C C   AAAAAAA    ", "    A     A   C C   A     A    ", "              C C              ", "              CFC              ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("  EEEEEEEEEEEE E EEEEEEEEEEEE  ", "  AAAAAAAAAAAECCCEAAAAAAAAAAA  ", "   GABBBBBAG EC CE GABBBBBAG   ", "   GAHHHHHAG EC CE GAHHHHHAG   ", "   GA     AG EC CE GA     AG   ", "   GAAAAAAAG  C C  GAAAAAAAG   ", "   G       G  CFC  G       G   ", "   I       I   J   I       I   ", "      HHH      J      HHH      ", "     HHHHH     J     HHHHH     ", "     HHHHH     J     HHHHH     ", "     HHHHH           HHHHH     ", "     HHHHH           HHHHH     ", "     HHHHH           HHHHH     ", "     KKKKK           KKKKK     ", "     HHHHH           HHHHH     ", "     HHHHH           HHHHH     ", "     HHHHH           HHHHH     ", "     HHHHH           HHHHH     ", "     HHHHH           HHHHH     ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AEEEEEEEEEEEE E EEEEEEEEEEEEA ", " AAAAAAAAAAAAECCCEAAAAAAAAAAAA ", " AAAA     AAAEC CEAAA     AAAA ", "  AAAAAAAAAAAEC CEAAAAAAAAAAA  ", "  AAABBBBBAAAEC CEAAABBBBBAAA  ", "   AAA   AAA EC CE AAA   AAA   ", "             ECFCE             ", "      HHH             HHH      ", "     HHHHH           HHHHH     ", "    HH   HH         HH   HH    ", "    HH   HH    J    HH   HH    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    KK   KK         KK   KK    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HHHHHHH         HHHHHHH    ", "     HHHHH           HHHHH     ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" BEEEEEEEEEEEE E EEEEEEEEEEEEB ", " AAAAAAAAAAAAECCCEAAAAAAAAAAAA ", "   B       B EC CE B       B   ", "  AHA     AHAEC CEAHA     AHA  ", "    B     B  EC CE  B     B    ", "   AA     AA EC CE AA     AA   ", "      HHH    ECCCE    HHH      ", "     HHHHH   ECCCE   HHHHH     ", "    H     H  ECCCE  H     H    ", "   HH     HH  CCC  HH     HH   ", "   HH     HH   J   HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   KK     KK       KK     KK   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HHH   HHH       HHH   HHH   ", "    HHHHHHH         HHHHHHH    ", "     HHHHH           HHHHH     ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" BEEEEEEEEEEEE E EEEEEEEEEEEEB ", " AAAAAAAAAAAAECCCEAAAAAAAAAAAA ", "   B  L L  B EC CE B  L L  B   ", "  AHA L L AHAEC CEAHA L L AHA  ", "    B L L B  EC CE  B L L B    ", "   A  HHH  A EC CE A  HHH  A   ", "     HHHHH   EC CE   HHHHH     ", "    HHMMMHH  EC CE  HHMMMHH    ", "   HH     HH EC CE HH     HH   ", "   H       H  CCC  H       H   ", "   H       H   J   H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   K       K       K       K   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   HH     HH       HH     HH   ", "    HH   HH         HH   HH    ", "     HBBBH           HBBBH     ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" BEEEEEEEEEEEEEEEEEEEEEEEEEEEB ", " AAAAAAAAAAAAECCCEAAAAAAAAAAAA ", "   B   N   B ECFCE B   N   B   ", "  AHA  N  AHAECFCEAHA  N  AHA  ", "    B  N  B  ECFCE  B  N  B    ", "   A  HHH  A ECFCE A  HHH  A   ", "     HHHHH   ECFCE   HHHHH     ", "    HHMMMHH  ECFCE  HHMMMHH    ", "   HH     HH ECFCE HH     HH   ", "   H       H  CFC  H       H   ", "   H       H   J   H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   K       K       K       K   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   HH     HH       HH     HH   ", "    HH   HH         HH   HH    ", "     HBFBH           HBFBH     ", "       O               O       ", "       OOOOOOOOOOOOOOOOO       ", "                               ", "                               ")
                    .aisle(" BEEEEEEEEEEEE E EEEEEEEEEEEEB ", " AAAAAAAAAAAAECCCEAAAAAAAAAAAA ", "   B  L L  B ECCCE B  L L  B   ", "  AHA L L AHAECCCEAHA L L AHA  ", "    B L L B  ECCCE  B L L B    ", "   A  HHH  A ECCCE A  HHH  A   ", "     HHHHH   ECCCE   HHHHH     ", "    HHMMMHH  ECCCE  HHMMMHH    ", "   HH     HH ECCCE HH     HH   ", "   H       H  CCC  H       H   ", "   H       H   J   H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   K       K       K       K   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   HH     HH       HH     HH   ", "    HH   HH         HH   HH    ", "     HBBBH           HBBBH     ", "                               ", "               O               ", "                               ", "                               ")
                    .aisle(" BEEEEEEEEEEEE E EEEEEEEEEEEEB ", " AAAAAAAAAAAAEEEEEAAAAAAAAAAAA ", "   B       B EEEEE B       B   ", "  AHA     AHAEEEEEAHA     AHA  ", "    B     B  EEEEE  B     B    ", "   AA     AA EEEEE AA     AA   ", "      HHH    EEEEE    HHH      ", "     HHHHH   EEEEE   HHHHH     ", "    H     H  EEEEE  H     H    ", "   HH     HH       HH     HH   ", "   HH     HH   J   HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   KK     KK       KK     KK   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HHH   HHH       HHH   HHH   ", "    HHHHHHH         HHHHHHH    ", "     HHHHH           HHHHH     ", "                               ", "               O               ", "                               ", "                               ")
                    .aisle(" AEEEEEEEEEEE  E  EEEEEEEEEEEA ", " AAAAAAAAAAAA     AAAAAAAAAAAA ", " AAAA     AAA     AAA     AAAA ", "  AAAAAAAAAAA     AAAAAAAAAAA  ", "  AAABBBBBAAA     AAABBBBBAAA  ", "   AAA   AAA       AAA   AAA   ", "                               ", "      HHH             HHH      ", "     HHHHH           HHHHH     ", "    HH   HH         HH   HH    ", "    HH   HH    J    HH   HH    ", "    HH   HH    J    HH   HH    ", "    HH   HH    J    HH   HH    ", "    HH   HH         HH   HH    ", "    KK   KK         KK   KK    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HHHHHHH         HHHHHHH    ", "     HHHHH           HHHHH     ", "                               ", "                               ", "               O               ", "                               ", "                               ")
                    .aisle("  EEEEEEEEEEEEEEEEEEEEEEEEEEE  ", "  AAAAAAAAAAA LLL AAAAAAAAAAA  ", "   GABBBBBAG  LLL  GABBBBBAG   ", "   GAHHHHHAG  LLL  GAHHHHHAG   ", "   GA     AG  LLL  GA     AG   ", "   GAAAAAAAG  LLL  GAAAAAAAG   ", "   G       G  LLL  G       G   ", "   I       I  LLL  I       I   ", "      HHH     LLL     HHH      ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     KKKKK    LLL    KKKKK     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH           HHHHH     ", "                               ", "                               ", "                               ", "               O               ", "                               ", "                               ")
                    .aisle("  EEEEEEEEEE   E   EEEEEEEEEE  ", "   AAAAAAAAA LLBLL AAAAAAAAAE  ", "    A     A  LLFLL  A     A E  ", "    AAAAAAA  LLFLL  AAAAAAA    ", "    A     A  LLFLL  A     A    ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "              LLL              ", "                               ", "                               ", "                               ", "               O               ", "                               ", "                               ")
                    .aisle("  EEEEEEEE E   E   E EEEEEEEE  ", "  EEEEEEEE  LLBBBLL  EEEEEEEE  ", "  EEEEEEEE  LL   LL  EEEEEEEE  ", "   EEEEEEE  LL   LL  EEEEEEE   ", "   EEEEEEE  LL   LL  EEEEEEE   ", "    EEEEEE  LL   LL  EEEEEE    ", "    EEEEEE  LL   LL  EEEEEE    ", "     EEEEE  LL   LL  EEEEE     ", "     EEEEE  LL   LL  EEEEE     ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL F LL            ", "             LLLLL             ", "              KKK              ", "                               ", "                               ", "               O               ", "                               ", "                               ")
                    .aisle("bbE    E   E   E   E   E    EC ", "bbCCCCCCCE LLBBBBBLL ECCCCCCCC ", " bCCCCCCCE LL  N  LL ECCCCCCCC ", " bCCCCCCCE LL  N  LL ECCCCCCCC ", " bCCCCCCCE LL  N  LL ECCCCCCCC ", " CCCCCCCCE LL  N  LL ECCCCCCCC ", " bCCCCCCCE LL  I  LL ECCCCCCCC ", "     CCCCE LL  I  LL ECCCC     ", "     CCCCE LL  I  LL ECCCC     ", "     CCCC  LL     LL  CCCC     ", "           LL     LL           ", "           LL     LL           ", "           LL     LL           ", "           LL     LL           ", "           LL     LL           ", "           LL     LL           ", "           LL     LL           ", "           LL     LL           ", "           LL  F  LL           ", "            LLKFKLL            ", "             KPOPK             ", "              POP              ", "              POP              ", "              POP              ", "              KKK              ", "                               ")
                    .aisle("bCEEEEEEEEEEEEEEEEEEEEEEEEEEEC ", "~CCCCCCCCE LBBBBBBBL ECCCCCCCC ", " D     FCE LF NRN FL ECF     D ", " D     FCE LF NRN FL ECF     D ", " D     FCE LF NRN FL ECF     D ", " C     FCE LF NRN FL ECF     C ", " bFFFC FCE LF IRI FL ECF CFFFC ", "   J C FCE LF IRI FL ECF C J   ", "   J C FCE LF IRI FL ECF C J   ", "   J CCFC  LF  F  FL  CFCC J   ", "   JJJJJJJJLF  F  FLJJJJJJJJ   ", "          JLF  F  FLJ          ", "          JLF  F  FJJ          ", "           LF  F  FL           ", "           LF  F  FL           ", "           LF  F  FL           ", "           LF  F  FL           ", "           LF  F  FL           ", "           LFFFFFFFL           ", "            LLKFKLL            ", "             KPPPK             ", "               P               ", "               P               ", "               P               ", "              KKK              ", "                               ")
                    .aisle("bbE    E   E   E   E   E    EC ", "bbCCCCCCCE LLBBBBBLL ECCCCCCCC ", " bCCCCCCCE LL  N  LL ECCCCCCCC ", " bCCCCCCCE LL  N  LL ECCCCCCCC ", " bCCCCCCCE LL  N  LL ECCCCCCCC ", " CCCCCCCCE LL  N  LL ECCCCCCCC ", " bCCCCCCCE LL  I  LL ECCCCCCCC ", "     CCCCE LL  I  LL ECCCC     ", "     CCCCE LL  I  LL ECCCC     ", "     CCCC  LL     LL  CCCC     ", "           LL     LL           ", "           LL     LL           ", "           LL     LL           ", "           LL     LL           ", "           LL     LL           ", "           LL     LL           ", "           LL     LL           ", "           LL     LL           ", "           LL  F  LL           ", "            LLKFKLL            ", "             KPOPK             ", "              POP              ", "              POP              ", "              POP              ", "              KKK              ", "                               ")
                    .aisle("  EEEEEEEE E   E   E EEEEEEEE  ", "  EEEEEEEE  LLBBBLL  EEEEEEEE  ", "  EEEEEEEE  LL   LL  EEEEEEEE  ", "   EEEEEEE  LL   LL  EEEEEEE   ", "   EEEEEEE  LL   LL  EEEEEEE   ", "    EEEEEE  LL   LL  EEEEEE    ", "    EEEEEE  LL   LL  EEEEEE    ", "     EEEEE  LL   LL  EEEEE     ", "     EEEEE  LL   LL  EEEEE     ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL   LL            ", "            LL F LL            ", "             LLLLL             ", "              KKK              ", "                               ", "                               ", "               O               ", "                               ", "                               ")
                    .aisle("  EEEEEEEEEE   E   EEEEEEEEEE  ", "  EAAAAAAAAA LLBLL AAAAAAAAA   ", "  E A     A  LLFLL  A     A    ", "    AAAAAAA  LLFLL  AAAAAAA    ", "    A     A  LLFLL  A     A    ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "             LLFLL             ", "              LLL              ", "                               ", "                               ", "                               ", "               O               ", "                               ", "                               ")
                    .aisle("  EEEEEEEEEEEEEEEEEEEEEEEEEEE  ", "  AAAAAAAAAAA LLL AAAAAAAAAAA  ", "   GABBBBBAG  LLL  GABBBBBAG   ", "   GAHHHHHAG  LLL  GAHHHHHAG   ", "   GA     AG  LLL  GA     AG   ", "   GAAAAAAAG  LLL  GAAAAAAAG   ", "   G       G  LLL  G       G   ", "   I       I  LLL  I       I   ", "      HHH     LLL     HHH      ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     KKKKK    LLL    KKKKK     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH    LLL    HHHHH     ", "     HHHHH           HHHHH     ", "                               ", "                               ", "                               ", "               O               ", "                               ", "                               ")
                    .aisle(" AEEEEEEEEEEE  E  EEEEEEEEEEEA ", " AAAAAAAAAAAA     AAAAAAAAAAAA ", " AAAA     AAA     AAA     AAAA ", "  AAAAAAAAAAA     AAAAAAAAAAA  ", "  AAABBBBBAAA     AAABBBBBAAA  ", "   AAA   AAA       AAA   AAA   ", "                               ", "      HHH             HHH      ", "     HHHHH           HHHHH     ", "    HH   HH         HH   HH    ", "    HH   HH    J    HH   HH    ", "    HH   HH    J    HH   HH    ", "    HH   HH    J    HH   HH    ", "    HH   HH         HH   HH    ", "    KK   KK         KK   KK    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HHHHHHH         HHHHHHH    ", "     HHHHH           HHHHH     ", "                               ", "                               ", "               O               ", "                               ", "                               ")
                    .aisle(" BEEEEEEEEEEEE E EEEEEEEEEEEEB ", " AAAAAAAAAAAAEEEEEAAAAAAAAAAAA ", "   B       B EEEEE B       B   ", "  AHA     AHAEEEEEAHA     AHA  ", "    B     B  EEEEE  B     B    ", "   AA     AA EEEEE AA     AA   ", "      HHH    EEEEE    HHH      ", "     HHHHH   EEEEE   HHHHH     ", "    H     H  EEEEE  H     H    ", "   HH     HH       HH     HH   ", "   HH     HH   J   HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   KK     KK       KK     KK   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HHH   HHH       HHH   HHH   ", "    HHHHHHH         HHHHHHH    ", "     HHHHH           HHHHH     ", "                               ", "               O               ", "                               ", "                               ")
                    .aisle(" BEEEEEEEEEEEE E EEEEEEEEEEEEB ", " AAAAAAAAAAAAECCCEAAAAAAAAAAAA ", "   B  L L  B ECCCE B  L L  B   ", "  AHA L L AHAECCCEAHA L L AHA  ", "    B L L B  ECCCE  B L L B    ", "   A  HHH  A ECCCE A  HHH  A   ", "     HHHHH   ECCCE   HHHHH     ", "    HHMMMHH  ECCCE  HHMMMHH    ", "   HH     HH ECCCE HH     HH   ", "   H       H  CCC  H       H   ", "   H       H   J   H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   K       K       K       K   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   HH     HH       HH     HH   ", "    HH   HH         HH   HH    ", "     HBBBH           HBBBH     ", "                               ", "               O               ", "                               ", "                               ")
                    .aisle(" BEEEEEEEEEEEEEEEEEEEEEEEEEEEB ", " AAAAAAAAAAAAECCCEAAAAAAAAAAAA ", "   B   N   B ECFCE B   N   B   ", "  AHA  N  AHAECFCEAHA  N  AHA  ", "    B  N  B  ECFCE  B  N  B    ", "   A  HHH  A ECFCE A  HHH  A   ", "     HHHHH   ECFCE   HHHHH     ", "    HHMMMHH  ECFCE  HHMMMHH    ", "   HH     HH ECFCE HH     HH   ", "   H       H  CFC  H       H   ", "   H       H   J   H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   K       K       K       K   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   HH     HH       HH     HH   ", "    HH   HH         HH   HH    ", "     HBFBH           HBFBH     ", "       O               O       ", "       OOOOOOOOOOOOOOOOO       ", "                               ", "                               ")
                    .aisle(" BEEEEEEEEEEEE E EEEEEEEEEEEEB ", " AAAAAAAAAAAAECCCEAAAAAAAAAAAA ", "   B  L L  B EC CE B  L L  B   ", "  AHA L L AHAEC CEAHA L L AHA  ", "    B L L B  EC CE  B L L B    ", "   A  HHH  A EC CE A  HHH  A   ", "     HHHHH   EC CE   HHHHH     ", "    HHMMMHH  EC CE  HHMMMHH    ", "   HH     HH EC CE HH     HH   ", "   H       H  CCC  H       H   ", "   H       H   J   H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   K       K       K       K   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   H       H       H       H   ", "   HH     HH       HH     HH   ", "    HH   HH         HH   HH    ", "     HBBBH           HBBBH     ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" BEEEEEEEEEEEE E EEEEEEEEEEEEB ", " AAAAAAAAAAAAECCCEAAAAAAAAAAAA ", "   B       B EC CE B       B   ", "  AHA     AHAEC CEAHA     AHA  ", "    B     B  EC CE  B     B    ", "   AA     AA EC CE AA     AA   ", "      HHH    ECCCE    HHH      ", "     HHHHH   ECCCE   HHHHH     ", "    H     H  ECCCE  H     H    ", "   HH     HH  CCC  HH     HH   ", "   HH     HH   J   HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   KK     KK       KK     KK   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HH     HH       HH     HH   ", "   HHH   HHH       HHH   HHH   ", "    HHHHHHH         HHHHHHH    ", "     HHHHH           HHHHH     ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AEEEEEEEEEEEE E EEEEEEEEEEEEA ", " AAAAAAAAAAAAECCCEAAAAAAAAAAAA ", " AAAA     AAAEC CEAAA     AAAA ", "  AAAAAAAAAAAEC CEAAAAAAAAAAA  ", "  AAABBBBBAAAEC CEAAABBBBBAAA  ", "   AAA   AAA EC CE AAA   AAA   ", "             ECFCE             ", "      HHH             HHH      ", "     HHHHH           HHHHH     ", "    HH   HH         HH   HH    ", "    HH   HH    J    HH   HH    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    KK   KK         KK   KK    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HH   HH         HH   HH    ", "    HHHHHHH         HHHHHHH    ", "     HHHHH           HHHHH     ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("  EEEEEEEEEEEE E EEEEEEEEEEEE  ", "  AAAAAAAAAAAECCCEAAAAAAAAAAA  ", "   GABBBBBAG EC CE GABBBBBAG   ", "   GAHHHHHAG EC CE GAHHHHHAG   ", "   GA     AG EC CE GA     AG   ", "   GAAAAAAAG  C C  GAAAAAAAG   ", "   G       G  CFC  G       G   ", "   I       I   J   I       I   ", "      HHH      J      HHH      ", "     HHHHH     J     HHHHH     ", "     HHHHH     J     HHHHH     ", "     HHHHH           HHHHH     ", "     HHHHH           HHHHH     ", "     HHHHH           HHHHH     ", "     KKKKK           KKKKK     ", "     HHHHH           HHHHH     ", "     HHHHH           HHHHH     ", "     HHHHH           HHHHH     ", "     HHHHH           HHHHH     ", "     HHHHH           HHHHH     ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("  EEEEEEEEEEEEEEEEEEEEEEEEEEE  ", "   AAAAAAAAA ECCCEEAAAAAAAAA   ", "    A     A  EC CEE A     A    ", "    AAAAAAA   C C   AAAAAAA    ", "    A     A   C C   A     A    ", "              C C              ", "              CFC              ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("    ABBBBBA   CCC   ABBBBBA    ", "    AAAAAAA   CCC   AAAAAAA    ", "    A     A   CDC   A     A    ", "              CDC              ", "              CDC              ", "              CCC              ", "              CCC              ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('B', blocks(GTEBlocks.LAW_FILTER_CASING.get()))
                    .where('C', blocks(GTBlocks.CASING_PTFE_INERT.get()))
                    .where('D', blocks(GTEBlocks.HIGH_ENERGY_ULTRAVIOLET_EMITTER_CASING.get()))
                    .where('E', blocks(GTBlocks.CASING_HSSE_STURDY.get()))
                    .where('F', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('G', blocks(GTEBlocks.MOLECULAR_CASING.get()))
                    .where('H', blocks(GTBlocks.CLEANROOM_GLASS.get()))
                    .where('I', blocks(GTEBlocks.CONTAINMENT_FIELD_GENERATOR.get()))
                    .where('J', blocks(GTBlocks.CASING_STAINLESS_TURBINE.get()))
                    .where('K', blocks(GTEBlocks.DEGENERATE_RHENIUM_CONSTRAINED_CASING.get()))
                    .where('L', blocks(GTBlocks.PLASTCRETE.get()))
                    .where('M', blocks(Blocks.SPONGE))
                    .where('N', blocks(GTEBlocks.HYPER_CORE.get()))
                    .where('O', blocks(GTBlocks.CASING_TUNGSTENSTEEL_TURBINE.get()))
                    .where('P', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Naquadria)))
                    .where('R', blocks(GTEBlocks.AMPROSIUM_ACTIVE_CASING.get()))
                    .where('b', blocks(GTBlocks.CASING_PTFE_INERT.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_inert_ptfe"), GTCEu.id("block/multiblock/gcym/large_maceration_tower"))
            .register();

    MultiblockMachineDefinition LIGHTNING_ROD = multiblock("lightning_rod", "引雷针", CrossRecipeMultiblockMachine::createHatchParallel)
            .nonYAxisRotation()
            .recipe(GTERecipeTypes.ARC_GENERATOR_RECIPES)
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GCYMBlocks.CASING_NONCONDUCTING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.BACK, RelativeDirection.UP, RelativeDirection.LEFT)
                    .aisle
                    .aisle
                    .aisle("       AAAAA                 ", "        ABA                  ", "         B                   ", "         B                   ", "         B                   ", "      CCCCCCC                ", "                             ", "      CCCCCCC                ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("   BBAAAAAAAAABB             ", "   BB   ABA   BB             ", "         B                   ", "         B                   ", "         B                   ", "    CCC  B  CCC              ", "         B                   ", "    CCC  C  CCC              ", "     B       B               ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("   BAAAAAAAAAAAB  DDDDDDDDDDD", "   BB         BB  DDDDDDDDDDD", "    B         B   DDDDDDDDDDD", "    B         B   DDDEEEEEDDD", "    B         B   DDDEEEEEDDD", "   CC   DDD   CC  DDDDDDDDDDD", "       DDDDD      DDDDDDDDDDD", "   CC  DDCDD  CC             ", "     B DDDDD B               ", "        DDD                  ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("   AAAAAAAAAAAAA  DDDDDDDDDDD", "     B       B    DAAAAAAAAAD", "     B       B    DF       FD", "     B       B    DF       FD", "     B DDDDD B    DF       FD", "   C BDD D DDB C  DAAAAAAAAAD", "     BDD   DDB    DDDDDDDDDDD", "   C BDD C DDB C             ", "   BBBDD   DDBBB             ", "      DD   DD                ", "       DDDDD                 ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("   AAAAAAAAAAAAA  DDDDDDDDDDD", "      GG   GG     DAAAAAAAAAD", "           GG     DF       FD", "       DDDDD      DF       FD", "      DD D DD     DF       FD", "  CC D       D CC DAAAAAAAAAD", "     D       D    DDDDDDDDDDD", "  CC D   C   D CC            ", "     D       D               ", "     D       D               ", "      DD   DD                ", "       DDDDD                 ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("  aAAAAAAAAAAAAAA DDDDDDDDDDD", "      GGHHHGG   CCCCCCCCCCCCD", "        DDDGG   C D        CD", "      DDGDGDD   C D        CD", "     DD     DD  C D        CD", "  C  D       D  C DCCCCCCCCCD", "    DD       DD   DCDDDDDDDDD", "  C DD   C   DD CCCCFFFFFFFFF", "    DD       DD              ", "     D       D               ", "     DD     DD               ", "      DDD DDD                ", "        DDD                  ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("aaAAAAAAAAAAAAAAAADDDDDDDDDDD", "aaaa   HHHHH   AAADIIIIIIIIID", "       DDDDD      D         D", "      DGGGGGD     D         E", "     D       D    D         E", "  C D         D C DIIIIIIIIID", "    D         D   DDDIDIDIDID", "  C D    C    D C   F       F", "    D         D              ", "    D         D              ", "     D       D               ", "      DD   DD                ", "       DDDDD                 ", "        JJJ                  ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "         J                   ", "         F                   ", "         F                   ", "         F                   ", "         F                   ", "         J                   ", "                             ", "                             ", "                             ", "                             ", "         J                   ", "         F                   ", "         F                   ", "         F                   ", "         F                   ", "         J                   ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("aBAAAAAAAAAAAAAAABDDDDDDDDDDD", "~BBB   HHHHH   BBBDIIIIIIIIID", "  BB   DDDDD   BB D         D", "  BB  DDGGGDD  BB D         E", "  BB DD  J  DD BB D         E", "  CBDD   J   DDBC DIIIIIIIIID", "   BD    J    DB  DDDIDIDIDID", "  CCCCCCCJCCCCCCC   F       F", "    D    J    D              ", "    D    J    D              ", "     D   J   D               ", "      D  J  D                ", "       DDJDD                 ", "        JJJ                  ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "        JJJ                  ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "        JJJ                  ", "        FJF                  ", "        FJF                  ", "        FJF                  ", "        FJF                  ", "        JJJ                  ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "        JJJ                  ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         J                   ", "         F                   ", "         F                   ", "         F                   ")
                    .aisle("aaAAAAAAAAAAAAAAAADDDDDDDDDDD", "aaaa   HHHHH   AAADIIIIIIIIID", "       DDDDD      D         D", "      DGGGGGD     D         E", "     D       D    D         E", "  C D         D C DIIIIIIIIID", "    D         D   DDDIDIDIDID", "  C D    C    D C   F       F", "    D         D              ", "    D         D              ", "     D       D               ", "      DD   DD                ", "       DDDDD                 ", "        JJJ                  ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "         J                   ", "         F                   ", "         F                   ", "         F                   ", "         F                   ", "         J                   ", "                             ", "                             ", "                             ", "                             ", "         J                   ", "         F                   ", "         F                   ", "         F                   ", "         F                   ", "         J                   ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("  aAAAAAAAAAAAAAA DDDDDDDDDDD", "      GGHHHGG   CCCCCCCCCCCCD", "      GGDDDGG   C D        CD", "      DDGDGDD   C D        CD", "     DD     DD  C D        CD", "  C  D       D  C DCCCCCCCCCD", "    DD       DD   DCDDDDDDDDD", "  C DD   C   DD CCCCFFFFFFFFF", "    DD       DD              ", "     D       D               ", "     DD     DD               ", "      DDD DDD                ", "        DDD                  ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("   AAAAAAAAAAAAA  DDDDDDDDDDD", "      GG   GG     DAAAAAAAAAD", "      GG   GG     DF       FD", "       DDDDD      DF       FD", "      DD D DD     DF       FD", "  CC D       D CC DAAAAAAAAAD", "     D       D    DDDDDDDDDDD", "  CC D   C   D CC            ", "     D       D               ", "     D       D               ", "      DD   DD                ", "       DDDDD                 ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("   AAAAAAAAAAAAA  DDDDDDDDDDD", "     B       B    DAAAAAAAAAD", "     B       B    DF       FD", "     B       B    DF       FD", "     B DDDDD B    DF       FD", "   C BDD D DDB C  DAAAAAAAAAD", "     BDD   DDB    DDDDDDDDDDD", "   C BDD C DDB C             ", "   BBBDD   DDBBB             ", "      DD   DD                ", "       DDDDD                 ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("   BAAAAAAAAAAAB  DDDDDDDDDDD", "   BB         BB  DDDDDDDDDDD", "    B         B   DDDDDDDDDDD", "    B         B   DDDEEEEEDDD", "    B         B   DDDEEEEEDDD", "   CC   DDD   CC  DDDDDDDDDDD", "       DDDDD      DDDDDDDDDDD", "   CC  DDCDD  CC             ", "     B DDDDD B               ", "        DDD                  ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("   BBAAAAAAAAABB             ", "   BB   ABA   BB             ", "         B                   ", "         B                   ", "         B                   ", "    CCC  B  CCC              ", "         B                   ", "    CCC  C  CCC              ", "     B       B               ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("       AAAAA                 ", "        ABA                  ", "         B                   ", "         B                   ", "         B                   ", "      CCCCCCC                ", "                             ", "      CCCCCCC                ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle
                    .aisle
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GCYMBlocks.CASING_NONCONDUCTING.get()))
                    .where('B', blocks(GTEBlocks.HYPER_MECHANICAL_CASING.get()))
                    .where('C', blocks(GTEBlocks.IMPROVED_SUPERCONDUCTOR_COIL.get()))
                    .where('D', blocks(GTEBlocks.LAFIUM_MECHANICAL_CASING.get()))
                    .where('E', blocks(GTBlocks.FUSION_GLASS.get()))
                    .where('F', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Duranium)))
                    .where('G', blocks(GTBlocks.BATTERY_EMPTY_TIER_III.get()))
                    .where('H', blocks(GTEBlocks.TRANSCENDENTALLY_AMPLIFIED_MAGNETIC_CONFINEMENT_CASING.get()))
                    .where('I', blocks(GCYMBlocks.ELECTROLYTIC_CELL.get()))
                    .where('J', blocks(GTBlocks.CASING_PALLADIUM_SUBSTATION.get()))
                    .where('a', blocks(GCYMBlocks.CASING_NONCONDUCTING.get())
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .onWorking(machine -> {
                if (machine.self().getOffsetTimer() % 20 == 0 && machine.self().getLevel() instanceof ServerLevel serverLevel) {
                    LightningBolt entityToSpawn = EntityType.LIGHTNING_BOLT.create(serverLevel);
                    if (entityToSpawn != null) {
                        entityToSpawn.setPos(MachineUtils.getOffsetPos(9, 50, machine.self().getFrontFacing(), machine.self().getPos()).getCenter());
                        entityToSpawn.setVisualOnly(true);
                        serverLevel.addFreshEntity(entityToSpawn);
                    }
                }
                return true;
            })
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/nonconducting_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition MAGNETIC_ENERGY_REACTION_FURNACE = multiblock("magnetic_energy_reaction_furnace", "磁能反应炉", CoilCrossRecipeMultiblockMachine::createCoilParallel)
            .allRotation()
            .tooltipsText("Capacitor at full charge.", "电容器满负荷运作中")
            .recipe(GTRecipeTypes.ARC_FURNACE_RECIPES)
            .coilParallelTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GTEBlocks.HYPER_MECHANICAL_CASING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.BACK, RelativeDirection.UP, RelativeDirection.LEFT)
                    .aisle("A             A", "A             A", "     B   B     ", "     B   B     ", "     B   B     ", "     B   B     ", "     B   B     ", "     B   B     ", "     B   B     ", "     B   B     ", "     B   B     ", "               ", "               ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", " DDDEBEEEBEDDD ", " DDDEBEEEBEDDD ", "  DDDDDDDDDDD  ", "  DDDDDDDDDDD  ", "   DDDDDDDDD   ", "   DDDDDDDDD   ", "   DDDDDDDDD   ", "   DDBDDDBDD   ", "   DDBDDDBDD   ", "   DDDDDDDDD   ", "   DDDDDDDDD   ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", "FD   B   B   DF", "FD  GBG GBG  DF", " FD         DF ", " FDDH  H  HDDF ", "   D       D   ", "   DH  H  HD   ", "   D       D   ", "   DGBG GBGD   ", "   D B   B D   ", "   D       D   ", "   DDHEDEHDD   ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", "DD   B   B   DD", "DD  GBG GBG  DD", " DD         DD ", " DDDH  H  HDDD ", "  DD       DD  ", "  DDH  H  HDD  ", "  DD       DD  ", "  DDGBG GBGDD  ", "  DD B   B DD  ", "  DD       DD  ", "   DDHEDEHDD   ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", "FD   B   B   DF", "FD  GBG GBG  DF", " FD         DF ", " FDDH  H  HDDF ", "   D       D   ", "   DH  H  HD   ", "   D       D   ", "   DGBG GBGD   ", "   D B   B D   ", "   D       D   ", "   DDHEDEHDD   ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", "DD   B   B   DD", "DD  GBG GBG  DD", " DD         DD ", " DDDH  H  HDDD ", "  DD       DD  ", "  DDH  H  HDD  ", "  DD       DD  ", "  DDGBG GBGDD  ", "  DD B   B DD  ", "  DD       DD  ", "   DDHEDEHDD   ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", "FD   B   B   DF", "FD  GBG GBG  DF", " FD         DF ", " FDDH  H  HDDF ", "   D       D   ", "   DH  H  HD   ", "   D       D   ", "   DGBG GBGD   ", "   D B   B D   ", "   D       D   ", "   DDHEDEHDD   ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", " DDDEBEEEBEDDD ", " DDDEBEEEBEDDD ", "  DDDDDDDDDDD  ", "  DDDDDDDDDDD  ", "   DDDDDDDDD   ", "   DDDIIIDDD   ", "   DDDIJIDDD   ", "   DDBIIIBDD   ", "   DDBDDDBDD   ", "   DDDDDDDDD   ", "   DDDDDDDDD   ", "               ")
                    .aisle("AKK         KKA", "AKK         KKA", " KK  B   B  KK ", "     B   B     ", "     B   B     ", "     BI IB     ", "     B   B     ", "    IB   BI    ", "     B J B     ", "    IB   BI    ", "     B   B     ", "      I I      ", "               ", "               ")
                    .aisle("               ", "               ", "               ", "               ", "      I I      ", "      I I      ", "               ", "   II     II   ", "       J       ", "   II     II   ", "               ", "      I I      ", "      I I      ", "               ")
                    .aisle(" LLLLLLLLLLLLL ", "               ", "               ", "      I I      ", "      I I      ", "               ", "               ", "  II       II  ", "       J       ", "  II       II  ", "               ", "               ", "      I I      ", "      I I      ")
                    .aisle(" LMMMMMMMMMMML ", "  MMMMMMMMMMM  ", "               ", "      I I      ", "               ", "               ", "               ", "  I         I  ", "       J       ", "  I         I  ", "               ", "               ", "               ", "      I I      ")
                    .aisle(" LMEEEEEEEEEML ", "  a         a  ", "               ", "      I I      ", "               ", "               ", "               ", "  I         I  ", "       J       ", "  I         I  ", "               ", "               ", "               ", "      I I      ")
                    .aisle(" LMNKKKKKKKNML ", "  a         a  ", "               ", "      I I      ", "               ", "               ", "      OOO      ", "  I  OOOOO  I  ", "     OOJOO     ", "  I  OOOOO  I  ", "      OOO      ", "               ", "               ", "      I I      ")
                    .aisle(" LMEEEEEEEEEML ", "  a         a  ", "               ", "      I I      ", "      IOI      ", "      OOO      ", "     OOOOO     ", "  IIOOOOOOOII  ", "    OOOJOOO    ", "  IIOOOOOOOII  ", "     OOOOO     ", "      OOO      ", "      IOI      ", "      I I      ")
                    .aisle(" aMNMMMMMMMNML ", " aM         a  ", " aa            ", "               ", "     OOOOO     ", "     OOOOO     ", "    OO   OO    ", "    OO   OO    ", "    OO J OO    ", "    OO   OO    ", "    OO   OO    ", "     OOOOO     ", "     OOOOO     ", "               ")
                    .aisle(" aMEEEEEEEEEML ", " ~M         a  ", " aa            ", "               ", "     OOOOO     ", "     OOOOO     ", "    OO   OO    ", "    OO   OO    ", "    OO J OO    ", "    OO   OO    ", "    OO   OO    ", "     OOOOO     ", "     OOOOO     ", "               ")
                    .aisle(" aMNMMMMMMMNML ", " aM         a  ", " aa            ", "               ", "     OOOOO     ", "     OOOOO     ", "    OO   OO    ", "    OO   OO    ", "    OO J OO    ", "    OO   OO    ", "    OO   OO    ", "     OOOOO     ", "     OOOOO     ", "               ")
                    .aisle(" LMEEEEEEEEEML ", "  a         a  ", "               ", "      I I      ", "      IOI      ", "      OOO      ", "     OOOOO     ", "  IIOOOOOOOII  ", "    OOOJOOO    ", "  IIOOOOOOOII  ", "     OOOOO     ", "      OOO      ", "      IOI      ", "      I I      ")
                    .aisle(" LMNKKKKKKKNML ", "  a         a  ", "               ", "      I I      ", "               ", "               ", "      OOO      ", "  I  OOOOO  I  ", "     OOJOO     ", "  I  OOOOO  I  ", "      OOO      ", "               ", "               ", "      I I      ")
                    .aisle(" LMEEEEEEEEEML ", "  a         a  ", "               ", "      I I      ", "               ", "               ", "               ", "  I         I  ", "       J       ", "  I         I  ", "               ", "               ", "               ", "      I I      ")
                    .aisle(" LMMMMMMMMMMML ", "  MMMMMMMMMMM  ", "               ", "      I I      ", "               ", "               ", "               ", "  I         I  ", "       J       ", "  I         I  ", "               ", "               ", "               ", "      I I      ")
                    .aisle(" LLLLLLLLLLLLL ", "               ", "               ", "      I I      ", "      I I      ", "               ", "               ", "  II       II  ", "       J       ", "  II       II  ", "               ", "               ", "      I I      ", "      I I      ")
                    .aisle("               ", "               ", "               ", "               ", "      I I      ", "      I I      ", "               ", "   II     II   ", "       J       ", "   II     II   ", "               ", "      I I      ", "      I I      ", "               ")
                    .aisle("AKK         KKA", "AKK         KKA", " KK  B   B  KK ", "     B   B     ", "     B   B     ", "     BI IB     ", "     B   B     ", "    IB   BI    ", "     B J B     ", "    IB   BI    ", "     B   B     ", "      I I      ", "               ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", " DDDEBEEEBEDDD ", " DDDEBEEEBEDDD ", "  DDDDDDDDDDD  ", "  DDDDDDDDDDD  ", "   DDDDDDDDD   ", "   DDDIIIDDD   ", "   DDDIJIDDD   ", "   DDBIIIBDD   ", "   DDBDDDBDD   ", "   DDDDDDDDD   ", "   DDDDDDDDD   ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", "FD   B   B   DF", "FD  GBG GBG  DF", " FD         DF ", " FDDH  H  HDDF ", "   D       D   ", "   DH  H  HD   ", "   D       D   ", "   DGBG GBGD   ", "   D B   B D   ", "   D       D   ", "   DDHEDEHDD   ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", "DD   B   B   DD", "DD  GBG GBG  DD", " DD         DD ", " DDDH  H  HDDD ", "  DD       DD  ", "  DDH  H  HDD  ", "  DD       DD  ", "  DDGBG GBGDD  ", "  DD B   B DD  ", "  DD       DD  ", "   DDHEDEHDD   ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", "FD   B   B   DF", "FD  GBG GBG  DF", " FD         DF ", " FDDH  H  HDDF ", "   D       D   ", "   DH  H  HD   ", "   D       D   ", "   DGBG GBGD   ", "   D B   B D   ", "   D       D   ", "   DDHEDEHDD   ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", "DD   B   B   DD", "DD  GBG GBG  DD", " DD         DD ", " DDDH  H  HDDD ", "  DD       DD  ", "  DDH  H  HDD  ", "  DD       DD  ", "  DDGBG GBGDD  ", "  DD B   B DD  ", "  DD       DD  ", "   DDHEDEHDD   ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", "FD   B   B   DF", "FD  GBG GBG  DF", " FD         DF ", " FDDH  H  HDDF ", "   D       D   ", "   DH  H  HD   ", "   D       D   ", "   DGBG GBGD   ", "   D B   B D   ", "   D       D   ", "   DDHEDEHDD   ", "               ")
                    .aisle("CCCCCCCCCCCCCCC", "ADDDDDDDDDDDDDA", " DDDEBEEEBEDDD ", " DDDEBEEEBEDDD ", "  DDDDDDDDDDD  ", "  DDDDDDDDDDD  ", "   DDDDDDDDD   ", "   DDDDDDDDD   ", "   DDDDDDDDD   ", "   DDBDDDBDD   ", "   DDBDDDBDD   ", "   DDDDDDDDD   ", "   DDDDDDDDD   ", "               ")
                    .aisle("A             A", "A             A", "     B   B     ", "     B   B     ", "     B   B     ", "     B   B     ", "     B   B     ", "     B   B     ", "     B   B     ", "     B   B     ", "     B   B     ", "               ", "               ", "               ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTBlocks.CASING_TUNGSTENSTEEL_TURBINE.get()))
                    .where('B', heatingCoils())
                    .where('C', blocks(GTEBlocks.HIGH_STRENGTH_CONCRETE.get()))
                    .where('D', blocks(GTEBlocks.LAFIUM_MECHANICAL_CASING.get()))
                    .where('E', blocks(GCYMBlocks.ELECTROLYTIC_CELL.get()))
                    .where('F', blocks(GTEBlocks.MAGTECH_CASING.get()))
                    .where('G', blocks(GTEBlocks.TRANSCENDENTALLY_AMPLIFIED_MAGNETIC_CONFINEMENT_CASING.get()))
                    .where('H', blocks(ChemicalHelper.getBlock(TagPrefix.block, GTMaterials.NeodymiumMagnetic)))
                    .where('I', blocks(GTBlocks.CASING_PALLADIUM_SUBSTATION.get()))
                    .where('J', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('K', blocks(GTBlocks.BATTERY_EMPTY_TIER_III.get()))
                    .where('L', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Neutronium)))
                    .where('M', blocks(GCYMBlocks.CASING_NONCONDUCTING.get()))
                    .where('N', blocks(GTEBlocks.RESTRAINT_DEVICE.get()))
                    .where('O', blocks(GTBlocks.FUSION_GLASS.get()))
                    .where('a', blocks(GCYMBlocks.CASING_NONCONDUCTING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/nonconducting_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition HIGH_ENERGY_LASER_LATHE = multiblock("high_energy_laser_lathe", "高能激光车床", CrossRecipeMultiblockMachine::createHatchParallel)
            .allRotation()
            .recipe(GTRecipeTypes.LATHE_RECIPES)
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GTEBlocks.MOLECULAR_CASING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.BACK, RelativeDirection.UP, RelativeDirection.LEFT)
                    .aisle("AAAAAAAAAAAAAAAAA", "AA   AAAAAAA   AA", "AA  AABAAABAA  AA", "AA AA BAAAB AA AA", "AAAA  BAAAB  AAAA", "AAA   BAAAB   AAA", "AABBBBBAAABBBBBAA", "AAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAA", "AABBBBBAAABBBBBAA", " AA   BAAAB   AA ", "  AA  BAAAB  AA  ", "   AA BAAAB AA   ", "    AABAAABAA    ", "     AAAAAAA     ")
                    .aisle("AAAAAAAAAAAAAAAAA", "AA   AAAAAAA   AA", "AA  AACAAACAA  AA", "AA AACCAAACCAA AA", "AAAACCCAAACCCAAAA", "AAACCCCAAACCCCAAA", "AACCCCCAAACCCCCAA", "AAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAA", "AACCCCCAAACCCCCAA", " AACCCCAAACCCCAA ", "  AACCCAAACCCAA  ", "   AACCAAACCAA   ", "    AABAAABAA    ", "     AAAAAAA     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    DDDDDDD    A", "   DDDEEEEEDDD   ", "   DDEEEEEEEDD   ", "  DDEEEEFEEEEDD  ", " DDEEGGGEGGGEEDD ", " DEEEGGGEGGGEEED ", " DEEEGGGEGGGEEED ", " DEEFEEEHEEEFEED ", " DEEEGGGEGGGEEED ", " DEEEGGGEGGGEEED ", " DDEEGGGEGGGEEDD ", "  DDEEEEFEEEEDD  ", "   DDEEEEEEEDD   ", "   DDDEEEEEDDD   ", "     DDDDDDD     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " II            I ", " II            I ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " II            I ", " II            I ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " II            I ", " II            I ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " II            I ", " II            I ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " II            I ", " II            I ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " II            I ", " II            I ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   LII     IIL   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " II            I ", " II            I ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   LII     IIL   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   LII     IIL   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " II            I ", " II            I ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   LII     IIL   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   LII     IIL   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " II            I ", " II            I ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   LII     IIL   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " II            I ", " II            I ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   M   KJ D ", " II            I ", " II            I ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " II            I ", " II            I ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAAAAAAAAAAAAAAAA", "A    IIDDDII    A", "   LII GGG IIL   ", "   II  GJG  II   ", "  II   GKG   II  ", " EI           IE ", " E             E ", " DGGG       GGGD ", " aGJK       KJGD ", " DGGG       GGGD ", " EI            E ", " EI           IE ", "  II   GKG   II  ", "   II  GJG  II   ", "   LII GGG IIL   ", "     IIDDDII     ")
                    .aisle("AAAAAAAAAAAAAAAAA", "A    EEDDDEE    A", "   LEE NMN EEL   ", "   EE  MJM  EE   ", "  EE   NON   EE  ", " EE     O     EE ", " E             E ", " DNMN       NMND ", " ~MJOO     OOJMD ", " DNMN       NMND ", " E             E ", " EE     O     EE ", "  EE   NON   EE  ", "   EE  MJM  EE   ", "   LEE NMN EEL   ", "     EEDDDEE     ")
                    .aisle("AAAAAAAAAAAAAAAAA", "A    IIDDDII    A", "   LII GGG IIL   ", "   II  GJG  II   ", "  II   GKG   II  ", " EI           IE ", " E             E ", " DGGG       GGGD ", " aGJK       KJGD ", " DGGG       GGGD ", " E            IE ", " EI           IE ", "  II   GKG   II  ", "   II  GJG  II   ", "   LII GGG IIL   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " I            II ", " I            II ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   M   KJ D ", " I            II ", " I            II ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " I            II ", " I            II ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   LII     IIL   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " I            II ", " I            II ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   LII     IIL   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   LII     IIL   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " I            II ", " I            II ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   LII     IIL   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   LII     IIL   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " I            II ", " I            II ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   LII     IIL   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " I            II ", " I            II ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " I            II ", " I            II ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " I            II ", " I            II ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " I            II ", " I            II ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " I            II ", " I            II ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    IIDDDII    A", "   DII     IID   ", "   II   J   II   ", "  II    K    II  ", " II           II ", " I             I ", " I             I ", " a JK   H   KJ D ", " I            II ", " I            II ", " II           II ", "  II    K    II  ", "   II   J   II   ", "   DII     IID   ", "     IIDDDII     ")
                    .aisle("AAABBBAAAAABBBAAA", "A    DDDDDDD    A", "   DDDEEEEEDDD   ", "   DDEEEEEEEDD   ", "  DDEEEEFEEEEDD  ", " DDEEGGGEGGGEEDD ", " DEEEGGGEGGGEEED ", " DEEEGGGEGGGEEED ", " DEEFEEEHEEEFEED ", " DEEEGGGEGGGEEED ", " DEEEGGGEGGGEEED ", " DDEEGGGEGGGEEDD ", "  DDEEEEFEEEEDD  ", "   DDEEEEEEEDD   ", "   DDDEEEEEDDD   ", "     DDDDDDD     ")
                    .aisle("AAAAAAAAAAAAAAAAA", "AA   AAAAAAA   AA", "AA  AACAAACAA  AA", "AA AACCAAACCAA AA", "AAAACCCAAACCCAAAA", "AAACCCCAAACCCCAAA", "AACCCCCAAACCCCCAA", "AAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAA", "AACCCCCAAACCCCCAA", " AACCCCAAACCCCAA ", "  AACCCAAACCCAA  ", "   AACCAAACCAA   ", "    AABAAABAA    ", "     AAAAAAA     ")
                    .aisle("AAAAAAAAAAAAAAAAA", "AA   AAAAAAA   AA", "AA  AABAAABAA  AA", "AA AA BAAAB AA AA", "AAAA  BAAAB  AAAA", "AAA   BAAAB   AAA", "AABBBBBAAABBBBBAA", "AAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAA", "AABBBBBAAABBBBBAA", " AA   BAAAB   AA ", "  AA  BAAAB  AA  ", "   AA BAAAB AA   ", "    AABAAABAA    ", "     AAAAAAA     ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('B', blocks(GTBlocks.FILTER_CASING.get()))
                    .where('C', blocks(GCYMBlocks.ELECTROLYTIC_CELL.get()))
                    .where('D', blocks(GTEBlocks.MOLECULAR_CASING.get()))
                    .where('E', blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where('F', blocks(GTEBlocks.LASER_COOLING_CASING.get()))
                    .where('G', blocks(GCYMBlocks.CASING_LASER_SAFE_ENGRAVING.get()))
                    .where('H', blocks(GTEBlocks.AMPROSIUM_CASING.get()))
                    .where('I', blocks(GTBlocks.FUSION_GLASS.get()))
                    .where('J', blocks(GTEBlocks.LASER_CASING.get()))
                    .where('K', blocks(GTEBlocks.ELECTRON_PERMEABLE_AMPROSIUM_COATED_GLASS.get()))
                    .where('L', blocks(GTEBlocks.CONTAINMENT_FIELD_GENERATOR.get()))
                    .where('M', blocks(GTEBlocks.AMPROSIUM_GEARBOX.get()))
                    .where('N', blocks(GTEBlocks.AMPROSIUM_ACTIVE_CASING.get()))
                    .where('O', blocks(ChemicalHelper.getBlock(TagPrefix.block, GTMaterials.Ruby)))
                    .where('a', blocks(GTEBlocks.MOLECULAR_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/molecular_casing"), GTCEu.id("block/multiblock/gcym/large_cutter"))
            .register();

    MultiblockMachineDefinition NEUTRONIUM_WIRE_CUTTING = multiblock("neutronium_wire_cutting", "中子丝线切割", CrossRecipeMultiblockMachine::createHatchParallel)
            .allRotation()
            .recipe(GTRecipeTypes.CUTTER_RECIPES)
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GTBlocks.HIGH_POWER_CASING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.BACK, RelativeDirection.UP, RelativeDirection.LEFT)
                    .aisle("AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "     QQQQQ     ", "     QQQQQ     ", "     QQQQQ     ", "     QQQQQ     ", "     QQQQQ     ", "     QQQQQ     ", "     QQQQQ     ", "     QQQQQ     ", "     QQQQQ     ", "     QQQQQ     ", "     QQQQQ     ", "     QQQQQ     ")
                    .aisle("AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "     QQQQQ     ", "     Q   Q     ", "     Q   Q     ", "     Q   Q     ", "     Q   Q     ", "     Q   Q     ", "     Q   Q     ", "     Q   Q     ", "     Q   Q     ", "     Q   Q     ", "     Q   Q     ", "     QQQQQ     ")
                    .aisle("AAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBB", "aSG  QQQQQ  GS ", "aSG  QQQQQ  GS ", "aSG  QQQQQ  GS ", "aSG  QQQQQ  GS ", " SG  QQQQQ  GS ", " SG  QQQQQ  GS ", " SG  QQQQQ  GS ", " SG  QQQQQ  GS ", " SG  QQQQQ  GS ", "  G  QQQQQ  G  ", "     Q   Q     ", "     QQQQQ     ")
                    .aisle("AAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBB", "aBBBBBBBBBBBBB ", "~BB         BB ", "aBBBBBBBBBBBBB ", "aBB         BB ", " BBBBBBBBBBBBB ", " BB         BB ", " BBBBBBBBBBBBB ", " BB         BB ", " BBBBBBBBBBBBB ", "  GQQQQQQQQQG  ", "   QQQ   QQQ   ", "   QQQQQQQQQ   ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", "aBBKKKKKKKKKBB ", "aBBKKKKKKKKKBB ", "aBBKKKKKKKKKBB ", "aBBKKKKKKKKKBB ", " BBKKKKKKKKKBB ", " BBKKKKKKKKKBB ", " BBKKKKKKKKKBB ", " BBKKKKKKKKKBB ", " BBBBBBBBBBBBB ", "  GQQQQQQQQQG  ", "   Q       Q   ", "   QQQQQQQQQ   ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBHO     OHBB ", "  BLO     OLB  ", "  BLMNNNNNMLB  ", "  BLO     OLB  ", "  BLMNNNNNMLB  ", "  BLO     OLB  ", "  BLMNNNNNMLB  ", "  BHO J J OHB  ", "  BBBBBBBBBBB  ", "  GQQQQQQQQQG  ", "   QQPQQQPQQ   ", "   QQQQQQQQQ   ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  KH  J J  HK  ", "  BBBBBBBBBBB  ", "  GDDDDDDDDDG  ", "     P   P     ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  KH  J J  HK  ", "  BBBBBBBBBBB  ", "  GDFFFFFFDDG  ", "     P   P     ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", " BK         KB ", " BK         KB ", " BK         KB ", " BK         KB ", " BK         KB ", " BK         KB ", " BKH  J J  HKB ", " BBBBBBBBBBBBB ", "  GDFFFFFFDDG  ", "     P   P     ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBHOAAAAAOHBB ", "  KLO     OLK  ", "  KLMNNNNNMLK  ", "  KLO     OLK  ", "  KLMNNNNNMLK  ", "  KLO     OLK  ", "  KLMNNNNNMLK  ", "  KHO J J OHK  ", "  BBBBBBBBBBB  ", "  GDDDDDDDDDG  ", "     P   P     ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  KH PJ JP HK  ", "  BBBPBBBPBBB  ", "  G  P   P  G  ", "     P   P     ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", " BK         KB ", " BK         KB ", " BK         KB ", " BK         KB ", " BK         KB ", " BK         KB ", " BKH  J J  HKB ", " BBBBBBBBBBBBB ", "  G         G  ", "     P   P     ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  KH  J J  HK  ", "  BBBBBBBBBBB  ", "  G         G  ", "     P   P     ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  KH  J J  HK  ", "  BBBBBBBBBBB  ", "  GDDDDDDDDDG  ", "     P   P     ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  KH  J J  HK  ", "  BBBBBBBBBBB  ", "  GDFFFFFFDDG  ", "     P   P     ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  KH  J J  HK  ", "  BBBBBBBBBBB  ", "  GDFFFFFFDDG  ", "     P   P     ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  KH  J J  HK  ", "  BBBBBBBBBBB  ", "  GDDDDDDDDDG  ", "     P   P     ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  KH PJ JP HK  ", "  BBBPBBBPBBB  ", "  G  P   P  G  ", "     P   P     ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", " BK         KB ", " BK         KB ", " BK         KB ", " BK         KB ", " BK         KB ", " BK         KB ", " BKH  J J  HKB ", " BBBBBBBBBBBBB ", "  G         G  ", "               ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBHLLLLLLLHBB ", "  K   M M   K  ", "  K   N N   K  ", "  K   N N   K  ", "  K   N N   K  ", "  K   N N   K  ", "  K OOMOMOO K  ", "  KHLLLLLLLHK  ", "  BBBBBBBBBBB  ", "  G         G  ", "               ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  KH  J J  HK  ", "  BBBBBBBBBBB  ", "  GDDDDDDDDDG  ", "               ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", " BK         KB ", " BK         KB ", " BK         KB ", " BK         KB ", " BK         KB ", " BK         KB ", " BKH  J J  HKB ", " BBBBBBBBBBBBB ", "  GDFFFFFFDDG  ", "               ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH AAAAA HBB ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  KH  J J  HK  ", "  BBBBBBBBBBB  ", "  GDFFFFFFDDG  ", "               ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBH       HBB ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  K         K  ", "  KH  J J  HK  ", "  BBBBBBBBBBB  ", "  GDDDDDDDDDG  ", "               ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " BBHBBBBBBBHBB ", " BBBBBBBBBBBBB ", " BBBBBBBBBBBBB ", " BBBBBBBBBBBBB ", " BBBBBBBBBBBBB ", " BBBBBBBBBBBBB ", " BBBBBBBBBBBBB ", " BBHBBBBBBBHBB ", " BBBBBBBBBBBBB ", "  G         G  ", "  G         G  ", "               ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " C H       H C ", " CJJJJJJJJJJJC ", " C           C ", " C           C ", " C           C ", " C           C ", " CJJJJJJJJJJJC ", " C H       H C ", " CCCCCCCCCCCCC ", " CFFFFFFFFFFFC ", " CCCCCCCCCCCCC ", "  G         G  ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", "GC H       H CG", "GC           CG", "GC           CG", "GC           CG", "GC           CG", "GC           CG", "GC           CG", "GC H       H CG", "GCCCCCCCCCCCCCG", "GC           CG", "GCIIIIIIIIIIICG", " GIIIIIIIIIIIG ")
                    .aisle("               ", "BBBBBBBBBBBBBBB", " C H       H C ", " C           C ", " C           C ", " C           C ", " F           F ", " F           F ", " F           F ", " C H       H C ", " CCCCCCCCCCCCC ", " C           C ", " CIIIIIIIIIIIC ", "  IIIIIIIIIII  ")
                    .aisle("AAA         AAA", "BBBBBBBBBBBBBBB", " C H       H C ", " CJJJJJJJJJJJC ", " C           C ", " C           C ", " F           F ", " F           F ", " FJJJJJJJJJJJF ", " C H       H C ", " CCCCCCCCCCCCC ", " C           C ", " CIIIIIIIIIIIC ", "  IIIIIIIIIII  ")
                    .aisle("AAA         AAA", "BBBBBBBBBBBBBBB", "GC H       H CG", "GC H       H CG", "GC H       H CG", "GC H       H CG", "GC H       H CG", "GC H       H CG", "GC H       H CG", "GC H       H CG", "GCCCCCCCCCCCCCG", "GC           CG", "GCIIIIIIIIIIICG", " GIIIIIIIIIIIG ")
                    .aisle("AAA         AAA", "BBBBBBBBBBBBBBB", " CCCCCCCCCCCCC ", " CCCCCCCCCCCCC ", " CCDDDDCDDDDCC ", " CCDDDDCDDDDCC ", " CCEEEECEEEECC ", " CCDDDDCDDDDCC ", " CCDDDDCDDDDCC ", " CCCCCCCCCCCCC ", " CCCCCCCCCCCCC ", " CFFFFFFFFFFFC ", " CCCCCCCCCCCCC ", "               ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.HIGH_PRESSURE_RESISTANT_CASING.get()))
                    .where('B', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get()))
                    .where('C', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('D', blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where('E', blocks(GTBlocks.FUSION_GLASS.get()))
                    .where('F', blocks(GTBlocks.FILTER_CASING.get()))
                    .where('G', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.HastelloyN)))
                    .where('H', blocks(GTEBlocks.AMPROSIUM_GEARBOX.get()))
                    .where('I', blocks(GTEBlocks.PRESSURE_CONTAINMENT_CASING.get()))
                    .where('J', blocks(GTEBlocks.AMPROSIUM_ACTIVE_CASING.get()))
                    .where('K', blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where('L', blocks(GTEBlocks.AMPROSIUM_CASING.get()))
                    .where('M', blocks(GTEBlocks.EXTREME_DENSITY_CASING.get()))
                    .where('N', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Neutronium)))
                    .where('O', blocks(GTEBlocks.CONTAINMENT_FIELD_GENERATOR.get()))
                    .where('P', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('Q', blocks(GTBlocks.CASING_STAINLESS_TURBINE.get()))
                    .where('S', blocks(GCYMBlocks.HEAT_VENT.get()))
                    .where('a', blocks(GTBlocks.HIGH_POWER_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/hpca/high_power_casing"), GTCEu.id("block/multiblock/gcym/large_cutter"))
            .register();

    MultiblockMachineDefinition NANO_PHAGOCYTOSIS_PLANT = multiblock("nano_phagocytosis_plant", "纳米吞噬厂", CrossRecipeMultiblockMachine::createHatchParallel)
            .allRotation()
            .tooltipsText("Use nanitess to mercilessly tear everything apart.", "使用纳米蜂群无情的撕碎一切")
            .recipe(GTRecipeTypes.MACERATOR_RECIPES)
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle(" EEEEEEEEEEEEEEEEEEE ", "  E E E E E E E E E  ", "  E E E E E E E E E  ", "  E E E E E E E E E  ", "  E E E E E E E E E  ", "  E E E E E E E E E  ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "OOOOOOOOOOOOOOOOOOOOO", "OOOBBBBBBZZZBBBBBBOOO", "OOOBBBBBBZZZBBBBBBOOO", " OOBBBBBBZZZBBBBBBOO ", "  EEEEEEEEEEEEEEEEE  ", "   E  E   E   E  E   ", "                     ", "         X X         ", "         X X         ", "       XXXXXXX       ", "         X X         ", "       XXXXXXX       ", "         X X         ", "         X X         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "OO                 OO", "OO                 OO", "OO                 OO", " O                 O ", " OOOOOOOOOOOOOOOOOOO ", "   EHHE   E   EHHE   ", "         XYX         ", "       YYYYYYY       ", "       YYYYYYY       ", "      XYYFFFYYX      ", "      YYYFFFYYY      ", "      XYYFFFYYX      ", "       YYYYYYY       ", "       YYYYYYY       ", "         XYX         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "OO      WLLLW      OO", "OO      WLLLW      OO", "OO      WLLLW      OO", " O  WWWWWLLLWWWWW  O ", " OOOOOOOOOOOOOOOOOOO ", "   HHHHH XYX HHHHH   ", "   HHHH YYYYY HHHH   ", "       Y     Y       ", "      Y J   J Y      ", "     XY       YX     ", "     YY   J   YY     ", "     XY       YX     ", "      Y J   J Y      ", "       Y     Y       ", "        YYYYY        ", "         XYX         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "OOOO             OOO ", "OOOO             OOO ", "OOOO             OOO ", " OOOW           WOOO ", "   OOOOOOOOOOOOOOO   ", "   HHHHHQQQQQHHHHH   ", "   HHHHQQ M QQHHHH   ", "   HHHQQ     QQHHH   ", "     QQ J   J QQ     ", "     Q   UUU   Q     ", "     Q   UJU   Q     ", "     Q   UUU   Q     ", "     QQ J   J QQ     ", "      QQ     QQ      ", "       QQ M QQ       ", "        QQQQQ        ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "AAAO             OAAA", "AAAO             OAAA", " AAO             OAA ", "   OW           WO   ", "   OWOOOOOOOOOOOWO   ", "   HW  HQQQQQH  WH   ", "   HW HQQ M QQH WH   ", "   HWHQQ     QQHWH   ", "    WQQ J   J QQW    ", "    WQ         QW    ", "    WV    J    VW    ", "    WQ         QW    ", "    WQQ J   J QQW    ", "    WWWW     WWWW    ", "       QQ M QQ       ", "        QQQQQ        ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "A RO             OR A", "APPPPPPPPPPPPPPPPPPPA", " PAO             OAP ", " PPPPPPPPLLLPPPPPPPP ", "   OOOOOOOOOOOOOOO   ", "   H   HQQQQQH   H   ", "   H  HQQ M QQH  H   ", "   HHHQQ     QQHHH   ", "    HQQ J   J QQH    ", "     Q         Q     ", "     V    J    V     ", "     Q         Q     ", "     QQ J   J QQ     ", "      QQ     QQ      ", "       QQ M QQ       ", "        QQQQQ        ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "A RO             OR A", "A  O      P      O  A", "AAAO             OAAA", "  SOTTTTTTTTTTTTTOS  ", "  SOOOOOOOOOOOOOOOS  ", "   H   HQQQQQH   H   ", "   H  HQQ M QQH  H   ", "   HHHQQ     QQHHH   ", "    HQQ J   J QQH    ", "     Q         Q     ", "     V    J    V     ", "     Q         Q     ", "     QQ J   J QQ     ", "      QQ     QQ      ", "       QQ M QQ       ", "        QQQQQ        ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "A RO             OR A", "A  O      P      O  A", "AAAO             OAAA", "   V             V   ", "   OOOOOOOOOOOOOOO   ", "   H   HQQQQQH   H   ", "   H  HQQ M QQH  H   ", "   HHHQQ     QQHHH   ", "    HQQ J   J QQH    ", "     Q         Q     ", "     V    J    V     ", "     Q         Q     ", "     QQ J   J QQ     ", "      QQ     QQ      ", "       QQ M QQ       ", "        QQQQQ        ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "A RO             OR A", "A  O      P      O  A", "AAAO             OAAA", "  SOTTTTTTTTTTTTTOS  ", "  SOOOOOOOOOOOOOOOS  ", "   H   HQQQQQH   H   ", "   H  HQQ M QQH  H   ", "   HHHQQ     QQHHH   ", "    HQQ J   J QQH    ", "     Q         Q     ", "     V    J    V     ", "     Q         Q     ", "     QQ J   J QQ     ", "      QQ     QQ      ", "       QQ M QQ       ", "        QQQQQ        ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "A RO             OR A", "APPPPPPPPPPPPPPPPPPPA", " PAO             OAP ", " PPPPPPPPLLLPPPPPPPP ", "   OOOOOOOOOOOOOOO   ", "   H   HQQQQQH   H   ", "   H  HQQ M QQH  H   ", "   HHHQQ     QQHHH   ", "    HQQ J   J QQH    ", "     Q         Q     ", "     V    J    V     ", "     Q         Q     ", "     QQ J   J QQ     ", "      QQ     QQ      ", "       QQ M QQ       ", "        QQQQQ        ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "A RO             OR A", "A  O      P      O  A", "AAAO             OAAA", "  SOTTTTTTTTTTTTTOS  ", "  SOOOOOOOOOOOOOOOS  ", "   H   HQQQQQH   H   ", "   H  HQQ M QQH  H   ", "   HHHQQ     QQHHH   ", "    HQQ J   J QQH    ", "     Q         Q     ", "     V    J    V     ", "     Q         Q     ", "     QQ J   J QQ     ", "      QQ     QQ      ", "       QQ M QQ       ", "        QQQQQ        ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "A RO             OR A", "A  O      P      O  A", "AAAO             OAAA", "   V             V   ", "   OOOOOOOOOOOOOOO   ", "   HHHHHQQQQQHHHHH   ", "   HHHHQQ M QQHHHH   ", "   HHHQQ     QQHHH   ", "    HQQ J   J QQH    ", "     Q         Q     ", "     V    J    V     ", "     Q         Q     ", "     QQ J   J QQ     ", "      QQ     QQ      ", "       QQ M QQ       ", "        QQQQQ        ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "A RO             OR A", "A  O      P      O  A", "AAAO             OAAA", "  SOTTTTTTTTTTTTTOS  ", "  SOOOOOOOOOOOOOOOS  ", "      EEQQQQQEE      ", "     EEQQ M QQEE     ", "    EEQQ     QQEE    ", "    EQQ J   J QQE    ", "    EQ   UUU   QE    ", "    EQ   UJU   QE    ", "    EQ   UUU   QE    ", "    EQQ J   J QQE    ", "    EEQQ     QQEE    ", "     EEQQ M QQEE     ", "      EEQQQQQEE      ", "       EEEEEEE       ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "A RO             OR A", "APPPPPPPPPPPPPPPPPPPA", " PAO             OAP ", " PPPPPPPPLLLPPPPPPPP ", "   OOOOOOOOOOOOOOO   ", "      EEQQQQQEE      ", "     EEQQ M QQEE     ", "    EEQQ     QQEE    ", "    EQQ J   J QQE    ", "    EQ         QE    ", "    EQ    J    QE    ", "    EQ         QE    ", "    EQQ J   J QQE    ", "    EEQQ     QQEE    ", "     EEQQ M QQEE     ", "      EEQQQQQEE      ", "       EEEEEEE       ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("EEEEEEEEEEEEEEEEEEEEE", "A RO             OR A", "A  O     P P     O  A", " AAO             OAA ", "   O             O   ", "   OOOOOOOOOOOOOOO   ", "      EEQQQQQEE      ", "     EEQQ M QQEE     ", "    EEQQ     QQEE    ", "    EQQ J   J QQE    ", "    EQ         QE    ", "    EQ    J    QE    ", "    EQ         QE    ", "    EQQ J   J QQE    ", "    EEQQ     QQEE    ", "     EEQQ M QQEE     ", "      EEQQQQQEE      ", "       EEEEEEE       ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle(" EEEEEEEEEEEEEEEEEEE ", "AAAOOOOOOOOOOOOOOOAAA", "AAAOOOOOOPOPOOOOOOAAA", " AAOOOOOOOOOOOOOOOAA ", "   OOOOOOOOOOOOOOO   ", "   OOOOOOOOOOOOOOO   ", "      EE     EE      ", "     EE QQQQQ EE     ", "    EE QQBBBQQ EE    ", "    E QQBBBBBQQ E    ", "    E QBBLLLBBQ E    ", "    E QBBLJLBBQ E    ", "    E QBBLLLBBQ E    ", "    E QQBBBBBQQ E    ", "    EE QQBBBQQ EE    ", "     EE QQQQQ EE     ", "      EE     EE      ", "       EEEEEEE       ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("  EEEEEEEEEEEEEEEEE  ", "                     ", "         P P         ", "                     ", "                     ", "                     ", "      EE     EE      ", "     EE       EE     ", "    EE         EE    ", "    E           E    ", "    E           E    ", "    E           E    ", "    E           E    ", "    E           E    ", "    EE         EE    ", "     EE       EE     ", "      EE     EE      ", "       EEEEEEE       ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("   EEEEEEEEEEEEEEE   ", "                     ", "         P P         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("   AAAAAAAAAAAAAAA   ", "      BB     BB      ", "      BB P P BB      ", "                     ", "                     ", "        EEEEE        ", "        EEEEE        ", "                     ", "                     ", "                     ", "                     ", "                     ", "         FGF         ", "         FGF         ", "         FGF         ", "         FGF         ", "         FGF         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("  AAAAAAAAAAAAAAAAA  ", "  HHH BBCCCCCBB HHH  ", "  HHH BBCPCPCBB HHH  ", "      BBCCCCCBB      ", "      BBCCCCCBB      ", "      EEEEEEEEE      ", "      EE     EE      ", "                     ", "                     ", "                     ", "         FGF         ", "         FGF         ", "                     ", "        CCCCC        ", "        IIIII        ", "        CCCCC        ", "                     ", "         FGF         ", "         FGF         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle(" AAAAAAAAAAAAAAAAAAA ", "  HJH CCKKKKKCC HJH  ", "  HJH CC PJP CC HJH  ", "   J  CC     CC  J   ", "   J  CC     CC  J   ", "   J EEE     EEE J   ", "   J E         E J   ", "   J             J   ", "   J     FGF     J   ", "   M     FGF     M   ", "   M             M   ", "                     ", "                     ", "      CC     CC      ", "      II     II      ", "      CC     CC      ", "                     ", "                     ", "                     ", "         FGF         ", "         FGF         ", "                     ", "                     ", "                     ", "                     ")
                    .aisle(" AAAAAAAAAAAAAAAAAAA ", "  HHHCKKKKKKKKKCHHH  ", "  HHHCMM PJP MMCHHH  ", "     C         C     ", "     C         C     ", "    EE         EE    ", "    E           E    ", "         FGF         ", "                     ", "                     ", "                     ", "                     ", "                     ", "     C   ENE   C     ", "     I   ENE   I     ", "     C   ENE   C     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         FGF         ", "                     ", "                     ", "                     ")
                    .aisle(" AAAAAAAAAAAAAAAAAAA ", "    CKKKKKKKKKKKC    ", "    C    LJL    C    ", "    C           C    ", "    C           C    ", "   EE           EE   ", "   E             E   ", "         FGF         ", "                     ", "                     ", "                     ", "         ENE         ", "         ENE         ", "    C           C    ", "    I           I    ", "    C           C    ", "         ENE         ", "         ENE         ", "                     ", "                     ", "                     ", "         FGF         ", "                     ", "                     ", "                     ")
                    .aisle(" AAAAAAAAAAAAAAAAAAA ", " BBCKKKKKKKKKKKKKCBB ", " BBCM    LJL    MCBB ", "  BC             CB  ", "  BC             CB  ", "  EE             EE  ", "  E      FGF      E  ", "                     ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "   C             C   ", "   I             I   ", "   C             C   ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "                     ", "         FGF         ", "                     ", "                     ")
                    .aisle(" AAAAAAAAAAAAAAAAAAA ", " BBCKKKKKKKKKKKKKCBB ", " BBCM    LJL    MCBB ", "  BC             CB  ", "  BC             CB  ", "  EE             EE  ", "  E      FGF      E  ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "                     ", "   C             C   ", "   I             I   ", "   C             C   ", "                     ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "         FGF         ", "                     ", "                     ")
                    .aisle("HAAAAAAAAAAAAAAAAAAAH", "HHCKKKKKKKKKKKKKKKCHH", "HHC      LJL      CHH", "HHC               CHH", " OC               CO ", " EE      FGF      EE ", " E                 E ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "                     ", "  C               C  ", "  I               I  ", "  C               C  ", "                     ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "                     ", "         FGF         ", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", " ACKKKKKKKKKKKKKKKCA ", " AC     MLJLM     CA ", "HHC     ML LM     CHH", " OC     M   M     CO ", " EE      FGF      EE ", " E                 E ", " O                 O ", "         ENE         ", "                     ", "                     ", "                     ", "                     ", "  C               C  ", "  I               I  ", "  C               C  ", "                     ", "                     ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "         FGF         ", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", " ECKKKKKKKKKKKKKKKCE ", " ECJJJJJJJJJJJJJJJCE ", "HHC      L L      CHH", "OOC               COO", "OEE      FGF      EEO", "OE                 EO", "OO                 OO", "         ENE         ", "                     ", "                     ", "                     ", "                     ", "  C               C  ", "  I               I  ", "  C               C  ", "                     ", "                     ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "         FGF         ", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", " ACKKKKKKKKKKKKKKKCA ", " AC     MLJLM     CA ", "HHC     ML LM     CHH", " OC     M   M     CO ", " EE      FGF      EE ", " E                 E ", " O                 O ", "         ENE         ", "                     ", "                     ", "                     ", "                     ", "  C               C  ", "  I               I  ", "  C               C  ", "                     ", "                     ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "         FGF         ", "                     ")
                    .aisle("HAAAAAAAAAAAAAAAAAAAH", "HHCKKKKKKKKKKKKKKKCHH", "HHC      LJL      CHH", "HHC               CHH", " OC               CO ", " EE      FGF      EE ", " E                 E ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "                     ", "  C               C  ", "  I               I  ", "  C               C  ", "                     ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "                     ", "         FGF         ", "                     ")
                    .aisle(" AAAAAAAAAAAAAAAAAAA ", " BBCKKKKKKKKKKKKKC   ", " BBCM    LJL    MC   ", "  BC             C   ", "  BC             C   ", "  EE             EE  ", "  E      FGF      E  ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "                     ", "   C             C   ", "   I             I   ", "   C             C   ", "                     ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "         FGF         ", "                     ", "                     ")
                    .aisle(" AAAAAAAAAAAAAAAAAAA ", " BBCKKKKKKKKKKKKKC   ", " BBCM    LJL    MC   ", "  BC             C   ", "  BC             C   ", "  EE             EE  ", "  E      FGF      E  ", "                     ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "   C             C   ", "   I             I   ", "   C             C   ", "                     ", "                     ", "         ENE         ", "                     ", "                     ", "                     ", "         FGF         ", "                     ", "                     ")
                    .aisle(" AAAAAAAAAAAAAAAAAAA ", "    CKKKKKKKKKKKC    ", "    C    LJL    C    ", "    C           C    ", "    C           C    ", "   EE           EE   ", "   E             E   ", "         FGF         ", "                     ", "                     ", "                     ", "         ENE         ", "         ENE         ", "    C           C    ", "    I           I    ", "    C           C    ", "         ENE         ", "         ENE         ", "                     ", "                     ", "                     ", "         FGF         ", "                     ", "                     ", "                     ")
                    .aisle(" AAAAAAAAAAAAAAAAAAA ", "  HHHCKKKKKKKKKCHHH  ", "  HHHCMM LJL MMCHHH  ", "     C         C     ", "     C         C     ", "    EE         EE    ", "    E           E    ", "         FGF         ", "                     ", "                     ", "                     ", "                     ", "                     ", "     C   ENE   C     ", "     I   ENE   I     ", "     C   ENE   C     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         FGF         ", "                     ", "                     ", "                     ")
                    .aisle("  AAAAAAAAAAAAAAAAA  ", "  HJH CCKKKKKCC HJH  ", "  HJH CC LJL CC HJH  ", "   J  CC     CC  J   ", "   J  CC     CC  J   ", "   J EEE     EEE J   ", "   J E         E J   ", "   J             J   ", "   J     FGF     J   ", "   M     FGF     M   ", "   M             M   ", "                     ", "                     ", "      CC     CC      ", "      II     II      ", "      CC     CC      ", "                     ", "                     ", "                     ", "         FGF         ", "         FGF         ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("   AAAAAAAAAAAAAAA   ", "   HH BBaCCCaBB HH   ", "   HH BBaCCCaBB HH   ", "      BBaaaaaBB      ", "      BBaaaaaBB      ", "      EEEEEEEEE      ", "      EE     EE      ", "                     ", "                     ", "                     ", "         FGF         ", "         FGF         ", "                     ", "        CCCCC        ", "        IIIII        ", "        CCCCC        ", "                     ", "         FGF         ", "         FGF         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("    AAAAAAAAAAAAA    ", "      BB a~a BB      ", "      BB aaa BB      ", "      BB     BB      ", "                     ", "        EEEEE        ", "        EEEEE        ", "                     ", "                     ", "                     ", "                     ", "                     ", "         FGF         ", "         FGF         ", "         FGF         ", "         FGF         ", "         FGF         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GCYMBlocks.CASING_NONCONDUCTING.get()))
                    .where('B', blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where('C', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get()))
                    .where('E', blocks(GTEBlocks.HYPER_MECHANICAL_CASING.get()))
                    .where('F', blocks(GTEBlocks.NEUTRONIUM_STABLE_CASING.get()))
                    .where('G', blocks(GTBlocks.FUSION_COIL.get()))
                    .where('H', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('I', blocks(GTEBlocks.FUSION_COIL_MK2.get()))
                    .where('J', blocks(GTEBlocks.AMPROSIUM_ACTIVE_CASING.get()))
                    .where('K', blocks(GTBlocks.CASING_GRATE.get()))
                    .where('L', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('M', blocks(GTEBlocks.CONTAINMENT_FIELD_GENERATOR.get()))
                    .where('N', blocks(GTEBlocks.IMPROVED_SUPERCONDUCTOR_COIL.get()))
                    .where('O', blocks(GTEBlocks.ECHO_CASING.get()))
                    .where('P', blocks(GTBlocks.CASING_TUNGSTENSTEEL_TURBINE.get()))
                    .where('Q', blocks(GTEBlocks.PRESSURE_CONTAINMENT_CASING.get()))
                    .where('R', blocks(ChemicalHelper.getBlock(TagPrefix.block, GTMaterials.NeodymiumMagnetic)))
                    .where('S', blocks(GTEBlocks.HIGH_ENERGY_ULTRAVIOLET_EMITTER_CASING.get()))
                    .where('T', blocks(GTBlocks.SUPERCONDUCTING_COIL.get()))
                    .where('U', blocks(GTEBlocks.HYPER_CORE.get()))
                    .where('V', blocks(GTEBlocks.QUANTUM_GLASS.get()))
                    .where('W', blocks(GTBlocks.CASING_TITANIUM_TURBINE.get()))
                    .where('X', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Ultimet)))
                    .where('Y', blocks(GTEBlocks.OXIDATION_RESISTANT_HASTELLOY_N_MECHANICAL_CASING.get()))
                    .where('Z', blocks(GCYMBlocks.HEAT_VENT.get()))
                    .where('a', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/naquadah_reinforced_plant_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition SUPER_SPACE_ELEVATOR = multiblock("super_space_elevator", "超级太空电梯", SuperSpaceElevatorMachine::new)
            .nonYAxisRotation()
            .recipe(GTRecipeTypes.DUMMY_RECIPES)
            .tooltipsText("Can install up to 64 expansion modules", "可安装64个模块")
            .tooltipsText("Increasing voltage tier can greatly reduce the duration for modules", "提升电压等级可大幅减少模块的运行时间")
            .tooltipsText("Additional increase in the parallelism provided by the module", "额外提升为模块提供的并行数")
            .tooltipsKey("gtocore.machine.space_elevator.tooltip.2")
            .block(GTEBlocks.SPACE_ELEVATOR_MECHANICAL_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("                           AAAAAAAAAAA                           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle
                    .aisle
                    .aisle("                  AAAAAAAAAAAAAAAAAAAAAAAAAAAAA                  ", "                           BBBB   BBBB                           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA                ", "                       BBBB   B   B   BBBB                       ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("               AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA               ", "                    BBB       B   B       BBB                    ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("             AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA             ", "                  BB          B   B          BB                  ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA            ", "                 B  B         B   B         B  B                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("           AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA           ", "               BB    B            B        B    BB               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA          ", "           B  B      B            B        B      B  B           ", "           C                                         C           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("         AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA         ", "          BBBB        B       B   B       B        BBBB          ", "          CDC                                       CDC          ", "           C                                         C           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("        AAAAAAAAAAAAFEEAAAAAAAAAAAAAAAAAAAEEFAAAAAAAAAAAA        ", "         BBBBB         B      B   B      B         BBBBB         ", "         CDGDC                                     CDGDC         ", "          CDC                                       CDC          ", "           C                                         C           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("       AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA       ", "          BBB           B     B   B     B           BBB          ", "          CDDC                                     CDDC          ", "           CDC                                     CDC           ", "            C                                       C            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("      AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA      ", "          BB            B     B   B     B            BB          ", "           CC                                       CC           ", "            CG                                     GC            ", "             C                                     C             ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("      AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA      ", "         B               B    B   B    B               B         ", "                              D   D                              ", "              G               D   D               G              ", "              G               D   D               G              ", "                              DDDDD                              ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("     AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA     ", "        B                 BBBB     BBBB                 B        ", "                          DHDD     DDHD                          ", "                          DHDD     DDHD                          ", "               G          DHDD     DDHD          G               ", "               G          DDDD     DDDD          G               ", "                              CCCCC                              ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA    ", "        B              BBB  I       I  BBB              B        ", "                       DHD  D       D  DHD                       ", "                       DHD  D       D  DHD                       ", "                       DHD  D       D  DHD                       ", "                G      DDD  D       D  DDD      G                ", "                          CCCCC   CCCCC                          ", "                          G    JJJ    G                          ", "                          G           G                          ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("    AAAAAAAAAAAAAAAAAAAAAAAAAEEFAFEEAAAAAAAAAAAAAAAAAAAAAAAAA    ", "       B             BB     I       I     BB             B       ", "                     DD     D       D     DD                     ", "                     DD     D       D     DD                     ", "                     DD     D       D     DD                     ", "                 G   DD     D       D     DD   G                 ", "                 G     CCCC K       K CCCC     G                 ", "                           JJJJJJJJJJJ                           ", "                           G         G                           ", "                           G         G                           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAAAFEEAAAAAAAAAEEFAAAAAAAAAAAAAAAAAAAAAA   ", "      B                     I       I                     B      ", "                            D       D                            ", "                            D       D                            ", "                            D       D                            ", "                    D       D       D       D                    ", "                  G  CCC    K       K    CCC  G                  ", "                        JJJJJ       JJJJJ                        ", "                             JJJJJJJ                             ", "                            G       G                            ", "                            G       G                            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAAAAAAAEEFAFEEAAAAAAAAAAAAAAAAAAAAAAAAAA   ", "      B                     I       I                     B      ", "                            D       D                            ", "                            D       D                            ", "                            D       D                            ", "                   D        D       D        D                   ", "                   GCC      K       K      CCG                   ", "                   G  JJJHHHJ       JHHHJJJ  G                   ", "                             JHHHHHJ                             ", "                                                                 ", "                            G       G                            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("  AAAAAAAAAFAAAAAAAAAAAAAFEEAAAAAAAAAEEFAAAAAAAAAAAAAFAAAAAAAAA  ", "     B B                    I       I                    B B     ", "                            D       D                            ", "                            D       D                            ", "                            D       D                            ", "                  D         D       D         D                  ", "                   CC       K       K       CC                   ", "                    GJJHHHHHJ       JHHHHHJJG                    ", "                    G        JHHHHHJ        G                    ", "                                                                 ", "                             G     G                             ", "                             G     G                             ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("  AAAAAAAAAEAAAAAAAAAAAAAAAAAEEFAFEEAAAAAAAAAAAAAAAAAEAAAAAAAAA  ", "     B  BB       B          I       I          B       BB  B     ", "                 D          D       D          D                 ", "                 D          D       D          D                 ", "                 D          D       D          D                 ", "                 D          D       D          D                 ", "                  CC        K       K        CC                  ", "                    JJHHHHHHJ       JHHHHHHJJ                    ", "                     G       JHHHHHJ       G                     ", "                     G                     G                     ", "                                                                 ", "                              G   G                              ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("  AAAAAAAAAEAAAAAAAAAAAAAFEEAAAAAAAAAEEFAAAAAAAAAAAAAEAAAAAAAAA  ", "     B    B      B          I       I          B      B    B     ", "                 D          D       D          D                 ", "                 D          D       D          D                 ", "                 D          D       D          D                 ", "                 D          D       D          D                 ", "                  C         K       K         C                  ", "                   JJHHHHHHHJ       JHHHHHHHJJ                   ", "                             JHHHHHJ                             ", "                      G                   G                      ", "                                                                 ", "                           KKKGKKKGKKK                           ", "                              G   G                              ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAEEFAFEEAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", "    B      B    B           I       I           B    B      B    ", "                D           D       D           D                ", "                D           D       D           D                ", "                D           D       D           D                ", "                D           D       D           D                ", "                 CC         K       K         CC                 ", "                   JHHHHHHHHJ       JHHHHHHHHJ                   ", "                             JHHHHHJ                             ", "                       G                 G                       ", "                                                                 ", "                         KK           KK                         ", "                               G G                               ", "                               G G                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", "    B       BB  B           I       I           B  BB       B    ", "                H           D       D           H                ", "                H           D       D           H                ", "                H           D       D           H                ", "                D           D       D           D                ", "                 C          K       K          C                 ", "                  JJHHHHHHHHJ       JHHHHHHHHJJ                  ", "                             JHHHHHJ                             ", "                                                                 ", "                        G               G                        ", "                        K               K                        ", "                                                                 ", "                               G G                               ", "                               GKG                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle(" AAAAAAAAAAAAAAAAAFAFAFAAAAAAAAAAAAAAAAAAAFAFAFAAAAAAAAAAAAAAAAA ", "    B         B B           I IIIII I           B B         B    ", "                D           D       D           D                ", "                D           D       D           D                ", "                D           D       D           D                ", "                D           D       D           D                ", "                 C          K       K          C                 ", "                  JHHHHHHHHHJ       JHHHHHHHHHJ                  ", "                             JJJJJJJ                             ", "                                                                 ", "                         G             G                         ", "                       K                 K                       ", "                                                                 ", "                                                                 ", "                               G G                               ", "                               G G                               ", "                               GKG                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle(" AAAAAAAAAAAAAAAAAEAEAEAAAAAAAAAAAAAAAAAAAEAEAEAAAAAAAAAAAAAAAAA ", "    B          B           IIICCICCIII           B          B    ", "               D                                 D               ", "               D                                 D               ", "               D                                 D               ", "               D           D         D           D               ", "                CC         K         K         CC                ", "                G JHHHHHHHHJ         JHHHHHHHHJ G                ", "                G           JJ K K JJ           G                ", "                                                                 ", "                          G           G                          ", "                       K  G           G  K                       ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                               G G                               ", "                               G G                               ", "                               G G                               ", "                               GKG                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("AAAAAAAAAAAAAAAAAAEAEAEAAAAAAAAAAAAAAAAAAAEAEAEAAAAAAAAAAAAAAAAAA", "   B           B          IICCCCICCCCII          B           B   ", "               H                                 H               ", "               H                                 H               ", "               H                                 H               ", "               D          D           D          D               ", "                C         K           K         C                ", "                 JJHHHHHHHJ           JHHHHHHHJJ                 ", "                 G         J   K K   J         G                 ", "                 G                             G                 ", "                                                                 ", "                      K    G         G    K                      ", "                           G         G                           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                               G G                               ", "                               G G                               ", "                               G G                               ", "                               G G                               ", "                               GKG                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJJJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "   B           BIIIIIIIIIIICCCCJJJCCCCIIIIIIIIIIIB           B   ", "               DDDDDDDDDDD     XXX     DDDDDDDDDDD               ", "               DDDDDDDDDDD     XXX     DDDDDDDDDDD               ", "               DDDDDDDDDDD     XXX     DDDDDDDDDDD               ", "               DDDDDDDDDDD     XXX     DDDDDDDDDDD               ", "                CKKKKKKKKK     J J     KKKKKKKKKC                ", "                 JJJJJJJJJ     J J     JJJJJJJJJ                 ", "                          J    K K    J                          ", "                  G                           G                  ", "                  GG                         GG                  ", "                      K                   K                      ", "                            G  BBB  G                            ", "                            G       G                            ", "                            G       G                            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                               CCC                               ", "                             CCBBBCC                             ", "                                                                 ", "                                                                 ", "                               G G                               ", "                               G G                               ", "                               G G                               ", "                               G G                               ", "                               G G                               ", "                               BBB                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                               BBB                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                               BBB                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                               BBB                               ")
                    .aisle("AAAAAAAAAAAAAAAAAEAEAEAEAAAAAJJJJJJJAAAAAEAEAEAEAAAAAAAAAAAAAAAAA", "   B           B          ICCJJJIJJJCCI          B           B   ", "               D             JJM MJJ             D               ", "               D             JJM MJJ             D               ", "               D             JJM MJJ             D               ", "               D             JJM MJJ             D               ", "                C             JM MJ             C                ", "                 J            JM MJ            J                 ", "                  JJJJJJJJJ    M M    JJJJJJJJJ                  ", "                               M M                               ", "                    G          M M          G                    ", "                    G K        M M        K G                    ", "                             BBM MBB                             ", "                             G M M G                             ", "                             G M M G                             ", "                             G M M G                             ", "                             G M M G                             ", "                             G M M G                             ", "                             G M M G                             ", "                             G M M G                             ", "                            CBBM MBBC                            ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                             BBM MBB                             ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                             BBM MBB                             ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                             BBM MBB                             ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                             BBJJJBB                             ")
                    .aisle("AAAAAAAAAAAAAAAAAEAEAEAEAAAAAJJJJJJJAAAAAEAEAEAEAAAAAAAAAAAAAAAAA", "   BBBBB  BBBBB          ICCCJJJIJJJCCCI          BBBBBBBBBBBB   ", "              D              J     J              D              ", "              D              J     J              D              ", "              D              J     J              D              ", "              D              J     J              D              ", "               CC            J     J            CC               ", "                 J           J     J           J                 ", "                  JHHHHHHJ             JHHHHHHJ                  ", "                                                                 ", "                                                                 ", "                     GG                   GG                     ", "                      G      B     B      G                      ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                            CB     BC                            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                             B     B                             ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                             B     B                             ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                             B     B                             ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                             BJ   JB                             ")
                    .aisle("AAAAAAAAAAAAAAAAAFAFAFAFAAAAJJJJJJJJJAAAAFAFAFAFAAAAAAAAAAAAAAAAA", "                         ICCJJJJIJJJJCCI                         ", "                            JM     MJ                            ", "                            JM     MJ                            ", "                            JM     MJ                            ", "              D             JM     MJ             D              ", "               C            JM     MJ            C               ", "                JJ          JM     MJ          JJ                ", "                  JHHHHHHJKKKM     MKKKJHHHHHHJ                  ", "                             M     M                             ", "                             M     M                             ", "                      K      M     M      K                      ", "                       G    BM     MB    G                       ", "                       GG    M     M    GG                       ", "                        GG   M     M   GG                        ", "                         G   M     M   G                         ", "                         GG  M     M  GG                         ", "                          G  M     M  G                          ", "                          G  M     M  G                          ", "                          GGCM     MCGG                          ", "                           GBM     MBG                           ", "                           G M     M G                           ", "                           G M     M G                           ", "                           GGM     MGG                           ", "                            GM     MG                            ", "                            GM     MG                            ", "                            GM     MG                            ", "                            GM     MG                            ", "                            BM     MB                            ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                            BM     MB                            ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                            BM     MB                            ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                            BJ     JB                            ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAJJJJJJJJJAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "                         IIIJIIINIIIJIII                         ", "                            J       J                            ", "                            J       J                            ", "                            J       J                            ", "              D             J       J             D              ", "               C                                 C               ", "                JJ                             JJ                ", "                  JHHHHHHJ             JHHHHHHJ                  ", "                                                                 ", "                                                                 ", "                      K                   K                      ", "                            B       B                            ", "                                                                 ", "                        K               K                        ", "                                                                 ", "                         K             K                         ", "                                                                 ", "                                                                 ", "                          K C       C K                          ", "                            B       B                            ", "                                                                 ", "                                                                 ", "                           K         K                           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                            B       B                            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                            B       B                            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                            B       B                            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                            BJ     JB                            ")
                    .aisle("AAAAAAAAAAAAAAAAAFAFAFAFAAAAJJJJJJJJJAAAAFAFAFAFAAAAAAAAAAAAAAAAA", "                         ICCJJJJIJJJJCCI                         ", "                            JM     MJ                            ", "                            JM     MJ                            ", "                            JM     MJ                            ", "              D             JM     MJ             D              ", "               C            JM     MJ            C               ", "                JJ          JM     MJ          JJ                ", "                  JHHHHHHJKKKM     MKKKJHHHHHHJ                  ", "                             M     M                             ", "                             M     M                             ", "                      K      M     M      K                      ", "                       G    BM     MB    G                       ", "                       GG    M     M    GG                       ", "                        GG   M     M   GG                        ", "                         G   M     M   G                         ", "                         GG  M     M  GG                         ", "                          G  M     M  G                          ", "                          G  M     M  G                          ", "                          GGCM     MCGG                          ", "                           GBM     MBG                           ", "                           G M     M G                           ", "                           G M     M G                           ", "                           GGM     MGG                           ", "                            GM     MG                            ", "                            GM     MG                            ", "                            GM     MG                            ", "                            GM     MG                            ", "                            BM     MB                            ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                            BM     MB                            ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                            BM     MB                            ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                             M     M                             ", "                            BJ     JB                            ")
                    .aisle("AAAAAAAAAAAAAAAAAEAEAEAEAAAAAJJJJJJJAAAAAEAEAEAEAAAAAAAAAAAAAAAAA", "   BBBBB  BBBBB          ICCCJJJIJJJCCCI          BBBBBBBBBBBB   ", "              D              J     J              D              ", "              D              J     J              D              ", "              D              J     J              D              ", "              D              J     J              D              ", "               CC            J     J            CC               ", "                 J           J     J           J                 ", "                  JHHHHHHJ             JHHHHHHJ                  ", "                                                                 ", "                                                                 ", "                     GG                   GG                     ", "                      G      B     B      G                      ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                            CB     BC                            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                             B     B                             ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                             B     B                             ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                             B     B                             ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                             BJ   JB                             ")
                    .aisle("AAAAAAAAAAAAAAAAAEAEAEAEAAAAAJJJJJJJAAAAAEAEAEAEAAAAAAAAAAAAAAAAA", "   B           B          ICCJJJIJJJCCI          B           B   ", "               D             JJM MJJ             D               ", "               D             JJM MJJ             D               ", "               D             JJM MJJ             D               ", "               D             JJM MJJ             D               ", "                C             JM MJ             C                ", "                 J            JM MJ            J                 ", "                  JJJJJJJJJ    M M    JJJJJJJJJ                  ", "                               M M                               ", "                    G          M M          G                    ", "                    G K        M M        K G                    ", "                             BBM MBB                             ", "                             G M M G                             ", "                             G M M G                             ", "                             G M M G                             ", "                             G M M G                             ", "                             G M M G                             ", "                             G M M G                             ", "                             G M M G                             ", "                            CBBM MBBC                            ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                             BBM MBB                             ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                             BBM MBB                             ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                             BBM MBB                             ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                               M M                               ", "                             BBJJJBB                             ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJJJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "   B           BIIIIIIIIIIICCCCJJJCCCCIIIIIIIIIIIB           B   ", "               DDDDDDDDDDD     JJJ     DDDDDDDDDDD               ", "               DDDDDDDDDDD     J~J     DDDDDDDDDDD               ", "               DDDDDDDDDDD     JJJ     DDDDDDDDDDD               ", "               DDDDDDDDDDD     JJJ     DDDDDDDDDDD               ", "                CKKKKKKKKK     J J     KKKKKKKKKC                ", "                 JJJJJJJJJ     J J     JJJJJJJJJ                 ", "                          J    K K    J                          ", "                  G                           G                  ", "                  GG                         GG                  ", "                      K                   K                      ", "                            G  BBB  G                            ", "                            G       G                            ", "                            G       G                            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                               CCC                               ", "                             CCBBBCC                             ", "                                                                 ", "                                                                 ", "                               G G                               ", "                               G G                               ", "                               G G                               ", "                               G G                               ", "                               G G                               ", "                               BBB                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                               BBB                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                               BBB                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                               BBB                               ")
                    .aisle("AAAAAAAAAAAAAAAAAAEAEAEAAAAAAAAAAAAAAAAAAAEAEAEAAAAAAAAAAAAAAAAAA", "   B           B          IICCCCICCCCII          B           B   ", "               H                                 H               ", "               H                                 H               ", "               H                                 H               ", "               D          D           D          D               ", "                C         K           K         C                ", "                 JJHHHHHHHJ           JHHHHHHHJJ                 ", "                 G         J   K K   J         G                 ", "                 G                             G                 ", "                                                                 ", "                      K    G         G    K                      ", "                           G         G                           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                               G G                               ", "                               G G                               ", "                               G G                               ", "                               G G                               ", "                               GKG                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle(" AAAAAAAAAAAAAAAAAEAEAEAAAAAAAAAAAAAAAAAAAEAEAEAAAAAAAAAAAAAAAAA ", "    B          B           IIICCICCIII           B          B    ", "               D                                 D               ", "               D                                 D               ", "               D                                 D               ", "               D           D         D           D               ", "                CC         K         K         CC                ", "                G JHHHHHHHHJ         JHHHHHHHHJ G                ", "                G           JJ K K JJ           G                ", "                                                                 ", "                          G           G                          ", "                       K  G           G  K                       ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                               G G                               ", "                               G G                               ", "                               G G                               ", "                               GKG                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle(" AAAAAAAAAAAAAAAAAFAFAFAAAAAAAAAAAAAAAAAAAFAFAFAAAAAAAAAAAAAAAAA ", "    B         B B           I IIIII I           B B         B    ", "                D           D       D           D                ", "                D           D       D           D                ", "                D           D       D           D                ", "                D           D       D           D                ", "                 C          K       K          C                 ", "                  JHHHHHHHHHJ       JHHHHHHHHHJ                  ", "                             JJJJJJJ                             ", "                                                                 ", "                         G             G                         ", "                       K                 K                       ", "                                                                 ", "                                                                 ", "                               G G                               ", "                               G G                               ", "                               GKG                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", "    B       BB  B           I       I           B  BB       B    ", "                H           D       D           H                ", "                H           D       D           H                ", "                H           D       D           H                ", "                D           D       D           D                ", "                 C          K       K          C                 ", "                  JJHHHHHHHHJ       JHHHHHHHHJJ                  ", "                             JHHHHHJ                             ", "                                                                 ", "                        G               G                        ", "                        K               K                        ", "                                                                 ", "                               G G                               ", "                               GKG                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAEEFAFEEAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", "    B      B    B           I       I           B    B      B    ", "                D           D       D           D                ", "                D           D       D           D                ", "                D           D       D           D                ", "                D           D       D           D                ", "                 CC         K       K         CC                 ", "                   JHHHHHHHHJ       JHHHHHHHHJ                   ", "                             JHHHHHJ                             ", "                       G                 G                       ", "                                                                 ", "                         KK           KK                         ", "                               G G                               ", "                               G G                               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("  AAAAAAAAAEAAAAAAAAAAAAAFEEAAAAAAAAAEEFAAAAAAAAAAAAAEAAAAAAAAA  ", "     B    B      B          I       I          B      B    B     ", "                 D          D       D          D                 ", "                 D          D       D          D                 ", "                 D          D       D          D                 ", "                 D          D       D          D                 ", "                  C         K       K         C                  ", "                   JJHHHHHHHJ       JHHHHHHHJJ                   ", "                             JHHHHHJ                             ", "                      G                   G                      ", "                                                                 ", "                           KKKGKKKGKKK                           ", "                              G   G                              ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("  AAAAAAAAAEAAAAAAAAAAAAAAAAAEEFAFEEAAAAAAAAAAAAAAAAAEAAAAAAAAA  ", "     B  BB       B          I       I          B       BB  B     ", "                 D          D       D          D                 ", "                 D          D       D          D                 ", "                 D          D       D          D                 ", "                 D          D       D          D                 ", "                  CC        K       K        CC                  ", "                    JJHHHHHHJ       JHHHHHHJJ                    ", "                     G       JHHHHHJ       G                     ", "                     G                     G                     ", "                                                                 ", "                              G   G                              ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("  AAAAAAAAAFAAAAAAAAAAAAAFEEAAAAAAAAAEEFAAAAAAAAAAAAAFAAAAAAAAA  ", "     B B                    I       I                    B B     ", "                            D       D                            ", "                            D       D                            ", "                            D       D                            ", "                  D         D       D         D                  ", "                   CC       K       K       CC                   ", "                    GJJHHHHHJ       JHHHHHJJG                    ", "                    G        JHHHHHJ        G                    ", "                                                                 ", "                             G     G                             ", "                             G     G                             ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAAAAAAAEEFAFEEAAAAAAAAAAAAAAAAAAAAAAAAAA   ", "      B                     I       I                     B      ", "                            D       D                            ", "                            D       D                            ", "                            D       D                            ", "                   D        D       D        D                   ", "                   GCC      K       K      CCG                   ", "                   G  JJJHHHJ       JHHHJJJ  G                   ", "                             JHHHHHJ                             ", "                                                                 ", "                            G       G                            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAAAFEEAAAAAAAAAEEFAAAAAAAAAAAAAAAAAAAAAA   ", "      B                     I       I                     B      ", "                            D       D                            ", "                            D       D                            ", "                            D       D                            ", "                    D       D       D       D                    ", "                  G  CCC    K       K    CCC  G                  ", "                        JJJJJ       JJJJJ                        ", "                             JJJJJJJ                             ", "                            G       G                            ", "                            G       G                            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("    AAAAAAAAAAAAAAAAAAAAAAAAAEEFAFEEAAAAAAAAAAAAAAAAAAAAAAAAA    ", "       B             BB     I       I     BB             B       ", "                     DD     D       D     DD                     ", "                     DD     D       D     DD                     ", "                     DD     D       D     DD                     ", "                 G   DD     D       D     DD   G                 ", "                 G     CCCC K       K CCCC     G                 ", "                           JJJJJJJJJJJ                           ", "                           G         G                           ", "                           G         G                           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA    ", "        B              BBB  I       I  BBB              B        ", "                       DHD  D       D  DHD                       ", "                       DHD  D       D  DHD                       ", "                       DHD  D       D  DHD                       ", "                G      DDD  D       D  DDD      G                ", "                          CCCCC   CCCCC                          ", "                          G    JJJ    G                          ", "                          G           G                          ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("     AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA     ", "        B                 BBBB     BBBB                 B        ", "                          DHDD     DDHD                          ", "                          DHDD     DDHD                          ", "               G          DHDD     DDHD          G               ", "               G          DDDD     DDDD          G               ", "                              CCCCC                              ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("      AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA      ", "         B               B    B   B    B               B         ", "                              D   D                              ", "              G               D   D               G              ", "              G               D   D               G              ", "                              DDDDD                              ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("      AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA      ", "          BB            B     B   B     B            BB          ", "           CC                                       CC           ", "            CG                                     GC            ", "             C                                     C             ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("       AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA       ", "          BBB           B     B   B     B           BBB          ", "          CDDC                                     CDDC          ", "           CDC                                     CDC           ", "            C                                       C            ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("        AAAAAAAAAAAAFEEAAAAAAAAAAAAAAAAAAAEEFAAAAAAAAAAAA        ", "         BBBBB         B      B   B      B         BBBBB         ", "         CDGDC                                     CDGDC         ", "          CDC                                       CDC          ", "           C                                         C           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("         AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA         ", "          BBBB        B       B   B       B        BBBB          ", "          CDC                                       CDC          ", "           C                                         C           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA          ", "           B  B      B                     B      B  B           ", "           C                                         C           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("           AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA           ", "               BB    B                     B    BB               ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA            ", "                 B  B         B   B         B  B                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("             AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA             ", "                  BB          B   B          BB                  ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("               AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA               ", "                    BBB       B   B       BBB                    ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA                ", "                       BBBB   B   B   BBBB                       ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle("                  AAAAAAAAAAAAAAAAAAAAAAAAAAAAA                  ", "                           BBBB   BBBB                           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .aisle
                    .aisle
                    .aisle("                           AAAAAAAAAAA                           ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ", "                                                                 ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.HIGH_STRENGTH_CONCRETE.get()))
                    .where('B', blocks(GTEBlocks.SPACE_ELEVATOR_INTERNAL_SUPPORT.get()))
                    .where('C', blocks(GTEBlocks.MOLECULAR_CASING.get()))
                    .where('D', blocks(GTEBlocks.HYPER_MECHANICAL_CASING.get()))
                    .where('E', blocks(GTEBlocks.SPACE_ELEVATOR_MODULE_BASE.get()))
                    .where('F', blocks(GTEBlocks.HIGH_STRENGTH_CONCRETE.get()).or(blocks(GTEBlocks.MODULE_CONNECTOR.get()).setPreviewCount(1)))
                    .where('G', blocks(GTEBlocks.SPACE_ELEVATOR_SUPPORT.get()))
                    .where('H', blocks(GTEBlocks.HSSS_BOROSILICATE_GLASS.get()))
                    .where('I', blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where('J', blocks(GTEBlocks.SPACE_ELEVATOR_MECHANICAL_CASING.get()))
                    .where('K', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Neutronium)))
                    .where('M', GTEPredicates.tierBlock(SEPMMAP, POWER_MODULE_TIER))
                    .where('N', blocks(GTEBlocks.SPACE_ELEVATOR_POWER_CORE.get()))
                    .where('X', blocks(GTEBlocks.SPACE_ELEVATOR_MECHANICAL_CASING.get())
                            .or(abilities(GTEPartAbility.ITEMS_INPUT).setExactLimit(1))
                            .or(abilities(INPUT_ENERGY).setExactLimit(1))
                            .or(abilities(COMPUTATION_DATA_RECEPTION).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .renderer(SpaceElevatorRenderer::new)
            .hasTESR(true)
            .register();

    MultiblockMachineDefinition MEGA_BATH_TANK = multiblock("mega_bath_tank", "巨型浸洗池", CrossRecipeMultiblockMachine::createHatchParallel)
            .nonYAxisRotation()
            .recipe(GTRecipeTypes.CHEMICAL_BATH_RECIPES)
            .recipe(GTRecipeTypes.ORE_WASHER_RECIPES)
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GTEBlocks.REINFORCED_STERILE_WATER_PLANT_CASING)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.BACK, RelativeDirection.UP, RelativeDirection.LEFT)
                    .aisle("            AAAAAAA            ", "            AAAAAAA            ", "            AAAAAAA            ", "            BBBBBBB            ", "            ACCCCCA            ", "            ACCCCCA            ", "            BBBBBBB            ", "            AAAAAAA            ", "            AAAAAAA            ", "             AAAAA             ", "                               ", "                               ", "                               ")
                    .aisle("         AAAAAAAAAAAAA         ", "         AAA       AAA         ", "         AAA DEDED AAA         ", "         BBBBBBBBBBBBB         ", "         AAA       AAA         ", "         AAA       AAA         ", "         BBBBBBBBBBBBB         ", "         AAA DEDED AAA         ", "         AAA       AAA         ", "            FFFFFFF            ", "                               ", "                               ", "                               ")
                    .aisle("       AAAAAAAAAAAAAAAAA       ", "       AA             AA       ", "       AA    DEDED    AA       ", "       BBBBB      BBBBBB       ", "       AA             AA       ", "       AA             AA       ", "       BBBBB      BBBBBB       ", "       AA    DEDED    AA       ", "       AA             AA       ", "         FFFFFFFFFFFFF         ", "                               ", "                               ", "                               ")
                    .aisle("      AAAAAAAAAAAAAAAAAAA      ", "      A                 A      ", "      A      DEDED      A      ", "      BBBBBB      BBBBBBB      ", "      A                 A      ", "      A                 A      ", "      BBBBBB      BBBBBBB      ", "      A      DEDED      A      ", "      A                 A      ", "       FFFFFFFFFFFFFFFFF       ", "             GFFFG             ", "                               ", "                               ")
                    .aisle("     AAAAAAAAAAAAAAAAAAAAA     ", "     A                   A     ", "     A       DEDED       A     ", "     BBBBBBB      BBBBBBBB     ", "     A                   A     ", "     A                   A     ", "     BBBBBBB      BBBBBBBB     ", "     A       DEDED       A     ", "     A                   A     ", "     AFFFFFFF     FFFFFFFA     ", "          GGGFFFFFGGG          ", "             G   G             ", "                               ")
                    .aisle("    AAAAAAAAAAAAAAAAAAAAAAA    ", "    AHH                 HHA    ", "    AHH      DEDED      HHA    ", "    BHHIJJJJJJJJJJJJJJJIHHB    ", "    AHH                 HHA    ", "    AHH                 HHA    ", "    BHHIJJJJJJJJJJJJJJJIHHB    ", "    AHH      DEDED      HHA    ", "    AHH                 HHA    ", "    AFFFFF           FFFFFA    ", "         GFFFFFFFFFFFG         ", "             G   G             ", "                               ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAAAAAA   ", "   A HH                 HH A   ", "   A HH      DEDED      HH A   ", "   BBHHIGGGGG     GGGGGIHHBB   ", "   A HH                 HH A   ", "   A HH                 HH A   ", "   BBHHIGGGGG     GGGGGIHHBB   ", "   A HH      DEDED      HH A   ", "   A HH                 HH A   ", "    FFFFF             FFFFF    ", "        GFFFFFFFFFFFFFG        ", "             G   G             ", "                               ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAAAA  ", "  A                         A  ", "  A          DEDED          A  ", "  BBBIIKKKKKG     GKKKKKIIBBB  ", "  A                         A  ", "  A                         A  ", "  BBBIIKKKKKG     GKKKKKIIBBB  ", "  A          DEDED          A  ", "  A                         A  ", "   FFFFF               FFFFF   ", "       GFFFFFFFFFFFFFFFG       ", "             G   G             ", "                               ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAAAA  ", "  A                         A  ", "  A          DEDED          A  ", "  BBBJGKKKKKG     GKKKKKGJBBB  ", "  A                         A  ", "  A                         A  ", "  BBBJGKKKKKG     GKKKKKGJBBB  ", "  A          DEDED          A  ", "  A                         A  ", "   FFFF                 FFFF   ", "      GFFFFFFLLLLLFFFFFFG      ", "             G   G             ", "                               ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", " A                           A ", " A           DEDED           A ", " BBBBJGKKKKKG     GKKKKKGJBBBB ", " A                           A ", " A                           A ", " BBBBJGKKKKKG     GKKKKKGJBBBB ", " A           DEDED           A ", " A                           A ", "  FFFF                   FFFF  ", "     GFFFFFAAAAAAAAAFFFFFG     ", "           AAG   GAA           ", "                               ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", " A                           A ", " A           DEDED           A ", " BBBBJGKKKKKG     GKKKKKGJBBBB ", " A                           A ", " A                           A ", " BBBBJGKKKKKG     GKKKKKGJBBBB ", " A           DEDED           A ", " A                           A ", "  FFF                     FFF  ", "    GFFFFFAAAAAAAAAAAFFFFFG    ", "          AAAG   GAAA          ", "                               ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", " A                           A ", " A           DEDED           A ", " BBBBJGKKKKKG     GKKKKKGJBBBB ", " A                           A ", " A                           A ", " BBBBJGKKKKKG     GKKKKKGJBBBB ", " A           DEDED           A ", " A                           A ", "  FFF                     FFF  ", "    GFFFFAAAAAAAAAAAAAFFFFG    ", "         AAAAG   GAAAA         ", "                               ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "A                             A", "A            DEDED            A", "BBBBBJGGGGGGG     GGGGGGGJBBBBB", "A                             A", "A                             A", "BBBBBJGGGGGGG     GGGGGGGJ   BB", "A            DEDED            A", "A                             A", " FFFF                     FFFF ", "    GFFFFAAAAAAAAAAAAAFFFFG    ", "         AAAAG   GAAAA         ", "                               ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "A                             A", "ADDDDDDDDDDDDDEDEDDDDDDDDDDDDDA", "BB   J                   JBBBBB", "C                             A", "C                             A", "BB   J                   J   BB", "aDDDDDDDDDDDDDEDEDDDDDDDDDDDDDA", "A                             A", "aFFF                       FFFA", "   GFFFFLAAAAAAAAAAAAALFFFFG   ", "    GGGGGGGGGG   GGGGGGGGGG    ", "                               ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "A                             A", "AEEEEEEEEEEEEEEDEEEEEEEEEEEEEEA", "BB   J                   J   BB", "C                             C", "C                             C", "BB   J                   J   BB", "aEEEEEEEEEEEEEEDEEEEEEEEEEEEEEA", "A             E E             A", "aFFF          E E          FFFA", " aIFFFFFLAAAAAEAEAAAAALFFFFF   ", " aADDDDDDDDDDDDDD              ", " aADDDDDDDDDDDDD               ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "A                             A", "ADDDDDDDDDDDDDDDDDDDDDDDDDDDDDA", "BB   J                   J   BB", "C                             C", "C                             C", "BB   J                   J   BB", "aDDDDDDDDDDDDDDDDDDDDDDDDDDDDDA", "A                             A", "aFFF                       FFFA", " aIFFFFFLAAAAAAAAAAAAALFFFFF   ", " ~ADDDDDDDDDDDDID              ", " aADDDDDDDDDDDDID              ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "A                             A", "AEEEEEEEEEEEEEEDEEEEEEEEEEEEEEA", "BB   J                   J   BB", "C                             C", "C                             C", "BB   J                   J   BB", "aEEEEEEEEEEEEEEDEEEEEEEEEEEEEEA", "A             E E             A", "aFFF          E E          FFFA", " aIFFFFFLAAAAAEAEAAAAALFFFFF   ", " aADDDDDDDDDDDDDD              ", " aADDDDDDDDDDDDD               ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "A                             A", "ADDDDDDDDDDDDDEDEDDDDDDDDDDDDDA", "BB   J                   J   BB", "C                             C", "C                             C", "BB   J                   J   BB", "aDDDDDDDDDDDDDEDEDDDDDDDDDDDDDA", "A                             A", "aFFF                       FFFA", "   GFFFFLAAAAAAAAAAAAALFFFFG   ", "    GGGGGGGGGG   GGGGGGGGGG    ", "                               ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "A                             A", "A            DEDED            A", "BBBBBJGGGGGGG     GGGGGGGJBBBBB", "A                             A", "A                             A", "BB   JGGGGGGG     GGGGGGGJBBBBB", "A            DEDED            A", "A                             A", " FFFF                     FFFF ", "    GFFFFAAAAAAAAAAAAAFFFFG    ", "         AAAAG   GAAAA         ", "                               ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", " A                           A ", " A           DEDED           A ", " BBBBJGKKKKKG     GKKKKKGJBBBB ", " A                           A ", " A                           A ", " BBBBJGKKKKKG     GKKKKKGJBBBB ", " A           DEDED           A ", " A                           A ", "  FFF                     FFF  ", "    GFFFFAAAAAAAAAAAAAFFFFG    ", "         AAAAG   GAAAA         ", "                               ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", " A                           A ", " A           DEDED           A ", " BBBBJGKKKKKG     GKKKKKGJBBBB ", " A                           A ", " A                           A ", " BBBBJGKKKKKG     GKKKKKGJBBBB ", " A           DEDED           A ", " A                           A ", "  FFF                     FFF  ", "    GFFFFFAAAAAAAAAAAFFFFFG    ", "          AAAG   GAAA          ", "                               ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", " A                           A ", " A           DEDED           A ", " BBBBJGKKKKKG     GKKKKKGJBBBB ", " A                           A ", " A                           A ", " BBBBJGKKKKKG     GKKKKKGJBBBB ", " A           DEDED           A ", " A                           A ", "  FFFF                   FFFF  ", "     GFFFFFAAAAAAAAAFFFFFG     ", "           AAG   GAA           ", "                               ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAAAA  ", "  A                         A  ", "  A          DEDED          A  ", "  BBBJGKKKKKG     GKKKKKGJBBB  ", "  A                         A  ", "  A                         A  ", "  BBBJGKKKKKG     GKKKKKGJBBB  ", "  A          DEDED          A  ", "  A                         A  ", "   FFFF                 FFFF   ", "      GFFFFFFLLLLLFFFFFFG      ", "             G   G             ", "                               ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAAAA  ", "  A                         A  ", "  A          DEDED          A  ", "  BBBIIKKKKKG     GKKKKKIIBBB  ", "  A                         A  ", "  A                         A  ", "  BBBIIKKKKKG     GKKKKKIIBBB  ", "  A          DEDED          A  ", "  A                         A  ", "   FFFFF               FFFFF   ", "       GFFFFFFFFFFFFFFFG       ", "             G   G             ", "                               ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAAAAAA   ", "   A HH                 HH A   ", "   A HH      DEDED      HH A   ", "   BBHHIGGGGG     GGGGGIHHBB   ", "   A HH                 HH A   ", "   A HH                 HH A   ", "   BBHHIGGGGG     GGGGGIHHBB   ", "   A HH      DEDED      HH A   ", "   A HH                 HH A   ", "    FFFFF             FFFFF    ", "        GFFFFFFFFFFFFFG        ", "             G   G             ", "                               ")
                    .aisle("    AAAAAAAAAAAAAAAAAAAAAAA    ", "    AHH                 HHA    ", "    AHH      DEDED      HHA    ", "    BHHIJJJJJJJJJJJJJJJIHHB    ", "    AHH                 HHA    ", "    AHH                 HHA    ", "    BHHIJJJJJJJJJJJJJJJIHHB    ", "    AHH      DEDED      HHA    ", "    AHH                 HHA    ", "    AFFFFF           FFFFFA    ", "         GFFFFFFFFFFFG         ", "             G   G             ", "                               ")
                    .aisle("     AAAAAAAAAAAAAAAAAAAAA     ", "     A                   A     ", "     A       DEDED       A     ", "     BBBBBBBB     BBBBBBBB     ", "     A                   A     ", "     A                   A     ", "     BBBBBBBB      BBBBBBB     ", "     A       DEDED       A     ", "     A                   A     ", "     AFFFFFFF     FFFFFFFA     ", "          GGGFFFFFGGG          ", "             G   G             ", "                               ")
                    .aisle("      AAAAAAAAAAAAAAAAAAA      ", "      A                 A      ", "      A      DEDED      A      ", "      BBBBBBB     BBBBBBB      ", "      A                 A      ", "      A                 A      ", "      BBBBBBB      BBBBBB      ", "      A      DEDED      A      ", "      A                 A      ", "       FFFFFFFFFFFFFFFFF       ", "             GFFFG             ", "                               ", "                               ")
                    .aisle("       AAAAAAAAAAAAAAAAA       ", "       AA             AA       ", "       AA    DEDED    AA       ", "       BBBBBB     BBBBBB       ", "       AA             AA       ", "       AA             AA       ", "       BBBBBB      BBBBB       ", "       AA    DEDED    AA       ", "       AA             AA       ", "         FFFFFFFFFFFFF         ", "                               ", "                               ", "                               ")
                    .aisle("         AAAAAAAAAAAAA         ", "         AAA       AAA         ", "         AAA DEDED AAA         ", "         BBBBBBBBBBBBB         ", "         AAA       AAA         ", "         AAA       AAA         ", "         BBBBBBBBBBBBB         ", "         AAA DEDED AAA         ", "         AAA       AAA         ", "            FFFFFFF            ", "                               ", "                               ", "                               ")
                    .aisle("            AAAAAAA            ", "            AAAAAAA            ", "            AAAAAAA            ", "            BBBBBBB            ", "            ACCCCCA            ", "            ACCCCCA            ", "            BBBBBBB            ", "            AAAAAAA            ", "            AAAAAAA            ", "             AAAAA             ", "                               ", "                               ", "                               ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.REINFORCED_STERILE_WATER_PLANT_CASING.get()))
                    .where('B', blocks(GCYMBlocks.CASING_WATERTIGHT.get()))
                    .where('C', blocks(GTBlocks.CLEANROOM_GLASS.get()))
                    .where('D', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.HSLASteel)))
                    .where('E', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('F', blocks(GTEBlocks.FLOCCULATION_CASING.get()))
                    .where('G', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Naquadria)))
                    .where('H', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('I', blocks(GTBlocks.CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where('J', blocks(GTEBlocks.LASER_CASING.get()))
                    .where('K', blocks(GTEBlocks.CHEMICAL_GRADE_GLASS.get()))
                    .where('L', blocks(GTBlocks.FILTER_CASING.get()))
                    .where('a', blocks(GTEBlocks.REINFORCED_STERILE_WATER_PLANT_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/reinforced_sterile_water_plant_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition MEGA_VACUUM_DRYING_FURNACE = multiblock("mega_vacuum_drying_furnace", "巨型真空干燥炉", CoilCrossRecipeMultiblockMachine::createCoilParallel)
            .nonYAxisRotation()
            .recipe(GTERecipeTypes.VACUUM_DRYING_RECIPES)
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GTBlocks.HIGH_POWER_CASING)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "        MMM        ", "        MMM        ", "        MMM        ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("                   ", "                   ", "            F F    ", "           CCCCC   ", "          CCCCCCC  ", "         CCCCCCCCC ", "        MCCCQQQCCCF", "        MCCCQQQCCC ", "        MCCCQQQCCCF", "         CCCCCCCCC ", "          CCCCCCC  ", "           CCCCC   ", "            F F    ", "                   ")
                    .aisle("  CCCCC            ", "  KKKKK            ", "  KaaaK    FFFFF   ", "  Ka~aK   FFOOOFF  ", "  KaaaK  FFO   OFF ", "  KaaaK FFO     OFF", "  KKKKK PO       OF", "        PO       OF", "        PO       OF", "        FFO     OFF", "         FFO   OFF ", "          FFOOOFF  ", "           FFFFF   ", "                   ")
                    .aisle("  CCCCC  CCCCCCCCC ", "  KKKKK  CCCCCCCCC ", "  K   K  CCGGGGGCC ", "  L   L  CGGHIHGGC ", "  L   L  GG H H GG ", "  L   L GG  H H  GG", "  KKKKK GHHHHHHHHHG", "        GI  H H  IG", "        GHHHHHHHHHG", "        GG  H H  GG", "         GG H H GG ", "          GGHIHGG  ", "           GGBGG   ", "             B     ")
                    .aisle("  CCCCC  CCCCCCCCC ", "  KKKKK  CCCCCCCCC ", "  KKKKK  CCGGGGGCC ", "  KKKKK  CGGHIHGGC ", "  KKKKK  GG     GG ", "  KKKKK GG       GG", "  KKKKK GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGG  ", "           GGGGG   ", "             B     ")
                    .aisle("         CCCCCCCCC ", "         CCCCCCCCC ", "         CCGGGGGCC ", "         CGGHIHGGC ", "         GG     GG ", "        GG       GG", "        GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGG  ", "           GGGGG   ", "             B     ")
                    .aisle("         CCCCCCCCC ", "         CCCCCCCCC ", "         CCGGGGGCC ", "         CGGHIHGGC ", "         GG     GG ", "        GG       GG", "        GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGG  ", "           GGGGG   ", "             B     ")
                    .aisle("         CCCCCCCCC ", "         CCCCCCCCC ", "         CCGGGGGCC ", "         CGGHIHGGC ", "         GG     GG ", "        GG       GG", "        GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGG  ", "          BGGGGG   ", "          BBBB     ")
                    .aisle("         CCCCCCCCC ", "         CCCCCCCCC ", "         CCGGGGGCC ", "         CGGHIHGGC ", "         GG     GG ", "        GG       GG", "        GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGG  ", "          BGGGGG   ", "                   ")
                    .aisle("CCCCCCC  CCCCCCCCC ", "GGGGGGG  CCCCCCCCC ", "GGGGGGG  CCGGGGGCC ", "GGGGGGG  CGGHIHGGC ", "GGGGGGG  GG     GG ", "GGGGGGG GG       GG", "GGGGGGG HH       HH", "GGGGGGG GI       IG", "GGGGGGG HH       HH", "GGGGGGG GG       GG", "         GG     GG ", "          GGHIHGG  ", "          BGGGGG   ", "                   ")
                    .aisle("CCCCCCC  CCCCCCCCC ", "GGGGGGG  CCCCCCCCC ", "G     G  CCGGGGGCC ", "G     G  CGGHIHGGC ", "G     G  GG     GG ", "G     G GG       GG", "G     G HH       HH", "G     G GI       IG", "G     G HH       HH", "GGGGGGG GG       GG", "  JJJ    GG     GG ", "          GGHIHGG  ", "          BGGGGG   ", "                   ")
                    .aisle("CCCCCCC  CCCCCCCCC ", "GGGGGGG  CCCCCCCCC ", "G     G  CCGGGGGCC ", "G     G  CGGHIHGGC ", "G     G  GG     GG ", "G     G GG       GG", "G     G HH       HH", "G     G GI       IG", "G     G HH       HH", "GGGAGGG GG       GG", "  JAJ    GG     GG ", "   A      GGHIHGG  ", "   A      BGGGGG   ", "   AAAAAAAA        ")
                    .aisle("CCCCCCCAAAA CCC    ", "GGGGGGGA    CCC    ", "G   AAAA   FFFFF   ", "G     G   FGHIHGF  ", "G     G  FG     GF ", "G     G FG       GF", "G     G FH       HF", "G     G FI       IF", "G     G FH       HF", "GGGGGGG FG       GF", "  JJJ    FG     GF ", "          FGHIHGF  ", "          BFFFFF   ", "          A        ")
                    .aisle("CCCCCCC   A CCC    ", "GGGGGGG     CCC    ", "G     G    GGGGG   ", "G     G   GGHIHGG  ", "G     G  GG     GG ", "G     G GG       GG", "G     G HH       HH", "G     G GI       IG", "G     G HH       HH", "GGGAGGG GG       GG", "  JAJ    GG     GG ", "   A      GGHIHGG  ", "   A      BGGGGG   ", "   AAAAAAAA        ")
                    .aisle("CCCCCCC   A CCC A  ", "GGGGGGG     CCC A  ", "G     G    GGGGGA  ", "G     G   GGHIHGA  ", "G     G  GG     AG ", "G     G GG       GG", "G     G HH       HH", "G     G GI       IG", "G     G HH       HH", "GGGGGGG GG       AG", "  JJJ    GG     GA ", "          GGHIHGGA ", "          BGGGGG   ", "          A        ")
                    .aisle("CCCCCCC   A CCC A  ", "GGGGGGG     CCC    ", "GGGGGGG    GGGGG   ", "GGGGGGG   GGHIHGG  ", "GGGGGGG  GG     GG ", "GGGGGGG GG       GG", "GGGGGGG HH       HH", "GGGGGGG GI       IG", "GGGGGGG HH       HH", "GGGGGGG GG       GG", "         GG     GG ", "          GGHIHGGA ", "          BGGGGG A ", "          AAAAAAAA ")
                    .aisle("          A CCC A  ", "            CCC    ", "           GGGGG   ", "          GGHIHGG  ", "         GG     GG ", "        GG       GG", "        GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGGA ", "          BGGGGG   ", "          A        ")
                    .aisle("          A CCC A  ", "            CCC    ", "           GGGGG   ", "          GGHIHGG  ", "         GG     GG ", "        GG       GG", "        GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGGA ", "          BGGGGG A ", "          AAAAAAAA ")
                    .aisle("CCCCCCC   A CCC A  ", "  EEE       CCC B  ", "  EEE      GGGGGB  ", "  EEE     GGHIHGB  ", "  EEE    GG     BG ", "  EEE   GG       GG", "  EEE   GH       HG", "  EEE   GI       IG", "  EEE   GH       HG", "   C    GG       GG", "         GG     GG ", "          GGHIHGGA ", "          BGGGGG   ", "          A        ")
                    .aisle("CCCCCCC   A CCC A  ", " EEEEE      CCC B  ", " E   E     GGGGG   ", " E   E    GGHIHGG  ", " E   E   GG     GG ", " E   E  GG       GG", " E   E  GH       HG", " E   E  GI       IG", " E   E  GH       HG", " CCCCC  GG       GG", "   C     GG     GG ", "          GGHIHGGA ", "          BGGGGG A ", "          AAAAAAAA ")
                    .aisle("CCCCCCC   A CCC A  ", "EEEEEEE     CCC B  ", "E     E    GGGGG   ", "E     E   GGHIHGG  ", "E     E  GG     GG ", "E     E GG       GG", "E     E GH       HG", "E     E GI       IG", "E     E GH       HG", " C   C  GG       GG", "  CCC    GG     GG ", "  JJJ     GGHIHGGA ", "          BGGGGG   ", "          A        ")
                    .aisle("CCCCCCC   A CCC A  ", "EEEEEEE     CCC B  ", "E  B  E    GGGGG   ", "E  B  E   GGHIHGG  ", "E  B  E  GG     GG ", "E  B  E GG       GG", "E  B  E GH       HG", "E  B  E GI       IG", "E  B  E GH       HG", "CC B CC GG       GG", " CCBCC   GG     GG ", "  JBJ     GGHIHGGA ", "   BBBBBBBBGGGGG A ", "          AAAAAAAA ")
                    .aisle("CCCCCCC   A CCC A  ", "EEEEEEE     CCC B  ", "E  B  E    GGGGG   ", "E  B  E   GGHIHGG  ", "E  B  E  GG     GG ", "E  B  E GG       GG", "E  B  E GH       HG", "E  B  E GI       IG", "E  B  E GH       HG", "CC B CC GG       GG", " CCBCC   GG     GG ", "  JBJ     GGHIHGGA ", "   BBBBBBBBGGGGG   ", "          A        ")
                    .aisle("CCCCCCC   A CCC A  ", "EEEEEEE     CCC B  ", "E  B  E    GGGGG   ", "E     E   GGHIHGG  ", "E     E  GG     GG ", "E     E GG       GG", "E     E GH       HG", "E     E GI       IG", "E     E GH       HG", " C   C  GG       GG", "  CCC    GG     GG ", "  JJJ     GGHIHGGA ", "           GGGGG A ", "          AAAAAAAA ")
                    .aisle("CCCCCCC   A CCC A  ", " EEEEE      CCC B  ", " E B E     GGGGG   ", " E   E    GGHIHGG  ", " E   E   GG     GG ", " E   E  GG       GG", " E   E  GH       HG", " E   E  GI       IG", " E   E  GH       HG", " CCCCC  GG       GG", "   C     GG     GG ", "          GGHIHGG  ", "           GGGGG   ", "                   ")
                    .aisle("CCCCCCC   A CCC A  ", "  EEE       CCC B  ", "  EBE      FFFFF   ", "  EEE     FFFFFFF  ", "  EEE    FFFFFFFFF ", "  EEE   FFFFFFFFFFF", "  EEE   FFFFFFFFFFF", "  EEE   FFFFFFFFFFF", "  EEE   FFFFFFFFFFF", "   C    FFFFFFFFFFF", "         FFFFFFFFF ", "          FFFFFFF  ", "           FFFFF   ", "                   ")
                    .aisle("          AAAAAAA  ", "   BBBBBBBBBBBBBB  ", "   B         C     ", "           CCCCC   ", "          CCCCCCC  ", "         CCCCCCCCC ", "         CCCDDDCCC ", "        CCCCDDDCCCC", "         CCCDDDCCC ", "         CCCCCCCCC ", "          CCCCCCC  ", "           CCCCC   ", "             C     ", "                   ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTBlocks.CASING_TUNGSTENSTEEL_TURBINE.get()))
                    .where('B', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where('C', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('D', blocks(GTBlocks.CASING_GRATE.get()))
                    .where('E', blocks(GTEBlocks.PRESSURE_CONTAINMENT_CASING.get()))
                    .where('F', blocks(GTEBlocks.RED_STEEL_CASING.get()))
                    .where('G', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where('H', heatingCoils())
                    .where('I', blocks(GTBlocks.CASING_TUNGSTENSTEEL_PIPE.get()))
                    .where('J', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Tungsten)))
                    .where('K', blocks(GTBlocks.COMPUTER_CASING.get()))
                    .where('L', blocks(GTBlocks.COMPUTER_HEAT_VENT.get()))
                    .where('M', blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where('O', blocks(GTBlocks.HERMETIC_CASING_LuV.get()))
                    .where('P', blocks(GTBlocks.CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where('Q', blocks(GTBlocks.FILTER_CASING.get()))
                    .where('a', blocks(GTBlocks.HIGH_POWER_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/hpca/high_power_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition MOLECULAR_OSCILLATION_DEHYDRATOR = multiblock("molecular_oscillation_dehydrator", "分子震荡脱水装置", CoilCrossRecipeMultiblockMachine::createCoilParallel)
            .noneRotation()
            .tooltipsText("Dehydration! Dehydration! Dehydration!", "脱水！脱水！脱水！")
            .recipe(GTERecipeTypes.DEHYDRATOR_RECIPES)
            .coilParallelTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GTBlocks.HIGH_POWER_CASING)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("           AAA           ", "           ABA           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("           AAA           ", "           ACA           ", "           BAB           ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("           AAA           ", "           ACA           ", "           BAB           ", "           A A           ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("         DDDDDDD         ", "         EEECEEE         ", "         DDDDDDD         ", "         DDDDDDD         ", "         DDADADD         ", "                         ", "                         ", "                         ")
                    .aisle("       DDDDDDDDDDD       ", "       EEE FCF EEE       ", "       DDD     DDD       ", "       DDD     DDD       ", "       DDD     DDD       ", "          EBCBE          ", "                         ", "                         ")
                    .aisle("      DDDDDDDDDDDDD      ", "      EE   FCF   EE      ", "      DD         DD      ", "      DD         DD      ", "      DD         DD      ", "        EEEGCGEEE        ", "          HHHHH          ", "           HHH           ")
                    .aisle("     DDDDDDDDDDDDDDD     ", "     EE    FCF    EE     ", "     DD           DD     ", "     DD           DD     ", "     DD           DD     ", "       EE  GCG  EE       ", "        HHHHHHHHH        ", "         HHH HHH         ")
                    .aisle("    DDDDDDDDDDDDDDDDD    ", "    EE I  IFCFI  I EE    ", "    DD HHHH   HHHH DD    ", "    DD HHHH   HHHH DD    ", "    DD HHHH   HHHH DD    ", "      EE  IGCGI  EE      ", "       HHHJHHHJHHH       ", "        HH K K HH        ")
                    .aisle("    DDDDDDDDDDDDDDDDD    ", "    E      FCF      E    ", "    D  HJJH   HJJH  D    ", "    D  H  B   B  H  D    ", "    D  HJJH   HJJH  D    ", "     EE    GCG    EE     ", "      HHHJJHHHJJHHH      ", "       HH  K K  HH       ")
                    .aisle("   DDDDDDDDDDDDDDDDDDD   ", "   EE      FCF      EE   ", "   DD  HJJH   HJJH  DD   ", "   DD  H  B   B  H  DD   ", "   DD  HJFH   HFJH  DD   ", "     E   F GCG F   E     ", "      HHJJJHHHJJJHH      ", "      HH   aaa   HH      ")
                    .aisle("   DDDDDDDDDDDDDDDDDDD   ", "   E   I  IFCFI  I   E   ", "   D   HHHH   HHHH   D   ", "   D   HBBH   HBBH   D   ", "   D   HHHH   HHHH   D   ", "    EE I  IGCGI  I EE    ", "     HHJJJJHHHJJJJHH     ", "      H    aaa    H      ")
                    .aisle("AAADDDDDDDDDDDDDDDDDDDAAA", "AAAEFFFFFFFFCFFFFFFFFEAAA", " BBD                 DBB ", "  AD                 DA  ", "   A                 A   ", "    BGGGGGGGCGGGGGGGB    ", "     HHHHHHGHGHHHHHH     ", "     HHKKaaGGGaaKKHH     ")
                    .aisle("AAADDDDDDDDDDDDDDDDDDDAAA", "BCCCCCCCCCCCICCCCCCCCCCCB", " AAD        I        DAA ", "   D        I        D   ", "   D        I        D   ", "    CCCCCCCCICCCCCCCC    ", "     HHHHHHHIHHHHHHH     ", "     H   aaG~Gaa   H     ")
                    .aisle("AAADDDDDDDDDDDDDDDDDDDAAA", "AAAEFFFFFFFFCFFFFFFFFEAAA", " BBD                 DBB ", "  AD                 DA  ", "   A                 A   ", "    BGGGGGGGCGGGGGGGB    ", "     HHHHHHGHGHHHHHH     ", "     HHKKaaGGGaaKKHH     ")
                    .aisle("   DDDDDDDDDDDDDDDDDDD   ", "   E   I  IFCFI  I   E   ", "   D   HHHH   HHHH   D   ", "   D   HBBH   HBBH   D   ", "   D   HHHH   HHHH   D   ", "    EE I  IGCGI  I EE    ", "     HHJJJJHHHJJJJHH     ", "      H    aaa    H      ")
                    .aisle("   DDDDDDDDDDDDDDDDDDD   ", "   EE      FCF      EE   ", "   DD  HJJH   HJJH  DD   ", "   DD  H  B   B  H  DD   ", "   DD  HJFH   HFJH  DD   ", "     E   F GCG F   E     ", "      HHJJJHHHJJJHH      ", "      HH   aaa   HH      ")
                    .aisle("    DDDDDDDDDDDDDDDDD    ", "    E      FCF      E    ", "    D  HJJH   HJJH  D    ", "    D  H  B   B  H  D    ", "    D  HJJH   HJJH  D    ", "     EE    GCG    EE     ", "      HHHJJHHHJJHHH      ", "       HH  K K  HH       ")
                    .aisle("    DDDDDDDDDDDDDDDDD    ", "    EE I  IFCFI  I EE    ", "    DD HHHH   HHHH DD    ", "    DD HHHH   HHHH DD    ", "    DD HHHH   HHHH DD    ", "      EE  IGCGI  EE      ", "       HHHJHHHJHHH       ", "        HH K K HH        ")
                    .aisle("     DDDDDDDDDDDDDDD     ", "     EE    FCF    EE     ", "     DD           DD     ", "     DD           DD     ", "     DD           DD     ", "       EE  GCG  EE       ", "        HHHHHHHHH        ", "         HHH HHH         ")
                    .aisle("      DDDDDDDDDDDDD      ", "      EE   FCF   EE      ", "      DD         DD      ", "      DD         DD      ", "      DD         DD      ", "        EEEGCGEEE        ", "          HHHHH          ", "           HHH           ")
                    .aisle("       DDDDDDDDDDD       ", "       EEE FCF EEE       ", "       DDD     DDD       ", "       DDD     DDD       ", "       DDD     DDD       ", "          EBCBE          ", "                         ", "                         ")
                    .aisle("         DDDDDDD         ", "         EEECEEE         ", "         DDDDDDD         ", "         DDDDDDD         ", "         DDADADD         ", "                         ", "                         ", "                         ")
                    .aisle("           AAA           ", "           ACA           ", "           BAB           ", "           A A           ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("           AAA           ", "           ACA           ", "           BAB           ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("           AAA           ", "           ABA           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.MOLECULAR_CASING.get()))
                    .where('B', blocks(GTEBlocks.CONTAINMENT_FIELD_GENERATOR.get()))
                    .where('C', blocks(GTEBlocks.DEGENERATE_RHENIUM_CONSTRAINED_CASING.get()))
                    .where('a', blocks(GTEBlocks.IRIDIUM_CASING.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('D', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('E', blocks(GTEBlocks.RED_STEEL_CASING.get()))
                    .where('F', blocks(GTEBlocks.AMPROSIUM_PIPE_CASING.get()))
                    .where('G', heatingCoils())
                    .where('H', blocks(GTEBlocks.PRESSURE_CONTAINMENT_CASING.get()))
                    .where('I', blocks(GTEBlocks.AMPROSIUM_GEARBOX.get()))
                    .where('J', blocks(GTBlocks.CASING_GRATE.get()))
                    .where('K', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.HastelloyN)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/iridium_casing"), GTCEu.id("block/multiblock/cleanroom"))
            .register();

    MultiblockMachineDefinition HORIZONTAL_COMPRESSOR = multiblock("horizontal_compressor", "卧式压缩机", CrossRecipeMultiblockMachine::createHatchParallel)
            .allRotation()
            .recipe(GTERecipeTypes.COMPRESSOR_RECIPES)
            .recipe(GTERecipeTypes.GAS_COMPRESSOR_RECIPES)
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)
            .block(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST)
            .pattern((definition) -> FactoryBlockPattern.start(RelativeDirection.RIGHT, RelativeDirection.UP, RelativeDirection.BACK)
                    .aisle("aa  aaa  aa", "aa  a~a  aa", "a         a", "A    C    A", "A   CCC   A", "A  CCCCC  A", "A   CCC   A", "A    C    A", "AAAAAAAAAAA", "A         A")
                    .aisle("AAaaAAAaaAA", "AAaaAAAaaAA", "AaaaaaaaaaA", "A   LLL   A", "A  L   L  A", "A  L   L  A", "A  L   L  A", "A   LLL   A", "AAAAAAAAAAA", "A         A")
                    .aisle("AAAAAAAAAAA", "           ", "           ", "    LLL    ", "   L   L   ", "   L   L   ", "   L   L   ", "    LLL    ", "A         A", "           ")
                    .aisle("AAAAAAAAAAA", "           ", "           ", "    LLL    ", "   L   L   ", "   L   L   ", "   L   L   ", "    LLL    ", "A         A", "           ")
                    .aisle("AAAAAAAAAAA", "           ", "           ", "    LLL    ", "   L   L   ", "   L   L   ", "   L   L   ", "    LLL    ", "A         A", "           ")
                    .aisle("AAAAAAAAAAA", "           ", "  B     B  ", "    LLL    ", "   L   L   ", "   L   L   ", "   L   L   ", "    LLL    ", "A B     B A", "           ")
                    .aisle("AAAAAAAAAAA", "ABBBBBBBBBA", "ABBBBBBBBBA", "ABBBBBBBBBA", "ABBBLLLBBBA", "ABBBL LBBBA", "ABBBLLLBBBA", "ABBBBBBBBBA", "ABBBBBBBBBA", "ABBBBBBBBBA")
                    .aisle("AAAAAAAAAAA", " BBBBBBBBB ", " BBBBBBBBB ", " BBBBBBBBB ", " BBBKJKBBB ", " BBBJJJBBB ", " BBBKJKBBB ", " BBBBBBBBB ", "ABBBBBBBBBA", " BBBBBBBBB ")
                    .aisle("AAAAAAAAAAA", "ABBBBBBBBBA", "ABEBBBBBEBA", "ABBBBBBBBBA", "ABBB J BBBA", "ABBBJJJBBBA", "ABBB J BBBA", "ABBBBBBBBBA", "ABEBBBBBEBA", "ABBBBBBBBBA")
                    .aisle("AAAAAAAAAAA", " CCC   CCC ", " CEC   CEC ", " CCC   CCC ", "     J     ", "    JJJ    ", "     J     ", " CCC   CCC ", " CEC   CEC ", " CCC   CCC ")
                    .aisle("AAAAAAAAAAA", " CCC   CCC ", " CEC   CEC ", " CCC   CCC ", "     J     ", "    JJJ    ", "     J     ", " CCC   CCC ", " CEC   CEC ", " CCC   CCC ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "     J     ", "    JJJ    ", "     J     ", "           ", "  E     E  ", "           ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "     J     ", "    JJJ    ", "     J     ", "           ", "  E     E  ", "           ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "     J     ", "    JJJ    ", "     J     ", "           ", "  E     E  ", "           ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "     J     ", "    JJJ    ", "     J     ", "           ", "  E     E  ", "           ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "     J     ", "    JJJ    ", "     J     ", "           ", "  E     E  ", "           ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "     J     ", "    JJJ    ", "     J     ", "           ", "  E     E  ", "           ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "     J     ", "    JJJ    ", "     J     ", "           ", "  E     E  ", "           ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "     J     ", "    JJJ    ", "     J     ", "           ", "  E     E  ", "           ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "     J     ", "    JJJ    ", "     J     ", "           ", "  E     E  ", "           ")
                    .aisle("AA AAAAA AA", "  HIIIIIH  ", " HEH   HEH ", " IHHH HHHI ", " I HHJHH I ", " I  JJJ  I ", " I HHJHH I ", " IHHH HHHI ", " HEH   HEH ", "  HIIIIIH  ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "    DDD    ", "    DDD    ", "    DDD    ", "           ", "  E     E  ", "           ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "    GGG    ", "    GGG    ", "    GGG    ", "           ", "  E     E  ", "           ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "           ", "           ", "           ", "           ", "  E     E  ", "           ")
                    .aisle("AA AAAAA AA", "           ", "  E     E  ", "           ", "           ", "           ", "           ", "           ", "  E     E  ", "           ")
                    .aisle("AAAAAAAAAAA", " CCC   CCC ", " CEC   CEC ", " CCCDDDCCC ", "   D   D   ", "   D   D   ", "   D   D   ", " CCCDDDCCC ", " CEC   CEC ", " CCC   CCC ")
                    .aisle("AAAAAAAAAAA", " CCC   CCC ", " CEC   CEC ", " CCCDDDCCC ", "   D   D   ", "   D   D   ", "   D   D   ", " CCCDDDCCC ", " CEC   CEC ", " CCC   CCC ")
                    .aisle("AAAAAAAAAAA", "ABBBBBBBBBA", "ABEBBBBBEBA", " BBBBBBBBB ", " BBBFFFBBB ", " BBBFFFBBB ", " BBBFFFBBB ", " BBBBBBBBB ", " BEBBBBBEB ", " BBBBBBBBB ")
                    .aisle("AAAAAAAAAAA", " BBBBBBBBB ", " BBBBBBBBB ", " BBBBBBBBB ", " BBBDDDBBB ", " BBDDDDDBB ", " BBBDDDBBB ", " BBBBDBBBB ", " BBBBBBBBB ", " BBBBBBBBB ")
                    .aisle("AAAAAAAAAAA", "ABBBBBBBBBA", "ABBBBBBBBBA", " BBBBBBBBB ", " BBBCCCBBB ", " BBBCCCBBB ", " BBBCCCBBB ", " BBBBBBBBB ", " BBBBBBBBB ", " BBBBBBBBB ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST.get()))
                    .where('B', blocks(GCYMBlocks.CASING_VIBRATION_SAFE.get()))
                    .where('C', blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where('D', blocks(GTEBlocks.HIGH_PRESSURE_RESISTANT_CASING.get()))
                    .where('E', blocks(GTBlocks.CASING_STAINLESS_TURBINE.get()))
                    .where('F', blocks(ChemicalHelper.getBlock(TagPrefix.block, GTMaterials.Neutronium)))
                    .where('G', blocks(GTBlocks.CASING_STEEL_SOLID.get()))
                    .where('H', blocks(GCYMBlocks.CASING_REACTION_SAFE.get()))
                    .where('I', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTEMaterials.HastelloyN)))
                    .where('J', blocks(GTEBlocks.IRIDIUM_CASING.get()))
                    .where('K', blocks(GTBlocks.HERMETIC_CASING_UV.get()))
                    .where('L', blocks(GTEBlocks.PRESSURE_CONTAINMENT_CASING.get()))
                    .where('a', blocks(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST.get())
                            .or(GTEPredicates.autoThreadLaserAbilities(definition.getRecipeTypes()))
                            .or(abilities(PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_robust_tungstensteel"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    MultiblockMachineDefinition WATER_PURIFICATION_PLANT = multiblock("water_purification_plant", "净化处理厂", WaterPurificationPlantMachine::new)
            .nonYAxisRotation()
            .tooltipsText("Processing unit controllers can be placed freely within a §632§r block radius.", "可以在§632§r个方块半径内自由放置处理单元控制器")
            .tooltipsText("Shift-right-click the processing unit controller with flash memory, then shift-right-click that controller to link.", "用闪存潜行右键点击处理单元控制器，然后潜行右键点击该控制器进行链接")
            .tooltipsText("Provide power to the linked processing §6unit controllers§r. This multi-block structure accepts laser chambers, default energy consumption = input water count x 2^(output purification water tier - 2).", "为链接的处理§6单元控制器§r提供电力。该多方块结构接受激光仓，默认耗能=输出水量x2^(输出的净化水等级等级-2)")
            .tooltipsKey("gtocore.machine.clarifier_purification_unit.tooltip.3")
            .tooltipsText("Operates with a fixed processing cycle of §6120§r seconds.", "以固定的§6120§r秒处理周期工作")
            .tooltipsText("All linked processing unit controllers follow this cycle; purified water output is the volume of input water x 0.9mB.", "所有链接的处理单元控制器都遵循这个周期，净化水输出量为输入水量x0.9mB")
            .tooltipsKey("gtocore.machine.clarifier_purification_unit.tooltip.3")
            .tooltipsText("§a§oPollutants and ionic particles in water can cause significant defects during the precise processes of wafer and chip cutting and engraving.", "§a§o水中的污染物和离子颗粒会在硅片和芯片切割和雕刻的精密过程中造成显著的缺陷")
            .tooltipsText("§a§oIt is crucial to systematically purify the water through a series of increasingly precise and complex processes, and this multi-block structure is the core of the operation.", "§a§o通过一系列越来越精确和复杂的净化过程系统地净化水是至关重要的，而这个多方块结构是操作的核心")
            .recipe(GTERecipeTypes.WATER_PURIFICATION_PLANT_RECIPES)
            .block(GTEBlocks.STERILE_WATER_PLANT_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAA", "CEEEEEC", "CEFFFEC", "CEEEEEC", "CCCCCCC", "       ", "       ", "       ", "       ")
                    .aisle("AAAAAAA", "E     E", "E     E", "E     E", "CEEEEEC", " B   B ", " B   B ", " B   B ", " B   B ")
                    .aisle("AAAAAAA", "E     E", "F     E", "E     E", "CEEEEEC", "  CCC  ", "  CCC  ", "  CCC  ", "  CCC  ")
                    .aisle("AAAAAAA", "E     E", "F     E", "E     E", "CEEEEEC", "  CGC  ", "  CGC  ", "  CGC  ", "  CGC  ")
                    .aisle("AAAAAAA", "E     E", "F     E", "E     E", "CEEEEEC", "  CCC  ", "  CCC  ", "  CCC  ", "  CCC  ")
                    .aisle("AAAAAAA", "E     E", "E     E", "E     E", "CEEEEEC", " BBCBB ", " B   B ", " B   B ", " B   B ")
                    .aisle("AAAAAAA", "CEEEEEC", "CEEEEEC", "CEEEEEC", "CCCCCCC", "  BCB  ", "       ", "       ", "       ")
                    .aisle("AAAAAAA", "  BaB  ", "  B~B  ", "  BaB  ", "  BaB  ", "  BaB  ", "       ", "       ", "       ")
                    .where('~', controller(blocks(definition.get())))
                    .where('B', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Naquadah)))
                    .where('C', blocks(GTEBlocks.STERILE_WATER_PLANT_CASING.get()))
                    .where('a', blocks(GTEBlocks.STERILE_WATER_PLANT_CASING.get())
                            .or(abilities(INPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(INPUT_ENERGY).setMaxGlobalLimited(2)))
                    .where('F', blocks(GTEBlocks.CHEMICAL_GRADE_GLASS.get()))
                    .where('G', air())
                    .where('A', blocks(GTEBlocks.HIGH_STRENGTH_CONCRETE.get()))
                    .where('E', blocks(GTEBlocks.REINFORCED_STERILE_WATER_PLANT_CASING.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/sterile_water_plant_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();

    MultiblockMachineDefinition CLARIFIER_PURIFICATION_UNIT = multiblock("clarifier_purification_unit", "澄清器净化装置", ClarifierPurificationUnitMachine::new)
            .nonYAxisRotation()
            .tooltipsText("§aPurified Water Level§r: §f1§r", "§a净化水等级§r: §f1§r")
            .tooltipsText("After processing a certain amount of water, the filter block will become clogged. At this point, a large amount of air (1-8KB) and water (200-300B) is required for backflushing. During backflushing, a certain amount of waste will be output.", "在处理一定量的水后会堵塞过滤器方块，此时需要输入大量空气（1-8KB）与水（200-300B）进行反冲洗，冲洗时输出一定量的废料")
            .tooltipsText("Base output probability is 70%, inputting a small amount of the same level purified water increases the chance by 15%, and higher levels increase by an additional 5% per level, reaching 100% at the maximum of 4 levels.", "基础产出概率为70%，输入少量同等级净化水可提升15%，更高等级每级额外增加5%，最高4级达到100%")
            .tooltipsText("----------------------------------------------------------------", "----------------------------------------------------------------")
            .tooltipsText("§a§oThe first step to obtaining purified water is to filter out macro contaminants using large physical filters.", "§a§o获得净化水的第一步是通过使用大型物理过滤器过滤掉宏观污染物")
            .tooltipsText("§a§oAs through rapid sand filtration for primary water treatment, 85% of bacteria and almost all turbidity (including silt, fine sand, micro-organic matter, inorganic matter, and floating organisms etc. suspended particles and colloids) are removed.", "§a§o通过快速沙滤进行初级水处理，移除水中85%的细菌与几乎所有浊度（泥土、粉砂、微细有机物、无机物、浮游生物等悬浮物和胶体物）")
            .recipe(GTERecipeTypes.WATER_PURIFICATION_PLANT_RECIPES)
            .block(GTEBlocks.REINFORCED_STERILE_WATER_PLANT_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAAAAAA", "AFFFAAAFFFA", "AFFFAAAFFFA", "AFFFAAAFFFA", "AAAAAAAAAAA")
                    .aisle("AFFFAAAFFFA", "FGGGFEFGGGF", "FHHHFEFHHHF", "FEEEF FEEEF", "A         A")
                    .aisle("AFFFAAAFFFA", "FGGGFEFGGGF", "FHHHFEFHHHF", "FEEEF FEEEF", "A         A")
                    .aisle("AFFFAAAFFFA", "FGGGFEFGGGF", "FHHHFEFHHHF", "FEEEF FEEEF", "A         A")
                    .aisle("AFDFAAAFDFA", "FGDGFEFGDGF", "FHHHFEFHHHF", "FEEEF FEEEF", "A         A")
                    .aisle("AADDDDDDDAA", "AFFFAEAFFFA", "AFFFAEAFFFA", "AFFFA AFFFA", "A         A")
                    .aisle("AAAADADAAAA", "AEEEEEEEEEA", "AEEEEEEEEEA", "A         A", "A         A")
                    .aisle("BBBBBBBBBBB", "ABBBBCBBBBA", "ABBBBBBBBBA", "AAAAAAAAAAA", "AAAAAAAAAAA")
                    .where('A', blocks(GTEBlocks.REINFORCED_STERILE_WATER_PLANT_CASING.get()))
                    .where('B', blocks(GTEBlocks.REINFORCED_STERILE_WATER_PLANT_CASING.get())
                            .or(abilities(IMPORT_FLUIDS).setMaxGlobalLimited(3))
                            .or(abilities(EXPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(EXPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('C', controller(blocks(definition.get())))
                    .where('D', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('E', air())
                    .where('F', blocks(GTEBlocks.STERILE_WATER_PLANT_CASING.get()))
                    .where('G', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.StainlessSteel)))
                    .where('H', blocks(GTBlocks.FILTER_CASING.get()))
                    .where(' ', any())
                    .build())
            .renderer(FluidRenderer.create(GTECore.id("block/reinforced_sterile_water_plant_casing"), GTCEu.id("block/multiblock/large_chemical_reactor")))
            .hasTESR(true)
            .register();

    MultiblockMachineDefinition OZONATION_PURIFICATION_UNIT = multiblock("ozonation_purification_unit", "臭氧净化装置", OzonationPurificationUnitMachine::new)
            .nonYAxisRotation()
            .tooltipsText("§aPurified Water Level§r: §f2§r", "§a净化水等级§r: §f2§r")
            .tooltipsText("Ozone consumption = input water amount / 10000mB. If the inlet contains more than §61024B§r of §bOzone Gas§r, an explosion will occur.", "臭氧消耗量=输入水量/10000mB，如果输入口含有超过§61024B§r的§b臭氧气体§r，将发生爆炸")
            .tooltipsText("The output probability of §bOzone Gas§r in the range of 0-1024B is 0-80%, inputting a small amount of the same level water can increase it by 15%, and higher levels increase by an additional 5%.", "§b臭氧气体§r在0-1024B范围内的产出概率为0-80%，输入少量同等级水可提升15%，更高一级额外提升5%")
            .tooltipsKey("gtocore.machine.clarifier_purification_unit.tooltip.3")
            .tooltipsText("§a§oThe second step of water purification is azonation, which involves injecting a large amount of small molecules", "§a§o净化水的第二步是偶氮化，这涉及到注入大量的小分子")
            .tooltipsText("§a§oThe bubbles of highly reactive ozone gas enter the water. This can remove trace element contaminants such as", "§a§o高反应性臭氧气体的气泡进入水中。这可以去除微量元素污染物，如")
            .tooltipsText("§a§oSulfur, Iron, and Manganese, producing insoluble oxidized compounds, which are then filtered out.", "§a§o硫、铁和锰，产生不溶的氧化物化合物，然后被过滤掉")
            .recipe(GTERecipeTypes.WATER_PURIFICATION_PLANT_RECIPES)
            .block(GTEBlocks.OZONE_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("     AAA ", "     AAA ", "     AAA ", "     AAA ", "     AAA ", "     AAA ", "      A  ", "      A  ", "         ", "         ")
                    .aisle("C   AAAAA", "C   A   A", "C   A   A", "EEEEA   A", "EDDEA   A", "EEEEA   A", "     A A ", "     A A ", "      A  ", "      A  ")
                    .aisle("    AAAAA", "  FFA   A", "  F A   A", "EEEEA   A", "E  EA   A", "EDDEA   A", "    A   A", "    A   A", "     A A ", "     AAA ")
                    .aisle("C   AAAAA", "C   A D A", "C   A D A", "EEEEA D A", "EDDEA   A", "EEEEA   A", "     A A ", "     A A ", "      A  ", "      A  ")
                    .aisle("     A~A ", "     A A ", "     A A ", "     A A ", "     AAA ", "     AAA ", "      A  ", "      A  ", "         ", "         ")
                    .where('~', controller(blocks(definition.get())))
                    .where('E', blocks(GTEBlocks.HIGH_PRESSURE_RESISTANT_CASING.get()))
                    .where('A', blocks(GTEBlocks.OZONE_CASING.get())
                            .or(abilities(IMPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1))
                            .or(abilities(EXPORT_FLUIDS).setMaxGlobalLimited(1).setPreviewCount(1)))
                    .where('C', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.HSSE)))
                    .where('D', blocks(GTEBlocks.CHEMICAL_GRADE_GLASS.get()))
                    .where('F', blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/ozone_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();

    MultiblockMachineDefinition FLOCCULATION_PURIFICATION_UNIT = multiblock("flocculation_purification_unit", "絮凝净化装置", FlocculationPurificationUnitMachine::new)
            .nonYAxisRotation()
            .tooltipsText("§aPurified Water Level§r: §f3§r", "§a净化水等级§r: §f3§r")
            .tooltipsText("Provide §bPolymeric Aluminum Chloride§r for operation.", "提供§b聚合氯化铝§r以进行操作")
            .tooltipsText("Outputs recyclable §bFlocculent Waste Liquid§r.", "输出可循环利用的§b絮凝废液§r")
            .tooltipsText("During operation, all §bPolymeric Aluminum Chloride§r in the input chamber will be consumed.", "在操作过程中，将消耗输入仓中的所有§b聚合氯化铝§r")
            .tooltipsText("At the end of the recipe, for every consumed §6100000mB§r of §bPolymeric Aluminum Chloride§r, the success rate will be further increased by §410.0%§r.", "在配方结束时，每消耗§6100000mB§r§b聚合氯化铝§r，成功率会额外增加§410.0%§r")
            .tooltipsText("If the total amount of liquid provided is not a multiple of §6100000mB§r, the following formula applies a success rate penalty:", "如果提供的液体总量不是§6100000mB§r的倍数，则根据以下公式应用成功率惩罚")
            .tooltipsText("§9Success Rate = Success Rate * 2 ^ (-10 * Overflow Ratio)", "§9成功率 = 成功率 * 2 ^ (-10 * 溢出比率)")
            .tooltipsKey("gtocore.machine.clarifier_purification_unit.tooltip.3")
            .tooltipsText("§a§oThe third step of water purification uses a flocculent (in this case, Polymeric Aluminum Chloride) to remove microscopic contaminants,", "§a§o净化水的第三步是使用澄清剂（在本例中为聚合氯化铝）去除微观污染物，")
            .tooltipsText("§a§o such as dust, microplastics, and other pollutants, through flocculation that causes solution dispersed suspended particles to conglomerate into larger clumps for further filtering.", "§a§o如灰尘、微塑料和其他污染物，通过絮凝使溶液中的分散悬浮颗粒聚集成更大的团块，以便进一步过滤")
            .recipe(GTERecipeTypes.WATER_PURIFICATION_PLANT_RECIPES)
            .block(GTEBlocks.FLOCCULATION_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("HH     HH", "HH     HH", "HH     HH", "HH     HH")
                    .aisle("HAAAAAAAH", "HAAAAAAAH", "HAAAAAAAH", "HGG   GGH")
                    .aisle(" ACCCCCA ", " AGDDDGA ", " AG###GA ", " GG   GG ")
                    .aisle(" ACEEECA ", " FDDDDDF ", " A#####A ", "         ")
                    .aisle(" ACEEECA ", " FDDDDDF ", " A#####A ", "         ")
                    .aisle(" ACEEECA ", " FDDDDDF ", " A#####A ", "         ")
                    .aisle(" ACCCCCA ", " ADDDDDA ", " A#####A ", "         ")
                    .aisle(" AAAAAAA ", " AAA~AAA ", " AAAAAAA ", "         ")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', blocks(GTEBlocks.FLOCCULATION_CASING.get())
                            .or(abilities(IMPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1))
                            .or(abilities(EXPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1)))
                    .where('H', blocks(GTEBlocks.REINFORCED_STERILE_WATER_PLANT_CASING.get()))
                    .where('F', blocks(GTEBlocks.CHEMICAL_GRADE_GLASS.get()))
                    .where('D', air())
                    .where('E', blocks(GTBlocks.FILTER_CASING.get()))
                    .where('G', frames(GTMaterials.StainlessSteel))
                    .where('C', blocks(GTEBlocks.FLOCCULATION_CASING.get()))
                    .where(' ', any())
                    .where('#', air())
                    .build())
            .workableCasingRenderer(GTECore.id("block/flocculation_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();

    MultiblockMachineDefinition PH_NEUTRALIZATION_PURIFICATION_UNIT = multiblock("ph_neutralization_purification_unit", "pH中和净化装置", PHNeutralizationPurificationUnitMachine::new)
            .allRotation()
            .tooltipsText("§aPurified Water Level§r: §f4§r", "§a净化水等级§r: §f4§r")
            .tooltipsText("The initial pH value of each cycle varies between §64.5§r to §69.5§r.", "每个周期的初始pH值在§64.5§r至§69.5§r之间变化")
            .tooltipsText("If the pH value is within the §67.0 pH§r's §6±0.05 pH§r range at the end of the cycle, the recipe will always succeed.", "如果周期结束时pH值在§67.0 pH§r的§6±0.05 pH§r范围内，则配方总是成功")
            .tooltipsText("Otherwise, the recipe will always fail.", "否则，配方总是失败")
            .tooltipsText("The machine can read the current pH value and output a redstone signal using a pH sensor.", "机器工作时可使用pH传感器读取当前pH值并输出红石信号")
            .tooltipsText("Consumes all input of §bSodium Hydroxide§r and §bHydrochloric Acid§r every second.", "每秒消耗所有输入的§b氢氧化钠§r和§b盐酸§r")
            .tooltipsText("Each consumed §bSodium Hydroxide Powder§r raises the pH value by §60.01§r.", "每消耗1个§b氢氧化钠粉§r，pH值提高§60.01§r")
            .tooltipsText("Each consumed §610§rmB§bHydrochloric Acid§r lowers the pH value by §60.01§r.", "每消耗§610§rmB§b盐酸§r，pH值降低§60.01§r")
            .tooltipsKey("gtocore.machine.clarifier_purification_unit.tooltip.3")
            .tooltipsText("§a§oThe fourth step of water purification is to neutralize the solution and adjust its pH value precisely to 7, making the solution inert with no hydrogen ion activity other than that of water.", "§a§o水净化的第四步是中和溶液并将其pH值精确调节到7，使溶液呈惰性，无水以外的氢离子活动")
            .tooltipsText("§a§oAcids and bases in soil and geology can cause natural alkalinity variations in water, possibly leading to corrosion reactions with sensitive materials.", "§a§o土壤和地质中的酸和碱会导致水的天然碱度变化，可能会与敏感材料发生腐蚀反应")
            .tooltipsText("§a§oThus, appropriate neutralizers need to be used to balance the pH value of the water.", "§a§o因此，需要使用相应的中和剂来平衡水的pH值")
            .recipe(GTERecipeTypes.WATER_PURIFICATION_PLANT_RECIPES)
            .block(GTEBlocks.STABILIZED_NAQUADAH_WATER_PLANT_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("ABBBA     ABBBA", "ABCBA     ABCBA", "ABCBA     ABCBA", "ABCBA     ABCBA", "ABBBA     ABBBA", "A   A     A   A")
                    .aisle("BBBBB     BBBBB", "B   BGDDDDB   B", "B   B     B   B", "B   B     B   B", "B   B     B   B", " BBB       BBB ")
                    .aisle("BBBBBDDDDDBBBBB", "C             C", "C   BDDDDDB   C", "C   B     B   C", "B   B     B   B", " BFB       BGB ")
                    .aisle("BBBBB     BBBBB", "B   BDD~DDB   B", "B   B     B   B", "B   B     B   B", "B   B     B   B", " BBB       BBB ")
                    .aisle("ABBBA     ABBBA", "ABCBA     ABCBA", "ABCBA     ABCBA", "ABCBA     ABCBA", "ABBBA     ABBBA", "A   A     A   A")
                    .where('~', controller(blocks(definition.get())))
                    .where('A', frames(GTMaterials.Naquadah))
                    .where('F', abilities(IMPORT_ITEMS))
                    .where('G', abilities(IMPORT_FLUIDS))
                    .where('B', blocks(GTEBlocks.INERT_NEUTRALIZATION_WATER_PLANT_CASING.get()))
                    .where('C', blocks(GTEBlocks.CHEMICAL_GRADE_GLASS.get()))
                    .where('D', blocks(GTEBlocks.STABILIZED_NAQUADAH_WATER_PLANT_CASING.get())
                            .or(blocks(GTEMachines.PH_SENSOR.getBlock()).setMaxGlobalLimited(2).setPreviewCount(1))
                            .or(abilities(IMPORT_FLUIDS).setMaxGlobalLimited(1).setPreviewCount(1))
                            .or(abilities(EXPORT_FLUIDS).setMaxGlobalLimited(1).setPreviewCount(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/stabilized_naquadah_water_plant_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();

    MultiblockMachineDefinition EXTREME_TEMPERATURE_FLUCTUATION_PURIFICATION_UNIT = multiblock("extreme_temperature_fluctuation_purification_unit", "极端温度波动净化装置", ExtremeTemperatureFluctuationPurificationUnitMachine::new)
            .allRotation()
            .tooltipsText("§aPurified Water Level§r: §f5§r", "§a净化水等级§r: §f5§r")
            .tooltipsText("Complete the heating cycle by first heating the §bWater§r to above §610000K§r and then cooling it to below §610K§r.", "完成加热周期，先将§b水§r加热到§610000K§r以上，然后再冷却至低于§610K§r")
            .tooltipsText("Initial temperature reset to §6298K§r at the start of the recipe.", "配方开始时初始温度重置为§6298K§r")
            .tooltipsText("For each completed heating cycle, success rate increases by §433%§r.", "每完成一个加热周期，成功率增加§433%§r")
            .tooltipsText("If the temperature reaches §612500K§r, the recipe will fail and output §bSupercritical Steam§r.", "如果温度达到§612500K§r，配方将失败并输出§b超临界蒸汽§r")
            .tooltipsText("Consumes up to §610mB§r of §bHelium Plasma§r and §6100mB§r of §bLiquid Helium§r per second.", "每秒最多消耗§610mB§r§b氦等离子体§r和§6100mB§r§b液氦§r")
            .tooltipsText("Each consumption of 1mB §bHelium Plasma§r raises the temperature by §680-120K§r.", "每消耗一mB§b氦等离子体§r，温度mB高§680-120K§r")
            .tooltipsText("Each consumption of 1mB §bLiquid Helium§r lowers the temperature by §64-6K§r.", "每消耗一mB§b液氦§r，温度降低§64-6K§r")
            .tooltipsKey("gtocore.machine.clarifier_purification_unit.tooltip.3")
            .tooltipsText("§a§oThe fifth step of water purification evaporates complex organic polymers and extreme microorganisms that may resist simple acids, clarifiers, and filters.", "§a§o水净化的第五步是蒸发复杂有机聚合物和可能对简单酸、澄清剂和过滤器有抵抗力的极端微生物")
            .tooltipsText("§a§oUsing ultra-high pressure chambers combined with extreme temperature fluctuations allows the water to remain in a supercritical state while evaporating any remaining contaminants in preparation for filtering.", "§a§o使用超高压腔室结合极端温度波动，可以使水保持超临界状态，同时蒸发任何残留的污染物，准备进行过滤")
            .recipe(GTERecipeTypes.WATER_PURIFICATION_PLANT_RECIPES)
            .block(GTEBlocks.PLASMA_HEATER_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("             AAAAA     ", "             AAAAA     ", "             AAAAA     ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "            AAAAAAA    ")
                    .aisle("           AAAAAAAAA   ", "           AA     AA   ", "           AA     AA   ", "             AAAAA     ", "             AAAAA     ", "             AAAAA     ", "             AAAAA     ", "                       ", "                       ", "                       ", "                       ", "                       ", "             AAAAA     ", "            AAAAAAA    ", "          AA       AA  ")
                    .aisle("          AAAAAAAAAAA  ", "          A         A  ", "          A         A  ", "           AA     AA   ", "           AA     AA   ", "           AA     AA   ", "           AA     AA   ", "             AAAAA     ", "             AAAAA     ", "             AAAAA     ", "             AAAAA     ", "             AAAAA     ", "            A     A    ", "          AA       AA  ", "         A           A ")
                    .aisle("         AAAAAAAAAAAAA ", "         A           A ", "         A           A ", "          A         A  ", "          A         A  ", "          A         A  ", "          A         A  ", "           AA     AA   ", "           AA     AA   ", "           AA     AA   ", "           AA     AA   ", "           AA     AA   ", "           A       A   ", "          A         A  ", "         A           A ")
                    .aisle("         AAAAAAAAAAAAA ", "         A           A ", "         A           A ", "          A         A  ", "          A         A  ", "          A         A  ", "          A         A  ", "           A       A   ", "           A       A   ", "           A       A   ", "           A       A   ", "           A       A   ", "          A         A  ", "         A           A ", "        A             A")
                    .aisle("CDEDC   AAAAAAAAAAAAAAA", "C   C   A             A", "C   C   A             A", "C   C    A           A ", "C   C    A           A ", "C   C    A           A ", "C   C    A           A ", "C   C     A         A  ", "C   C     A         A  ", "CBDBC     A         A  ", "          A         A  ", "          A         A  ", "         A           A ", "         A           A ", "        A             A")
                    .aisle("EFFFD   AAAAAAAAAAAAAAA", " GGGDDDDA             A", " GGG    A             A", " GGG     A           A ", " GGG     A           A ", " GGG     A           A ", " GGG     A           A ", " GGG      A         A  ", " GGG      A         A  ", "DDDDD     A         A  ", " DDD      A         A  ", "          A         A  ", "         A           A ", "         A           A ", "        A             A")
                    .aisle("IFFFDDDDAAAAAAAAAAAAAAA", " GHG    A             A", " GHGDDDDA             A", " GHG     A           A ", " GHG     A           A ", " GHG     A           A ", " GHG     A           A ", " GHG      A         A  ", " GHG      A         A  ", "BDDDD     A         A  ", " DDD      A         A  ", "          A         A  ", "         A           A ", "         A           A ", "        A             A")
                    .aisle("EFFFD   AAAAAAAAAAAAAAA", " GGGDDDDA             A", " GGG    A             A", " GGG     A           A ", " GGG     A           A ", " GGG     A           A ", " GGG     A           A ", " GGG      A         A  ", " GGG      A         A  ", "DDDDD     A         A  ", " DDD      A         A  ", "          A         A  ", "         A           A ", "         A           A ", "        A             A")
                    .aisle("CD~DC   AAAAAAAAAAAAAAA", "C   C   A             A", "C   C   A             A", "C   C    A           A ", "C   C    A           A ", "C   C    A           A ", "C   C    A           A ", "C   C     A         A  ", "C   C     A         A  ", "CBDBC     A         A  ", "          A         A  ", "          A         A  ", "         A           A ", "         A           A ", "        A             A")
                    .aisle("         AAAAAAAAAAAAA ", "         A           A ", "         A           A ", "          A         A  ", "          A         A  ", "          A         A  ", "          A         A  ", "           A       A   ", "           A       A   ", "           A       A   ", "           A       A   ", "           A       A   ", "          A         A  ", "         A           A ", "        A             A")
                    .aisle("         AAAAAAAAAAAAA ", "         A           A ", "         A           A ", "          A         A  ", "          A         A  ", "          A         A  ", "          A         A  ", "           AA     AA   ", "           AA     AA   ", "           AA     AA   ", "           AA     AA   ", "           AA     AA   ", "           A       A   ", "          A         A  ", "         A           A ")
                    .aisle("          AAAAAAAAAAA  ", "          A         A  ", "          A         A  ", "           AA     AA   ", "           AA     AA   ", "           AA     AA   ", "           AA     AA   ", "             AAAAA     ", "             AAAAA     ", "             AAAAA     ", "             AAAAA     ", "             AAAAA     ", "            A     A    ", "          AA       AA  ", "         A           A ")
                    .aisle("           AAAAAAAAA   ", "           AA     AA   ", "           AA     AA   ", "             AAAAA     ", "             AAAAA     ", "             AAAAA     ", "             AAAAA     ", "                       ", "                       ", "                       ", "                       ", "                       ", "             AAAAA     ", "            AAAAAAA    ", "          AA       AA  ")
                    .aisle("             AAAAA     ", "             AAAAA     ", "             AAAAA     ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "                       ", "            AAAAAAA    ")
                    .where('~', controller(blocks(definition.get())))
                    .where('H', blocks(GTEBlocks.SPEEDING_PIPE.get()))
                    .where('I', blocks(GTEMachines.HEAT_SENSOR.getBlock()))
                    .where('B', blocks(GTEBlocks.PLASMA_HEATER_CASING.get()).or(abilities(IMPORT_FLUIDS).setPreviewCount(2)))
                    .where('E', blocks(GTEBlocks.PLASMA_HEATER_CASING.get()).or(abilities(EXPORT_FLUIDS).setPreviewCount(2)))
                    .where('F', blocks(GTEBlocks.IMPROVED_SUPERCONDUCTOR_COIL.get()))
                    .where('G', blocks(GTEBlocks.CHEMICAL_GRADE_GLASS.get()))
                    .where('D', blocks(GTEBlocks.PLASMA_HEATER_CASING.get()))
                    .where('A', blocks(GTEBlocks.REINFORCED_STERILE_WATER_PLANT_CASING.get()))
                    .where('C', frames(GTMaterials.Naquadria))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/plasma_heater_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();

    MultiblockMachineDefinition HIGH_ENERGY_LASER_PURIFICATION_UNIT = multiblock("high_energy_laser_purification_unit", "高能激光净化装置", HighEnergyLaserPurificationUnitMachine::new)
            .allRotation()
            .tooltipsText("§aPurified Water Level§r: §f6§r", "§a净化水等级§r: §f6§r")
            .tooltipsText("During operation, replace the §bLens§r in the lens chamber.", "在操作过程中，更换透镜仓内的§b透镜§r")
            .tooltipsText("When the current §bLens§r needs to be replaced, the multi-block structure will output a signal through the §bLens§r indicator chamber.", "当当前§b透镜§r需要更换时，多方块结构将通过§b透镜§r指示仓输出信号")
            .tooltipsText("§bLens§r replacement requests will occur at random intervals between §66§r and 12 seconds.", "§b透镜§r更换请求将在§66§r到12秒的随机间隔内出现")
            .tooltipsText("The lens must be replaced within 4 seconds of the signal output.", "需要在信号输出后的4秒内更换透镜")
            .tooltipsText("Each successful replacement followed by 4 seconds of operation increases the success rate by §410%§r.", "每次成功更换后运行4秒将成功率提高§410%§r")
            .tooltipsText("The requirements for §bLens§r can be viewed in the GUI, in a fixed order.", "§b透镜§r需求可在GUI内查看，顺序固定")
            .tooltipsKey("gtocore.machine.clarifier_purification_unit.tooltip.3")
            .tooltipsText("§a§oThe sixth step of water purification is identifying any residual anions in the water, which may cause electrical failures in future wafer manufacturing.", "§a§o水净化的第六步是识别水中任何残留的负离子，这些离子可能会在未来的晶圆制造中引起电气故障")
            .tooltipsText("§a§oBombarding the water with photons of different wavelengths transfers energy to the outer-layer electrons, causing them to detach from the atoms and through the water tank walls, ensuring the water is fully polarized.", "§a§o用不同波长的光子束轰击水，将能量传递给外层电子，使它们从原子中脱离并通过水箱壁，确保水完全电极化")
            .recipe(GTERecipeTypes.WATER_PURIFICATION_PLANT_RECIPES)
            .block(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("     BBB     ", "     CCC     ", "             ", "             ", "             ", "             ", "             ", "     CCC     ", "     BBB     ")
                    .aisle("   AAAAAAA   ", "   CCDDDCC   ", "     DDD     ", "     DDD     ", "     DDD     ", "     DDD     ", "     DDD     ", "   CCAAACC   ", "   AAAAAAA   ")
                    .aisle(" AAAAAAAAAAA ", " CCDD   DDCC ", "   DD   DD   ", "   DD   DD   ", "   DD   DD   ", "   DD   DD   ", "   DD   DD   ", " CCAAEEEAACC ", " AAAAAAAAAAA ")
                    .aisle("BAAAAAAAAAAAB", "CDD       DDC", " DD       DD ", " DD       DD ", " DD       DD ", " DD       DD ", " DD       DD ", "CAAEEEEEEEAAC", "BAAAAAAAAAAAB")
                    .aisle("BAAAAAAAAAAAB", "CD         DC", " D         D ", " D         D ", " D         D ", " D         D ", " D         D ", "CAEEEEEEEEEAC", "BAAAAAFAAAAAB")
                    .aisle("BAAAAAAAAAAAB", "CDD       DDC", " DD       DD ", " DD       DD ", " DD       DD ", " DD       DD ", " DD       DD ", "CAAEEEEEEEAAC", "BAAAAAAAAAAAB")
                    .aisle(" AAAAAAAAAAA ", " CCDD   DDCC ", "   DD   DD   ", "   DD   DD   ", "   DD   DD   ", "   DD   DD   ", "   DD   DD   ", " CCAAEEEAACC ", " AAAAAAAAAAA ")
                    .aisle("   AAAAAAA   ", "   CCDDDCC   ", "     DDD     ", "     DDD     ", "     DDD     ", "     DDD     ", "     DDD     ", "   CCAAACC   ", "   AAAAAAA   ")
                    .aisle("     B~B     ", "     CCC     ", "             ", "             ", "             ", "             ", "             ", "     CCC     ", "     BBB     ")
                    .where('~', controller(blocks(definition.get())))
                    .where('E', blocks(GTEBlocks.HIGH_ENERGY_ULTRAVIOLET_EMITTER_CASING.get()))
                    .where('F', blocks(GTEMachines.LENS_HOUSING.getBlock()))
                    .where('D', blocks(GTEBlocks.ELECTRON_PERMEABLE_AMPROSIUM_COATED_GLASS.get()))
                    .where('A', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get()))
                    .where('B', blocks(GTEBlocks.NAQUADAH_REINFORCED_PLANT_CASING.get())
                            .or(blocks(GTEMachines.LENS_INDICATOR_HATCH.getBlock()).setExactLimit(1))
                            .or(abilities(IMPORT_FLUIDS).setMaxGlobalLimited(1).setPreviewCount(1))
                            .or(abilities(EXPORT_FLUIDS).setMaxGlobalLimited(1).setPreviewCount(1)))
                    .where('C', frames(GTMaterials.Neutronium))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/naquadah_reinforced_plant_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();

    MultiblockMachineDefinition RESIDUAL_DECONTAMINANT_DEGASSER_PURIFICATION_UNIT = multiblock("residual_decontaminant_degasser_purification_unit", "残余污染物脱气净化装置", ResidualDecontaminantDegasserPurificationUnitMachine::new)
            .allRotation()
            .tooltipsText("§aPurified Water Level§r: §f7§r", "§a净化水等级§r: §f7§r")
            .tooltipsText("To successfully complete the recipe, materials must be inputted as required.", "要成功完成配方，需要根据要求输入材料")
            .tooltipsText("At the operation start, the degassing control chamber will output a redstone signal, and the machine will consume all input materials every second.", "操作开始时，脱气控制仓将输出红石信号，机器每秒将消耗全部输入的材料")
            .tooltipsText("The redstone signal corresponds to the demand.", "红石信号与需求相对应")
            .tooltipsText("1, 3, 5, 7, 9: Ozone aeration via §bInert Gases§r", "1, 3, 5, 7, 9：通过§b惰性气体§r进行臭氧曝气")
            .tooltipsText("§610000mB§r§bHelium§r / §68000mB§r§bNeon§r / §66000mB§r§bArgon§r / §64000mB§r§bKrypton§r / §62000mB§r§bXenon§r", "§610000mB§r§b氦气§r / §68000mB§r§b氖气§r / §66000mB§r§b氩气§r / §64000mB§r§b氪气§r / §62000mB§r§b氙气§r")
            .tooltipsText("2, 4, 6, 8, 10: Superconductive deionization", "2, 4, 6, 8, 10：超导去离子")
            .tooltipsText("Needs input of 1000mB of liquid superconductors corresponding to IV, LuV, ZPM, UV, UHV.", "需要输入1000mB对应IV，LuV，ZPM，UV，UHV的液态超导")
            .tooltipsText("11, 13, 15: Gravitational Differential Vacuum Extraction", "11, 13, 15：引力生成差异真空提取")
            .tooltipsText("Requires input of §62000mB§r§bLiquid Amprosiums§r.", "需要输入§62000mB§r§b液态安普洛§r")
            .tooltipsText("12, 14: Seldenian precipitation process", "12, 14：塞尔多尼安沉淀过程")
            .tooltipsText("Do not input anything.", "不输入任何东西")
            .tooltipsText("0: Machine overload", "0：机器过载")
            .tooltipsText("In rare situations, the machine may overload and not output any control signals.", "在罕见情况下，机器可能会过载并且不会输出任何控制信号")
            .tooltipsText("To prevent machine damage, input §610000mB§r§bLiquid Helium§r.", "为防止机器损坏，输入§610000mB§r§b液氦§r")
            .tooltipsText("Any liquid not requested by the input signal will always cause the recipe to fail.", "输入信号未请求的任何流体将始终导致配方失败")
            .tooltipsKey("gtocore.machine.clarifier_purification_unit.tooltip.3")
            .tooltipsText("§a§oThe penultimate step of water purification, step seven, consists of a series of irregular complex processes,", "§a§o水净化的倒数第二步，第七步，是一系列不规则的复杂过程，")
            .tooltipsText("§a§oaimed at removing any residues of decontaminants that may linger from the previous steps,", "§a§o旨在去除前几个步骤的除污剂可能残留的任何残留物，")
            .tooltipsText("§a§obased on the materials detected in the water by the degasser, it will request various materials to complete the above processes.", "§a§o根据脱气器检测到的水中物质，它会请求各种材料以完成上述过程")
            .recipe(GTERecipeTypes.WATER_PURIFICATION_PLANT_RECIPES)
            .block(GTEBlocks.PLASMA_HEATER_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle("    AAAAAAAAA    ", "      AAAAABB    ", "         BB      ", "        B        ", "      BB         ", "     B           ", "                 ", "                 ", "                 ", "           B     ", "         BB      ", "        B        ", "      BB         ", "     B           ", "                 ", "                 ", "                 ", "           B     ", "         BB      ", "        B        ", "      BB         ", "     B           ", "                 ", "      AAAAAA     ", "    AAAAAAAAA    ")
                    .aisle("  AAAAAAAAAAAAA  ", "    AAAAAAAAA    ", "      DDDDD      ", "      DDDDD      ", "      DDDDD      ", "       DDD       ", "    B   D        ", "                 ", "            B    ", "                 ", "                 ", "                 ", "                 ", "                 ", "    B            ", "                 ", "            B    ", "                 ", "        D        ", "       DDD       ", "      DDDDD      ", "      DDDDD      ", "   BB DDDDD      ", "    AAAAAAAAAB   ", "  AAAAAAAAAAAAA  ")
                    .aisle("  AAAAAAAAAAAAA  ", "   AAAAAAAAAAA   ", "    DD     DD    ", "    DD     DD    ", "    DD     DD    ", "     DD   DD     ", "     DDD DDD     ", "   B  DDDDD  B   ", "       DDD       ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ", "   B         B   ", "       DDD       ", "      DDDDD      ", "     DDD DDD     ", "     DD   DD     ", "    DD     DD    ", "    DD     DD    ", "    DD     DD B  ", "  BAAAAAAAAAAA   ", "  AAAAAAAAAAAAA  ")
                    .aisle(" AAAAAAAAAAAAAAA ", " BAAAAAAAAAAAAA  ", "   D         D   ", "   D         D   ", "   D         D   ", "    D       D    ", "    D       D B  ", "    DD     DD    ", "  B  DD   DD     ", "      DDDDD      ", "       DDD       ", "                 ", "                 ", "                 ", "       DDD    B  ", "      DDDDD      ", "  B  DD   DD     ", "    DD     DD    ", "    D       D    ", "    D       D    ", "   D         D   ", "   D         D   ", "   D         DB  ", "  AAAAAAAAAAAAA  ", " AAAAAAAAAAAAAAA ")
                    .aisle(" AAAAAAAAAAAAAAA ", " BAAAAAAAAAAAAA  ", "   D         D   ", "   D         D   ", "   D         D   ", "   D         D B ", "   D         D   ", "    D       D    ", "    D       D    ", " B   D     D     ", "      D   D      ", "       DDD       ", "                 ", "       DDD     B ", "      D   D      ", "     D     D     ", "    D       D    ", " B  D       D    ", "   D         D   ", "   D         D   ", "   D         D   ", "   D         D B ", "   D         D   ", "  AAAAAAAAAAAAA  ", " AAAAAAAAAAAAAAA ")
                    .aisle("CAAAAAAAAAAAAAAAC", " AAAAAAAAAAAAAAA ", " BD           D  ", "  D           D  ", "  D           DB ", "   D         D   ", "   D         D   ", "   D         D   ", "    D       D    ", "    D       D    ", " B   D     D     ", "      DDDDD      ", "       DDD     B ", "      DDDDD      ", "     D     D     ", "    D       D    ", "    D       D    ", "   D         D   ", " B D         D   ", "   D         D   ", "  D           DB ", "  D           D  ", "  D           D  ", " AAAAAAAAAAAAAAA ", "AAAAAAAAAAAAAAAAA")
                    .aisle("CAAAAAAAAAAAAAAAC", " AAAAAAAAAAAAAAA ", " BD           D  ", "  D           D  ", "  D           DB ", "  D           D  ", "   D         D   ", "   D         D   ", "   D         D   ", "    D       D    ", " B  D       D    ", "     DD   DD     ", "      DDDDD    B ", "     DD   DD     ", "    D       D    ", "    D       D    ", "   D         D   ", "   D         D   ", " B D         D   ", "  D           D  ", "  D           DB ", "  D           D  ", "  D           D  ", " AAAAAAAAAAAAAAA ", "AAAAAAAAAAAAAAAAA")
                    .aisle("CAAAAAAAAAAAAAAAC", " AAAAAAAAAAAAAAA ", "  D           D  ", " BD           DB ", "  D           D  ", "  D           D  ", "  D           D  ", "   D         D   ", "   D         D   ", "    D       D    ", "    D       D    ", " B   DD   DD   B ", "      DD DD      ", "     DD   DD     ", "    D       D    ", "    D       D    ", "   D         D   ", "   D         D   ", "  D           D  ", " BD           DB ", "  D           D  ", "  D           D  ", "  D           D  ", " AAAAAAAAAAAAAAA ", "AAAAAAAAAAAAAAAAA")
                    .aisle("CAAAAAAAAAAAAAAAC", " AAAAAAAAAAAAAAA ", "  D           DB ", "  D           D  ", " BD           D  ", "  D           D  ", "   D         D   ", "   D         D   ", "   D         D   ", "    D       D    ", "    D       D  B ", "     DD   DD     ", " B    DDDDD      ", "     DD   DD     ", "    D       D    ", "    D       D    ", "   D         D   ", "   D         D   ", "   D         D B ", "  D           D  ", " BD           D  ", "  D           D  ", "  D           D  ", " AAAAAAAAAAAAAAA ", "AAAAAAAAAAAAAAAAA")
                    .aisle("CAAAAAAAAAAAAAAAC", " AAAAAAAAAAAAAAA ", "  D           DB ", "  D           D  ", " BD           D  ", "   D         D   ", "   D         D   ", "   D         D   ", "    D       D    ", "    D       D    ", "     D     D   B ", "      DDDDD      ", " B     DDD       ", "      DDDDD      ", "     D     D     ", "    D       D    ", "    D       D    ", "   D         D   ", "   D         D B ", "   D         D   ", " BD           D  ", "  D           D  ", "  D           D  ", " AAAAAAAAAAAAAAA ", "AAAAAAAAAAAAAAAAA")
                    .aisle(" AAAAAAAAAAAAAAA ", "  AAAAAAAAAAAAAB ", "   D         D   ", "   D         D   ", "   D         D   ", " B D         D   ", "   D         D   ", "    D       D    ", "    D       D    ", "     D     D   B ", "      D   D      ", "       DDD       ", "                 ", " B     DDD       ", "      D   D      ", "     D     D     ", "    D       D    ", "    D       D  B ", "   D         D   ", "   D         D   ", "   D         D   ", " B D         D   ", "   D         D   ", "  AAAAAAAAAAAAA  ", " AAAAAAAAAAAAAAA ")
                    .aisle(" AAAAAAAAAAAAAAA ", "  AAAAAAAAAAAAAB ", "   D         D   ", "   D         D   ", "   D         D   ", "    D       D    ", "  B D       D    ", "    DD     DD    ", "     DD   DD  B  ", "      DDDDD      ", "       DDD       ", "                 ", "                 ", "                 ", "  B    DDD       ", "      DDDDD      ", "     DD   DD  B  ", "    DD     DD    ", "    D       D    ", "    D       D    ", "   D         D   ", "   D         D   ", "  BD         D   ", "  AAAAAAAAAAAAA  ", " AAAAAAAAAAAAAAA ")
                    .aisle("  AAAAAAAAAAAAA  ", "   AAAAAAAAAAA   ", "    DD     DD    ", "    DD     DD    ", "    DD     DD    ", "     DD   DD     ", "     DDD DDD     ", "   B  DDDDD  B   ", "       DDD       ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ", "   B         B   ", "       DDD       ", "      DDDDD      ", "     DDD DDD     ", "     DD   DD     ", "    DD     DD    ", "    DD     DD    ", "  B DD     DD    ", "   AAAAAAAAAAAB  ", "  AAAAAAAAAAAAA  ")
                    .aisle("  AAAAAAAAAAAAA  ", "    AAAAAAAAA    ", "      DDDDD      ", "      DDDDD      ", "      DDDDD      ", "       DDD       ", "        D   B    ", "                 ", "    B            ", "                 ", "                 ", "                 ", "                 ", "                 ", "            B    ", "                 ", "    B            ", "                 ", "        D        ", "       DDD       ", "      DDDDD      ", "      DDDDD      ", "      DDDDD BB   ", "   BAAAAAAAAA    ", "  AAAAAAAAAAAAA  ")
                    .aisle("    AAAAAAAAA    ", "    BBAA~AA      ", "      BB         ", "        B        ", "         BB      ", "           B     ", "                 ", "                 ", "                 ", "     B           ", "      BB         ", "        B        ", "         BB      ", "           B     ", "                 ", "                 ", "                 ", "     B           ", "      BB         ", "        B        ", "         BB      ", "           B     ", "                 ", "      AAAAA      ", "    AAAAAAAAA    ")
                    .aisle
                    .where('~', controller(blocks(definition.get())))
                    .where('D', blocks(GTEBlocks.OMNI_PURPOSE_INFINITY_FUSED_GLASS.get()))
                    .where('A', blocks(GTEBlocks.PLASMA_HEATER_CASING.get()))
                    .where('C', blocks(GTEBlocks.PLASMA_HEATER_CASING.get())
                            .or(blocks(GTEMachines.DEGASSING_CONTROL_HATCH.getBlock()).setExactLimit(1))
                            .or(abilities(IMPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1))
                            .or(abilities(EXPORT_FLUIDS).setMaxGlobalLimited(1).setPreviewCount(1)))
                    .where('B', frames(GTMaterials.Naquadria))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/plasma_heater_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();

    MultiblockMachineDefinition ABSOLUTE_BARYONIC_PERFECTION_PURIFICATION_UNIT = multiblock("absolute_baryonic_perfection_purification_unit", "绝对重子完美净化装置", AbsoluteBaryonicPerfectionPurificationUnitMachine::new)
            .allRotation()
            .tooltipsText("§aPurified Water Level§r: §f8§r", "§a净化水等级§r: §f8§r")
            .tooltipsText("Put §bQuark Releasing Catalyst§r into the input bus to operate.", "将§b夸克释放催化剂§r放入输入总线中运行")
            .tooltipsText("Each recipe cycle, different combinations of two §bQuark Releasing Catalysts§r will correctly identify the §bIsolated Quarks§r and complete the recipe.", "每个配方循环中，不同的两种§b夸克释放催化剂§r的组合将正确识别出§b孤立的夸克§r并完成配方")
            .tooltipsText("Consumes all §bCatalysts§r in the input slot every second, and for each quark catalyst consumed, an additional 144mB of quark gluon plasma is required.", "每秒消耗输入槽中的所有§b催化剂§r，每消耗一个夸克催化剂还需额外消耗144mB夸克胶子等离子体")
            .tooltipsText("If the last two inserted §bCatalysts§r are the correct combination, §bStable Baryonic Matter§r will be output immediately.", "如果最近插入的两种§b催化剂§r是正确的组合，则立即输出§b稳定重子物质§r")
            .tooltipsText("At the end of the recipe, all incorrectly inserted §bCatalysts§r will return to the output slot.", "在配方结束时，所有错误插入的§b催化剂§r将返回输出槽")
            .tooltipsKey("gtocore.machine.clarifier_purification_unit.tooltip.3")
            .tooltipsText("§a§oThe final stage of purification transcends subatomic particles, identifying the smallest possible defects within baryons.", "§a§o净化水的最后阶段超越了亚原子粒子，识别出重子内最小的可能缺陷")
            .tooltipsText("§a§oBy correctly identifying the required Quark Releasing Catalysts, the device will activate the catalysts and stabilize off-kilter particles.", "§a§o通过正确识别需要的夸克释放催化剂，装置将激活催化剂，稳定偏离的粒子")
            .tooltipsText("§a§oThis ultimately creates not just stable baryonic matter, but most importantly, absolutely purified water.", "§a§o这最终不仅会创造出稳定的重子物质，而且最重要的是，创造出绝对完美净化的水")
            .recipe(GTERecipeTypes.WATER_PURIFICATION_PLANT_RECIPES)
            .block(GTEBlocks.QUARK_EXCLUSION_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("                 ", "                 ", "                 ", "                 ", "                 ", "                 ", "      AAAAA      ", "      AAAAA      ", "      AAAAA      ", "      AAAAA      ", "      AAAAA      ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ")
                    .aisle("                 ", "        C        ", "        C        ", "        C        ", "        C        ", "        C        ", "      AAAAA      ", "      AAAAA      ", " CCCCCAAAAACCCCC ", "      AAAAA      ", "      AAAAA      ", "        C        ", "        C        ", "        C        ", "        C        ", "        C        ", "                 ")
                    .aisle("                 ", "        C        ", "                 ", "                 ", "                 ", "                 ", "      DDDDD      ", "      DEEED      ", " C    DEFED    C ", "      DEEED      ", "      DDDDD      ", "                 ", "                 ", "                 ", "                 ", "        C        ", "                 ")
                    .aisle("                 ", "        C        ", "                 ", "                 ", "                 ", "                 ", "                 ", "       EEE       ", " C     EFE     C ", "       EEE       ", "                 ", "                 ", "                 ", "                 ", "                 ", "        C        ", "                 ")
                    .aisle("                 ", "        C        ", "                 ", "                 ", "                 ", "                 ", "                 ", "       EEE       ", " C     EFE     C ", "       EEE       ", "                 ", "                 ", "                 ", "                 ", "                 ", "        C        ", "                 ")
                    .aisle("                 ", "        C        ", "                 ", "                 ", "                 ", "                 ", "                 ", "       EEE       ", " C     EFE     C ", "       EEE       ", "                 ", "                 ", "                 ", "                 ", "                 ", "        C        ", "                 ")
                    .aisle("      AAAAA      ", "      AAAAA      ", "      DDDDD      ", "                 ", "                 ", "                 ", "AAD   AAAAA   DAA", "AAD    EEE    DAA", "AAD    EFE    DAA", "AAD    EEE    DAA", "AAD   AAAAA   DAA", "                 ", "                 ", "                 ", "      DDDDD      ", "      AAAAA      ", "      AAAAA      ")
                    .aisle("      AAAAA      ", "      AAAAA      ", "      DEEED      ", "       EEE       ", "       EEE       ", "       EEE       ", "AAD   AEEEA   DAA", "AAEEEEE   EEEEEAA", "AAEEEEE F EEEEEAA", "AAEEEEE   EEEEEAA", "AAD   AEEEA   DAA", "       EEE       ", "       EEE       ", "       EEE       ", "      DEEED      ", "      AAAAA      ", "      AAAAA      ")
                    .aisle("      AAAAA      ", " CCCCCAAAAACCCCC ", " C    DEFED    C ", " C     EFE     C ", " C     EFE     C ", " C     EFE     C ", "AAD   AEFEA   DAA", "AAEEEEE F EEEEEAA", "AAFFFFFFFFFFFFFAA", "AAEEEEE F EEEEEAA", "AAD   AEFEA   DAA", " C     EFE     C ", " C     EFE     C ", " C     EFE     C ", " C    DEFED    C ", " CCCCCAAAAACCCCC ", "      AAAAA      ")
                    .aisle("      AAAAA      ", "      AAAAA      ", "      DEEED      ", "       EEE       ", "       EEE       ", "       EEE       ", "AAD   AEEEA   DAA", "AAEEEEE   EEEEEAA", "AAEEEEE F EEEEEAA", "AAEEEEE   EEEEEAA", "AAD   AEEEA   DAA", "       EEE       ", "       EEE       ", "       EEE       ", "      DEEED      ", "      AAAAA      ", "      AAAAA      ")
                    .aisle("      AAAAA      ", "      AAAAA      ", "      DDDDD      ", "                 ", "                 ", "                 ", "AAD   AAAAA   DAA", "AAD    EEE    DAA", "AAD    EFE    DAA", "AAD    EEE    DAA", "AAD   AAAAA   DAA", "                 ", "                 ", "                 ", "      DDDDD      ", "      AAAAA      ", "      AAAAA      ")
                    .aisle("                 ", "        C        ", "                 ", "                 ", "                 ", "                 ", "                 ", "       EEE       ", " C     EFE     C ", "       EEE       ", "                 ", "                 ", "                 ", "                 ", "                 ", "        C        ", "                 ")
                    .aisle("                 ", "        C        ", "                 ", "                 ", "                 ", "                 ", "                 ", "       EEE       ", " C     EFE     C ", "       EEE       ", "                 ", "                 ", "                 ", "                 ", "                 ", "        C        ", "                 ")
                    .aisle("                 ", "        C        ", "                 ", "                 ", "                 ", "                 ", "                 ", "       EEE       ", " C     EFE     C ", "       EEE       ", "                 ", "                 ", "                 ", "                 ", "                 ", "        C        ", "                 ")
                    .aisle("                 ", "        C        ", "                 ", "                 ", "                 ", "                 ", "      DDDDD      ", "      DEEED      ", " C    DEFED    C ", "      DEEED      ", "      DDDDD      ", "                 ", "                 ", "                 ", "                 ", "        C        ", "                 ")
                    .aisle("                 ", "        C        ", "        C        ", "        C        ", "        C        ", "        C        ", "      AAAAA      ", "      AAAAA      ", " CCCCCAAAAACCCCC ", "      AAAAA      ", "      AAAAA      ", "        C        ", "        C        ", "        C        ", "        C        ", "        C        ", "                 ")
                    .aisle("                 ", "                 ", "                 ", "                 ", "                 ", "                 ", "      BBBBB      ", "      BBBBB      ", "      BB~BB      ", "      BBBBB      ", "      BBBBB      ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ")
                    .where('~', controller(blocks(definition.get())))
                    .where('C', frames(GTMaterials.NaquadahAlloy))
                    .where('D', blocks(GTEBlocks.DIMENSION_INJECTION_CASING.get()))
                    .where('E', blocks(GTEBlocks.NON_PHOTONIC_MATTER_EXCLUSION_GLASS.get()))
                    .where('F', blocks(GTEBlocks.QUARK_PIPE.get()))
                    .where('A', blocks(GTEBlocks.QUARK_EXCLUSION_CASING.get()))
                    .where('B', blocks(GTEBlocks.QUARK_EXCLUSION_CASING.get())
                            .or(abilities(IMPORT_ITEMS).setMaxGlobalLimited(1).setPreviewCount(1))
                            .or(abilities(EXPORT_ITEMS).setMaxGlobalLimited(1).setPreviewCount(1))
                            .or(abilities(IMPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1))
                            .or(abilities(EXPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTECore.id("block/casings/quark_exclusion_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();
}
